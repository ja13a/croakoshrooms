/*! For license information please see main.bundle.js.LICENSE.txt */
var webpackGhPages;(()=>{var e={264:(e,t,n)=>{e.exports=n(588)},705:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",s=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),s&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),s&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,s,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(s)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(i[l]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);s&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},742:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},738:e=>{"use strict";e.exports=function(e){return e[1]}},933:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=l(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return w}else{if(e<=-f)return I;if(e+1>=f)return k}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var b=i(0,!0);n.UZERO=b;var x=i(1);n.ONE=x;var y=i(1,!0);n.UONE=y;var v=i(-1);n.NEG_ONE=v;var k=l(-1,2147483647,!1);n.MAX_VALUE=k;var w=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=w;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var A=n.prototype;A.toInt=function(){return this.unsigned?this.low>>>0:this.low},A.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},A.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(r),c=(a.sub(l.mul(r)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},A.getHighBits=function(){return this.high},A.getHighBitsUnsigned=function(){return this.high>>>0},A.getLowBits=function(){return this.low},A.getLowBitsUnsigned=function(){return this.low>>>0},A.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},A.isZero=function(){return 0===this.high&&0===this.low},A.eqz=A.isZero,A.isNegative=function(){return!this.unsigned&&this.high<0},A.isPositive=function(){return this.unsigned||this.high>=0},A.isOdd=function(){return 1==(1&this.low)},A.isEven=function(){return 0==(1&this.low)},A.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},A.eq=A.equals,A.notEquals=function(e){return!this.eq(e)},A.neq=A.notEquals,A.ne=A.notEquals,A.lessThan=function(e){return this.comp(e)<0},A.lt=A.lessThan,A.lessThanOrEqual=function(e){return this.comp(e)<=0},A.lte=A.lessThanOrEqual,A.le=A.lessThanOrEqual,A.greaterThan=function(e){return this.comp(e)>0},A.gt=A.greaterThan,A.greaterThanOrEqual=function(e){return this.comp(e)>=0},A.gte=A.greaterThanOrEqual,A.ge=A.greaterThanOrEqual,A.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},A.comp=A.compare,A.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},A.neg=A.negate,A.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=r+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},A.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},A.sub=A.subtract,A.multiply=function(e){if(this.isZero())return g;if(s(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,x=0,y=0;return x+=(y+=i*p)>>>16,b+=(x+=a*p)>>>16,x&=65535,b+=(x+=i*d)>>>16,f+=(b+=r*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+r*d+a*c+i*u,l((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},A.mul=A.multiply,A.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return y;a=b}else{if(this.eq(I))return e.eq(x)||e.eq(v)?I:e.eq(I)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:v:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),a=a.add(d),r=r.sub(p)}return a},A.div=A.divide,A.modulo=function(e){return s(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},A.mod=A.modulo,A.rem=A.modulo,A.not=function(){return l(~this.low,~this.high,this.unsigned)},A.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},A.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},A.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},A.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},A.shl=A.shiftLeft,A.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},A.shr=A.shiftRight,A.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},A.shru=A.shiftRightUnsigned,A.shr_u=A.shiftRightUnsigned,A.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},A.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},A.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},A.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},A.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},588:e=>{var t=function(e){"use strict";var t,n=Object.prototype,s=n.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function u(e,t,n,s){var r=t&&t.prototype instanceof g?t:g,a=Object.create(r.prototype),i=new T(s||[]);return a._invoke=function(e,t,n){var s=h;return function(r,a){if(s===p)throw new Error("Generator is already running");if(s===f){if("throw"===r)throw a;return R()}for(n.method=r,n.arg=a;;){var i=n.delegate;if(i){var o=S(i,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(s===h)throw s=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);s=p;var l=c(e,t,n);if("normal"===l.type){if(s=n.done?f:d,l.arg===m)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(s=f,n.method="throw",n.arg=l.arg)}}}(e,n,i),a}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var h="suspendedStart",d="suspendedYield",p="executing",f="completed",m={};function g(){}function b(){}function x(){}var y={};l(y,a,(function(){return this}));var v=Object.getPrototypeOf,k=v&&v(v(E([])));k&&k!==n&&s.call(k,a)&&(y=k);var w=x.prototype=g.prototype=Object.create(y);function I(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){function n(r,a,i,o){var l=c(e[r],e,a);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==typeof h&&s.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(h).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var r;this._invoke=function(e,s){function a(){return new t((function(t,r){n(e,s,t,r)}))}return r=r?r.then(a,a):a()}}function S(e,n){var s=e.iterator[n.method];if(s===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,S(e,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var r=c(s,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,m;var a=r.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function N(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(N,this),this.reset(!0)}function E(e){if(e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function n(){for(;++r<e.length;)if(s.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return b.prototype=x,l(w,"constructor",x),l(x,"constructor",b),b.displayName=l(x,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,l(e,o,"GeneratorFunction")),e.prototype=Object.create(w),e},e.awrap=function(e){return{__await:e}},I(A.prototype),l(A.prototype,i,(function(){return this})),e.AsyncIterator=A,e.async=function(t,n,s,r,a){void 0===a&&(a=Promise);var i=new A(u(t,n,s,r),a);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},I(w),l(w,o,"Generator"),l(w,a,(function(){return this})),l(w,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var s=t.pop();if(s in e)return n.value=s,n.done=!1,n}return n.done=!0,n}},e.values=E,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var n in this)"t"===n.charAt(0)&&s.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(s,r){return o.type="throw",o.arg=e,n.next=s,r&&(n.method="next",n.arg=t),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var l=s.call(i,"catchLoc"),u=s.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&s.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),C(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var s=n.completion;if("throw"===s.type){var r=s.arg;C(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,s){return this.delegate={iterator:E(e),resultName:n,nextLoc:s},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},600:(e,t,n)=>{var s=n(906),r=n(930),a=n(319),i=n(866),o=n(217),l=n(977),u=n(84);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},906:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},977:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},930:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},217:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},866:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},319:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},84:(e,t,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var s=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(r)]}}():e,3),s),p=new f(s),y=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(y,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),r),e.exports){e.exports=p;try{i=n(42)}catch(e){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}([],Math)},560:(e,t,n)=>{"use strict";n.d(t,{Z:()=>W});var s=n(738),r=n.n(s),a=n(705),i=n.n(a),o=n(742),l=n.n(o),u=new URL(n(658),n.b),c=new URL(n(688),n.b),h=new URL(n(858),n.b),d=new URL(n(743),n.b),p=new URL(n(444),n.b),f=new URL(n(329),n.b),m=new URL(n(148),n.b),g=new URL(n(182),n.b),b=new URL(n(787),n.b),x=new URL(n(872),n.b),y=new URL(n(915),n.b),v=new URL(n(864),n.b),k=new URL(n(260),n.b),w=new URL(n(356),n.b),I=i()(r()),A=l()(u),S=l()(c),N=l()(h),C=l()(d),T=l()(p),E=l()(f),R=l()(m),F=l()(g),D=l()(b),O=l()(x),L=l()(y),M=l()(v),z=l()(k),P=l()(w);I.push([e.id,'@font-face{font-family:"JetBrains Mono";font-style:normal;font-weight:200;src:local(""),url('+A+') format("woff2"),url('+S+') format("woff")}@font-face{font-family:"JetBrains Mono";font-style:normal;font-weight:400;src:local(""),url('+N+') format("woff2"),url('+C+') format("woff")}@font-face{font-family:"JetBrains Mono";font-style:normal;font-weight:800;src:local(""),url('+T+') format("woff2"),url('+E+') format("woff")}html{color:#fff;font-size:8px}body{margin:0;font-family:"JetBrains Mono",sans-serif;background-color:#1a1a1a}.header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin:40px auto 65px}.header__text-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-bottom:1em}.header__title{font-size:8em}.header__subtitle{margin-top:-6px;margin-left:6px;color:#8c8c8c;font-size:3em}.navigation{margin:8px 0 0 6px}.navigation__list{display:-webkit-box;display:-ms-flexbox;display:flex;gap:2em;margin:0;padding:0;list-style:none}.navigation__link{display:-webkit-box;display:-ms-flexbox;display:flex;height:21px;font-size:2em;gap:5px}.navigation__icon{width:21px;height:21px;background-color:#fff}.app{display:-webkit-box;display:-ms-flexbox;display:flex;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;min-height:600px;margin:0 auto}.app__image-placeholder{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:250px;height:450px;color:#8c8c8c;border:1px dashed #fff;border-radius:8px;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;gap:20px}.app__image-placeholder[data-drag=true]{color:#fff;background-color:#272727}.app__image-placeholder[data-drag=true]>div.image-file-icon{background-color:#fff}.app__browse-file-button{width:calc(100% - 16px);margin:auto 8px 8px}.app__drag-and-drop-text{width:220px;margin:auto;color:inherit;font-size:3em;text-align:center}.app__start-tip{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;width:350px;margin-top:40px;margin-left:100px;font-size:4em;text-align:center}.app__loader-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;min-width:450px;min-height:400px}.result__result-title{font-size:4em}.result__image-continer{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.result__image{-o-object-fit:contain;object-fit:contain;max-width:400px;max-height:600px;border-radius:8px}.result__data-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin:-8px 0 0 25px;gap:15px}.result__item-probability{font-size:4em}.result__item-title{margin-left:10px;color:#fff;font-size:3em}.result__item-lat-titel{color:#8c8c8c;font-size:2em}.result__links-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;height:30px;margin-top:5px;gap:15px}.result__icon-link{display:block;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;cursor:pointer}.result__icon-link:hover{background-color:#8bab3e}.result__restart-button{margin-top:40px}.source-icon{-webkit-mask:url('+R+") no-repeat;mask:url("+R+") no-repeat}.about-icon{-webkit-mask:url("+F+") no-repeat;mask:url("+F+") no-repeat}.contact-icon{-webkit-mask:url("+D+") no-repeat;mask:url("+D+") no-repeat}.image-file-icon{width:75px;height:100px;margin:40px auto;-webkit-mask:url("+O+");mask:url("+O+");background-color:#8c8c8c}.arrow-left-icon{width:72px;height:50px;margin-top:50px;margin-right:50px;-webkit-mask:url("+L+");mask:url("+L+");background-color:#8c8c8c}.wikipedia-icon{width:22px;height:18px;-webkit-mask:url("+M+") no-repeat;mask:url("+M+") no-repeat;background-color:#fff}.google-icon{width:18px;height:18px;-webkit-mask:url("+z+") no-repeat;mask:url("+z+") no-repeat;background-color:#fff}.mushroom-observer-icon{width:18px;height:18px;-webkit-mask:url("+P+") no-repeat;mask:url("+P+") no-repeat;background-color:#fff}.link{color:#fff;text-decoration:none;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.link:hover{color:#8bab3e}.link:hover>div{background-color:#8bab3e}.loader{width:100px;height:100px;border:16px solid #272727;border-top:16px solid #8bab3e;border-radius:50%;-webkit-animation:spin 2s linear infinite;animation:spin 2s linear infinite}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.button{height:50px;color:#fff;font-size:2em;border:1px solid #fff;border-radius:8px;background:#1a1a1a;-webkit-transition:all .4s;-o-transition:all .4s;transition:all .4s}.button:hover{color:#1a1a1a;background-color:#fff;cursor:pointer}",""]);const W=I},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,s=0;s<t.length;s++)if(t[s].identifier===e){n=s;break}return n}function s(e,s){for(var a={},i=[],o=0;o<e.length;o++){var l=e[o],u=s.base?l[0]+s.base:l[0],c=a[u]||0,h="".concat(u," ").concat(c);a[u]=c+1;var d=n(h),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var f=r(p,s);s.byIndex=o,t.splice(o,0,{identifier:h,updater:f,references:1})}i.push(h)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=s(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var o=n(a[i]);t[o].references--}for(var l=s(e,r),u=0;u<a.length;u++){var c=n(a[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var s=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,r&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(s,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},688:e=>{"use strict";e.exports="data:font/woff;base64,d09GRgABAAAAAMcIABAAAAABtuwAAQABAAAAAAAAAAAAAAAAAAAAAAAAAABHREVGAAABbAAAAPIAAAFyZOhk5EdQT1MAAAJgAAAC/gAADRqHPXaDR1NVQgAABWAAACHZAABPNLYR/HJPUy8yAAAnPAAAAFoAAABgEFsGgVNUQVQAACeYAAAAPQAAAEzlfcwlY21hcAAAJ9gAAAdpAAAKQugRZVNnYXNwAAAvRAAAAAgAAAAIAAAAEGdseWYAAC9MAAB3bwAA/v42/Xl0aGVhZAAAprwAAAA2AAAANhSQ8UNoaGVhAACm9AAAACAAAAAkAcoFnGhtdHgAAKcUAAAEUQAAEi4YSsSobG9jYQAAq2gAAAinAAAJII13y5xtYXhwAAC0EAAAABwAAAAgBQcCb25hbWUAALQsAAABJgAAAr5G3mvucG9zdAAAtVQAABGpAAAvj2FHCJVwcmVwAADHAAAAAAcAAAAHaAaMhXjaJcQDbJhhGATg977+s43Ynu14Mee1jWvbRpzUtu3Gqm3btt1LengEInJVzqLko0Ae8I/lP9UTB+rEQlzEjwZKI22WDtorc3RR1uk2zglwEdfpTdyl9/GUvsJn+g2/6B/oUn2YUHOYU0tYUjvYUxe4Und4Um/40kAE0mAE0zBE0FjE0njE0yQk0zSk0xzk0kIU0hKU0DKU00pU0hrU0Va00U700QEM0mEM01GM0nFM0ClM0Vks0RWs013s0gMcCJQooefVeXpRXaTX1S16R92h99Q9mqNyaKkqFWgvtDeio73TvtOfmiF10PxF5xQAAz9YAAB42s2WA9AdSxCFz5m3Sd3dPNu2bSu2bdu2bdu2UYht27aNrt5oKpt/b5w61d929WDHMyAAD+/ia5h//0+UCo8Xyl6qCB6HAwAXL2o6C2cvURARAFRzNJUSIR7Fh3iEZUw5GDjO1873gPOj8z9iOWmcfHjWKevUwQcw+AHECwBeRib5ZkFZZEB5USlURG2URj3MQzUswFJMxyrsxlzswxGsxwnGwjZG+DiO8Uk+i7N8nl8Q/Ja/8WX+ybR8l+mZmb8yKwvyLxYRJWExUVKWZhkmY0VWYgpWYTWmYg3WkhL1RBnYUpSRbdiOmdhZlJVdRdnYgz2ZnX3Ylzk5iIOZm8NFeTlKlI9jOJb5OU1UkDM5m4W4iItZlMu4msW5lutYlhtE5blJVIFbuFVasF1Umbu4X9pxkEekFadE9XhWVN/AgA1MbBObDU3ERNjIPG6eYmPzjHmGzc1z5jm2MIPMILY0o81otsIPQJy/ffOOAdigfjRGbIOJk+0GA/ZIegYAh8ROqB+NUexqPTin3/B2hNTJiHkfxFwh+YlZI0ygfFz5GsDWXjrAy/KwEHA3ie2LmX7OAL4t9uF9ot/aatqqcAa0+W6Nm7sDAHxa8ToSHXNTNhK2iO4v3ud3j267UAaXffs6auRujGQ43S73m+E9utNeAwH8X1fpw8A/tT0+E4mlCOGfwiz3h24vAIiG3pNiz981vgoAFnV83GFiYwI4QFurvoyq+CH80/v57tGdFM6o6pkCuLNupOcAnhczdXQW3IxS/7f6l6gJuMvCGFYDcH9o3adr7Dsr+DTwPrfv35jPGeuu0T3rHtGySmvXWG3TOT0FuBesuM5XwGq/rg3X37lWm0PuLLseO2LXaZcK5J/K/+0e2fMbOPs/22X9U8uvE+SXZg2IdsouQlJyCd9Wv7byI33H7dA8ZzTyp59H4uILiboayaf8RPm95vxKmc/3NZ5AS33m088pvlD9X8QXql/Hr1/LjgPUnyTsovH/lJ8qv1J+4RPQ+BoIgUvjPeX7AAB42lzKA4AcQRBA0V/rjW3bPtu2bce2bdu2bdu2bVsTo/GKCJCN4SoNKmdX72ByNUxo2Zh8xAMNMDhEupQh2skhuAz2ToGK0V4OkYo+ft5l8A3081HyYGWqGOhVhnT48gU1oEJRyTWAKLnmn0r7e0/+29OhT0po2JIaSUmNmorzd31TmyckSWTDJkkNJf67qd9tCPQHVGgxkou85KcghSlKcUpRjgpUpho1qEU9TLDAClscccEdL3zwJ4gQwogklngSSSWDLBrRlBa0oi0d6UxXutOTPvRnIEMYxkjGMJ6JTGEGs5nLfBayhOWsZi3r2cQ2drKbfRzkMEc5wWnOc4krXOMGt7nLQx7zjJe84T2fBFGLToySQ3JJXskvhaSIFJOSUkbKSQWpJFWkutSUOlJPGoipmIulWIut2IujOIuruIuneIuv+EugBEuohEukREusxEsioJZkSZNMQPMj+56LNP1uo+82/G6WNFPdVJuq/dXTNYfVSzVlNIeVW0uzVfHbvahtXL2WdqD2pvazzl+XqdfoS+mb6vvrL+pfGyKNzw3phrPG50q8bfQ0fqWAGKAQCaI9nLJtY9u2tqbZbJ1t27Zt27Zt27Zt2zf3vo1aJe6V+ECn0duRkD6AQWcoGYsYe5g4M4SgwJzFsjJXsOQsKwLAGsaawfrDEbKZ7F4cIZIj2D+Q1HM2YSnOBW6CmsGtxP3CK87rhqV4I/hKLMUP8Efxl/C/CeiCCdQMwTwhl5pBzRCqhWOEC0R8ESE64MAduOiSOOPAxdXEe8TXJCFJGcke0ExyTprAUtJK0jcymmwGaCZbJpeCZqCZ3CyfJV+joCn4ilWKI8qQsoxyFzVDeUZVgYSqRqpLqg/qBkQ1dS/1PfUHTUpTQVNPc46EmgdaFNe20hXVSXW9SKgbodeTkIR6Qj8P8Q0GscFq6GGYZHhipBkbmT8YOxgPGS8Yn5iqmD+YP5gamY6ZbpgL5mbma+YPFpplwv+tLYusVgduDVhHWZfYpA7cZrfNQnyNnW/H7OPsKxxalBVyLMBSjnUYwFIIKmCLsA3YPqfRGXGOc65w/sLFeDNXB7wLfgP/5Grk6oBgiOuO6xtRIKoRTYgrJCTeuetRM9wd3A8Q/+QZRELPAtKMds+QW0Az8pgXgmbegncH4pd8KdDMV8V3yncHlEG/6gJugFf+BuFe/nb+e/4/sBMcAr+g/3OpfogvC0gDILAkcCjoDVYIHgs+CbUI9woNCj0L/QgjLTwifCv8JVIm0ixyJHIvCqMVogei92KeWKnYotieOB4vFZ8T35bgJuyJGYltSXrSmOyVnJIqmjKmeqWmpD6l2ekm6X7pa+kPmVSmTmZL5lzWmy2TXZLdl5PmPLkRuUV5bT6SX5DfVaiG4FVJAsE/us0AqqotreP77ntFREC4XK5XhCsgXAAuV0RAREQegwzjIh7jYhE5RPYiY5k5DrHMIYcYc4gmh8UyYplj5rDMzMxlZi97uYjIIR69zFxkZuYyI8dxjIzeEOMQ0/98+9sbgKNnffvy/c7e+/8/5+yzz74HuVXTXNNW01/zoOZZzacizLoTMEf4RUiUC6dw7LynoipVCOQC2ZCQVe4qt5WDH0ZIi1OoGueFY88bJqoMFxLzp3T+q6sXmZRfcA6v1KoqM8FaVSFohVAqLYv4WcvJNSJVUF+sBfVpUUv9rxIxmOEKMJc1CSf4Ewq55wlK1tgzLpx7xq3NIth3bs850NusE0btuhGXVICt5pZ9qN2HEgyqC+rt4n1LHeEWAVEi6jBrnqB+mqyAXpO1GQfVwrWnWm0Ww36vtWFPAbuIIGeYlMH8KkDXWn1WvkIejr3hKC0aCSrAp4WzctraiEYt+KucgKOFbFRW27stb6NwFk0UTVReUW5BmoWraLhouLK/sl+5rWy1NvTUxW7XgcrKfZX7hKNoAPyQpvi5FKxLyKKuynqiMdxrB3QOFR2qLOO6C+MGx+Pqlb9II8cp6+TnneMrx05RpgpRqX0W+YREFFDu+Mxd7Etjf25Vo3AGmZsJRqp8f9lo/Xcere/bKe4eVVH4oVbc/aGQhZcLL7PiPuwbYEUP1+gHO8VkiRaOsI206pQWuBdXo0hUiQZcj2OihzT3qdg1YzQrhNz1YtcLk+cjf7jzkMlTkY+WjprcjfzDHU9NLpFfLvMpzxUX0Lf27FU1yp6BnWKy3HO78iw/Xnl+ygpUFKA/7ilNyILugm7Wyse+Y6zl4xoSrIXJcq0vkVat3bUoyFbx3rzWKkgQ8r2p96asHHwU8ZS1ElSNbbNgnzBZet0n+brTSONZJFnkQWuf1VvpcxOsVvpAyNIHKHU+gnykvJnVq0Fusnoi17hoBZEkrQ7SLRrs5q3SoxSy9ChKrdEsnKXN1kZElj8vtzzVsM4muoPvgRSrAEvmlmnoKQ2lxVIWqYeLRrvj3TmtYnevpYTPTuTP6VM/E3D8u4/sPqL2lzdiXzP72Mw1boDVMNGKMmOAruw3zfyTJoromI+SbgeF3Nmx28vKLpBWkFb8pLUbhHNnQ9l02TQRufvx7sc0apV+ur5Xd+aBfsJMtUxET4llt4kFFrkS5Op3DXGUTMkqu+tS8ohClrWXtWs/JaPCWfaBtbGfvbv3QrmO/WSSnyKQUhVgWdzyNHrKLMvkesZP4Cj5OU8OVmPmSIODSlEvWsQxcrFPRfEzSxGf95FX0Kf2hFmheLh42OSpyG+g1Lkb+cV0qdqXnUXbPvabo2rseAPWycQ4E5eElOdcve9yVlylYsdt1fOOK8iL6JPytB7kAeRntZNir5A7enb0mDwM+XGUVH/XPOq2srNcVWP7JFgDk+VzxjfoPt4jq+2u3vYrFHL7FZSCexsQzu0D1kZE7jq96zToKdbcQi6OgxxVAZbHLZvQUxNKi23VTsDLRdWiLF9+buX8VXjTBPsoHBSycBClOu4wkDPsYRvX6LKCSIHuH+SgI2h3rIV1FLKwDqXWKBPOwjJrIyJLL5ZeBA2yThHNPKdBfCrAtnNLF3pyobRY8YJ6wUtH7qLsseOTlcea2q9ix2HtI/UUrnHTjiYhSDEB+/QsVsI1PgArYWKucXInXeMv281ZqSEdRsUvZKofpc6jkUcXXVOqO7GyS5ln1VJVI+W1FUR2aVWQB9hvc4ZT7lDIlDsoBfdwVThTrlobEbmzbGcZ6FnW2U3K2SCnVICVc8uj6OkoSou9t0i9Hl7s1MsoZEpZ4ROjHoR6sHC8kFe2JcMlw7h2emX7GZo7rqFeGOglw7A3eRpnd7qwj1jlirvqON1VJfLjBV/Jd2S9/SqysILCWXx4i2eLx4y9kHAVN24R1kbMWZJqbcIRes3+qshzZEkk2EMVoJ+leWQGM4NPyNBwaFjV5af+I+jI0NXQVabLVpGuCF5F7pYNcG9zHgv6KWRBf+igWUucFM6Ck6H6UD0RzEc7jsNPBfv8HDlqQb0m0BAz1bIaPVWHEojtXXCTOYTz6IeXxSu9WtEsjohO0Uc+IlXkmpXatjkhc+/l3jP5a+HMHRLughbq1SE3MJ9Avcsodb27yAdyYkx+C3l3QZCfFdegoVdhNVzjDFgLkwXP1rV3wbPNWdvWTCFz83LzjE4N/PmtjYgsriiuQL+RrFVL6jhbwVkVYO9zS7eQwcngJNdbeC73wMEqOLAdZ/mPKZzFIngteE27yB8Vru2vg2etjZhz+0fWBk09p38eVG6/tP0S2BEVoDSLbO9FXIObxmAj11W9HrWeEsGKYAXT5eMsjsdZlWywWxvnhzguG59+IfMH8geEIF0vSDf7q1c1ts6BtTNZekcm8np1zE5r64iKwmalhewmZu/awlqlVXQV+8pYq4Fr9IEFmRitmFlorXn3035rownqOScBP1dTUF5YhZ+LKbSTTCG3ZqLUuQ+5rzDAzmJAwtlZo6qRN2MFkZ/QzkCeOOrtxmXeKIXMG0UpuIdbwpl3y9qIyMKrhVdBB1nnC+R0AKRXBVgTt+xATx0oLfaTi9SbHT9uq15NIQsa8oaNehHmksq863nXWT1YGAQ9z+o/BUbP2gI/aI9h2LtlDj1F5LUzM1fFL2nEJdjfmVvuUsisgbxS7WHLTeHMOpWXnZetPBRcKbgCNR97+Gk9D2Y1g7oU45bH0dPeLW+YLR/1q3nUN/BItLlLtxRQOANd1mYcJQtX4LDaiDkLPNYmHIFGdvUzoHLb/LZ5sAoVoC00+7xEHhQyEERp0Z9VvYbGoeO1Nu7B+HWECQm/64zHS/TNY69otvoL9VHI9Cfp5lka6hTO9PH08dAMEbmtfRuuRLp+lv4c+TgAckkFWCu3rERPfel9XM94ECfJQ/Si1Uu+qBD15CBaRfp+rZ87D/291mbIa/RbHGqh3JE/idqZ7OYQ1xgH8zJZ9gx3RdGM8bH9N9yMAyrSHqveczuR1yEf1+oZ5UKmfZT2EasfxL6rrH6Ya/jBzjIx6u5nlrr8ebuxGnhFIfGetk/rBPBEz+20NiJy65w1D+YeZq0jNO+8BGlUAfZFbnkBPVXmVnK9hfvlHDn4BXXt404I9+JrHzhIIQMHcyONB1yTQH3wbfAtezi+Fc//4Ev28CXy0IJ6IdAJxbhlAnpKCA4Ta1vkwUseDr37TU9uK67dU35KIU+/pyLYrvJgC/Ih+qR8cyby68jrtet0HL/1Blztz6oD6cX+ApXn3cLP+n1YO7c4DOZmYrwmHSKvh9/tNeeRCdbOGRMyZwylzm8jv72l1uRXkF/R3ze3hEDOUlCecxLRQ6G8huPn4+z1GPdw0Aoiv6S9gtQ4iu1GVk6RFdAsQqk9pAlnTpq1EZFbBrcMgrpZ58vkDGcse14FWAeYQIYxmv0KpcV+WauD33PsNDNKKt3N+9QMlf2hilCNVs++LGSoNFRq8gHkQZQ670aemB3NZygMbfXK6StcAyMg9y0Tc7USMoV0zrt6V64DsvNV5DYYjVTcIVW5VUojNIh9RazxK1xDgKUxMRrhp6Dxf6xhOyKyRlWE+I1Q4AFy6/ibVZ4ZQn4ZeS2P7irkA8jLeLR2IbqRh7TXrGM4H/6Qn+ejGZofldevco168DkmS9/nzen3eXLM9voIOLLulmubXrG/XhXB81o/sxP7TwdPm/wI8hMolZ+DqKvnpF/lGjVg+5ks3E21uJu8y57VVWI/t/EJZ6YviAcZ+wijkJlhQY8iwTmEZKWvEcE4zHiOkfvGMAFyT8iMezlPiHUv6CeCuzZB3/aNW8YAhcy5lHPJzPSncJ+csTZD2kC6croy1NmSwdZgK/SPsKseclUPsl8F2K9zy2L0XZVTxfUWXIG7fPYrmAxJIf21GR1mRn4jnP7SjNaMVuUg50XOC9RqYAe/Qfc8xpzfC1qhGLf8ED3JjBCzpSuYGFcvr2DG6MloN5O4KWTSMEo9k+Az6XqOwKdy05jTiHtnit18g9rhOZTUA/rYMIFsFD21o7RY79JRK79lfldm+4zO8nDM8j3zEuGiTz1GPxUy61EWzcrQGsG+MfbUxzX4viRi1B0naMb/2so5JPOiDqPRh9HZh1JpNIN0scYZc6cgiPym1gCpF3sWZVXyfbuznZlHIbM8OFKt6MfqVVqbRbDvVdYr0Des+lt0Lh6CPFEBNsCjbxJexzLHuN7C2T5Nx9tt6+AMhcy4jlI76BLOjPOZXfhUDlqzWkH1+D9LDuqhdwx0v2Lcsgo9fYDSYr+9fE3mnKbrvVuOvntmTa9DLxIrK1onQ2NaRVqTytNq1GyAT8o3xiB/gLzU3L0jQqYFUer8JvLEtESecc6jrn7SfJNrYGxsfsvEeI4bIs8ztuvHJh1GpQZHXoNS56XISzdfZtUASJBVf4drJFhB5IJWBcFka75/BkSx2Etz1yl6yrygkIEXKKnf1FGQCZAJlKwcGMFqbsTaDLkBciNwY3MCEZlxNuMs6AX2c5GO6BTI11WAfYtbHkPfx1BabFC7BN/vCNmucCspZPoDlFo9Hyv74UA+PpV6QkYCaDKrXyL1MFz5c6CRhgmQWfTUjdJiv2fUpauCrsx/212Z9BFEHX0Kyss5bpp1Yx56HUwf5Cf3aZAz7OX3uUY0oouJUXV+QndR18pZI+2JipTbWiMNdVOupFxhjcxF70T/gGtcBetmsvz941fpPimVYzZaR1UkTxitA0Im302+y8d7B/tusdYfco0ysEEmy7VOstbHdmczTZpgtc3TQm6eRqnz58ifp9WzehnIA1b/I64xbAWR61od5LLYvfLoxAET3L+oExJRx3f/U5By7v8G1whxCPHHun+ER1QtysLk51E6pO275c2JFHJzIkp9XBHCuTnC2ojItJa0Ftxvs6z9J+SmDmRSBdgtfu9+X8jU+ygt9qfaA/gtOLd7k39BRQrPYMh6MXqCKUGTdyJP3LSfvwk9Rl09g/0Z12jCFX7LxFzh1QfpCnfaHXNqJoVMHt3kMjpe4Uy+5Z/2q6srNx/djJHmf8Zaf07qllIv6CeGCfh5gp46/LeZLXtvAg/W6tqJUfaeHLNzk3KOQqacS8WRcZ94HqT0pLxN4W+lqc9Tn4O+ZDd/QUdxD+QDxAQz1bIWPdWmDBO7s2LEf4VH/KjegxY+uc/+fY7nBoXTc8NzI4nfloCcFy7Pec/5pLGkMWLO1EprwxpI33tD5DmUGkLtNvALmsK1D6xJSE9TUg/Rv+Req6BT5alKaiM6vGjF4hLS+Z13rWo9kRTSE5lUrMZIIu60uLdCxr1NCmjPcS+FM+5lkifJQ0SmnEk5A1+S/Y7QdehEvRG0n2KmWl5HT9cTHxP76wVX4ghcfdfuu1hch4rEy0b9kJCJA4n8/jfFi33drPxtrlEN1s5k6feb1/r978JKcfE7jbhICmdcZPyZeLOKcc8Kp3vWPRvPb1aSB605MP4wq/4NGI1k9wPQRmaqJZ787qH4SmJjy67CC3ix8eDusQKKPZv2btprPLSDtLvbNxWxB3+yXzg2pbGHcfIQgXq1oDHMVMsSeCjxzxH72wUPYh4eXsKDzUzidqnwfF3rx36KUdHh6TD5JPJDWDMhh2If6u5nL3/HNUbAqpksvQr/xlehwX69Htutwl9t1LB68BcnDJr8IPJMfyaru1HXx+p/zzUqwcKYLFV/xeqjULd9BxEbZoL1YmaEjJlBSXoJMyAvKPT+h9j/0H9V7fefBBllP//ANW5RWOSB9gNyTmxclJ0WdxfNaeYdZwLOhXsOV3FuA6813K90mPHxGPsfo1QOLDLODia4xm0Ki/yj1gS5INyL5qtiGoVtpBqDvd0Ydd3u7g1B1m2jkO42lFr5AOocsDYiMulU0inQWlb/J6td0lGQEhVgj7hlAD0FUFrsnxd5ihBxC1nsnCxeOS8k1JlgHwnlQiaUo1Tz1jxIHnv4F67hp7DIE90/iEtUL2QbZuSP2Y3JDc9UbKzQehvwdN6YvzHf5MPIUzf2s34n6rpZ/ynXuADGZNk32B4ek3iurTzWDS0qNhYbrXpoZW7MZC039unx/4xr5IOFMVn+3Po6ab0nR1dq+WZVyGSt5XuJujGS7/SNl7FPsNZzroHnn2OKydLj+jU+rhK743I0mWAtRw3mxhqUSqsEpJS1JrlGNoVF/kNrgcSIJLurJt6q2DCvFcQrITdMbZgy+WPkT73VfGePoe49VvwO17gNdofJ0pnkmZlJ/spuLSJOUEjECaN3SDgR2IjIhIaEBtBG1vwuuajAz5UcAo5VyzwhEXnEvrdkfepflIXRbOuAo+Xn2/Tpe2PcFAjpe+Z7po5+wzj23Wcn/8k13GBDTNCvLFkxmjr4Co/ajNxoHWY0zUNxHqVSbASZYsX/4hpPKCzyRmuBjIjPLspuyW12Z9wXTSE9bT6juH4Oa6ED6+fwCQL1Sd8k6CtWnaZ2WGN7SkAfMlMtR9BTAKXF/mfFO4gf0HFXy1E7J3HHKGRUNUq9csHTJaoorgWfysl+337Qfezk++SkSjiiYkDLmKmW2UJGzqG02MyidflFy4kr3M6B+1MKuV6i1HM17ljvG/dzfIJg36P1j0D1NZ+12q2/KxzecdA7zFTLK0J6P0RpsR8scgAOBxuXrHlrRYvoIA9HrYBmp7fT/dK4aBIu7yHvIfeEe4J91K2vAx9mHz8kVrq+FE4qwK9pCncBsCC8BN0DROe4z3Co4J+7i+su/+awgd9XjlpvLO1Xv3G4j+Ixq8ffd5dYvpANWQEy5M7U7uOvCWf8NbfX7VXevf3efui72Ps8mMMLF/HWKuYNM9WyDT21xaqx/aMFh44LNJ6+b4gjvtJh++0mPkQhY8/GnjV+EoUzttva2I/L64Jyu/LjcFC7NyAHVIBJ/pbwHD3VxNZwvQU/0eTnf+0cxHoppOcaSnYQ68Iddi7WhU9yEH8y3loBTbMDFzk4Ar120KeGCWTj6OkASoutWv6e0fkjOwcx/RQypt+TbdZfJ4Uz5qTH5/GxAxFvHV8YO1hN321eo14TrvI0M9WyGj1VxylX4cvucanndzlm6ySCQsZErGnRTtbhflk3u2bfmn3KieeYBzPBmnJ2EkFOPkC9B6BBZqrlkJDrhtb4iK1ddDU8cOKAE9u16rpuFeHPjAPMOuH3w++b/CDyYZQ6b0B+I/op5Y64h2h7kd1FcY0CsF4mS66J8639bx7WCQoZvh8l60RPCWd4dfQUPulMxB2OOwz6hLXWkXojlFJBx5iplrfQUzRKi8WsmHd/qL47SPN9Ci06HaN2z/+oNyrCC7SrqGfoOy08zeT3kXui+fnvRp/hLnbo5hrXhWP1NBPjZRX9btyVYn9VVt8xIchHK36+RsG6q88Lufo8Sp2fRn46aph9lIOcYB8ernHICiLxC0e+us7xBbsrEjlDIVeXRB3RGpFYQ63OjGqKaiIiYx/HPoa3vayznu7vUfQpQYuYqZZXhQybikpltnRuTV38uyB5z/6MhBWriKRxiM8G5JnWJ+dDyH34rNJuw9B/ZFFkkdofG8K+ADvl/7+36gWYh8ny31EcsTsrq25SyLXP1pr7ZdVF4Vx7z9qIyJi7MXgCrr3DWhvpTr8BckUFWCK3PIie+tf2c73l66Iv8jj92PaOaaGQaxvWNpg7cx+cVFobOymJKYFmPjvxk5MAiF8F2CZu6UNPEWsjuN7yO2aWZ7FF/ws1YsLxbTtfEUMU0tUnI7SvCDzxXJ2OWces8rVucN2gcDhesK8UOh6MAFcj6APFuGUbeqp0DDFb8TbPFcb/C+odv0OMyKOQ0WWOE8YNzkN00Pr7U3aDv/WEbiO72azno+gw0ErD8LFmUsioaUces5Vu1vMK4R1uxBSFjLoRkaDdiCfCGXUhIjwiXLmJ7o7uhtIMu6G/qYhuE46o46DPFeOWg+ipZc09ZsvcOL+3sF55h5sDFFK+WHPauKlFi4k1HWs6lJuo2ahZ6LaymwyaiyaFQ14HrVeMW3qsv09YU87MIRxQXe7pOXtqYE82a6jwTgopR6T5rVH4YbS5YW2G7Ae5IC+EP2CfdVF1cHWafWaRz1KQ4yrAsrllMvpukS1cb/n/1bKuquRZaMXTwHFLhTRvMh2XUNsrvSbvRx4WXsJz0kcg+koGuUYbYpKJUf//1s0BWJYkiKJZ1Tl/8G3btm3btm3raW3btm3bG9rg2jazcu7rV6+n1z86cibmdnadzFvT1UOT/d/Jprh5MjdrWHNz8p2QcyEF5sLkq0n0X25SOek/+TBYHZQu/Ztdes2Apkcuk5GWJc9WraPXv/smug2fGCrG9DAx/xw1TbKRnBHWUoVsckQSv20p69b/HqijM54bX4jWDEppx1uFv6d9MZdFdyLCb/DoSrLiTDew5ojSDKyuyCiQqALFkLEzIsQWIM6IJQ5DjPHf4VIfwoxmPhClDYjdkeFotaA44ov67H8457nVUrkvyp4/5abP9LnponQRuJtk3w5we5Zw08ugOO7LEWLb8NXny7HXsmoa1vRLhOd/wlJg2iT2JHD+p39I/yDqKpB7i+ZWQWNY1GmhJnf8tFC/SAyCFl0bq+DMvzH+l9N8dDYoPMN5lxx7sWykTOmfTkYVfZHhZvYAlNKdV0bnN4IV6zWf7nvNBVwAFsu+bWD1L/Gal0Axuv5Fr5Gfghj7Sj+4WkO85vBzseBM5zVX4Aqq2NTxqeNF/QXkgboa7sp6HXwALXvkPOd18Dq0qNfV4fWj8V4H9TQ8r4Nyvtcp9rwenM2wH8FrUSKdV4PXj/6V10Er3+ugVoB/wbp1KEiBNbTEa/sdFOf1ozlefwFirNe2n4Z4bW8vpto2zmt7qb1UFZtslGwkanGXw7WWclmv7b5QI1G+cF7bVdCiXpeD18Pjvcba7XltLva9LnO25/VIZByA16JEOi8Lr4f/ldfmft9rc725Hqx2su98sEaXeG2OheK8Hh712h4PYqzX9LKGNUPMqJD6oHjdyfQw+KYpcXvCXTebgTxW156LRclIVIKGtVuo39Ev0KJeN4fXo0Kv49fuO/3+6UrZSJntRDkTVYwP+xcqFNf/M5H+m8HxUSD+q6sF3+tdLSZGrhaiKHGU3j6d4/sF4D6dy+VDGt51kTf510Ue4l0XJyNjAtiiKHFCDvEkJY6QPbnEChoeMfjNJwYve8SpyHgLRFGUOCmHeDKIk2JWqfMRdUKi+/wgE2RAXCAj/gTidGSsEe0DKFHWiWCNi2F10vC7a+R3Z7/yupuJFeU3dCeKdhdZF+1peOYMtiPiXkva+xHCwIjXS3Yz2yx8fL48rmbroIYNEowaZiNjDxnzFZRov2ej37m5/dpBGl6/tlOpfq3X71xkVEC/omi/AyP9nop+B9oRuUTzooZHNA/6RHOyR5yPjPNBFEWJ/SLEU0DsF0ucp+ETx5UiNvCIC5HRBkRRlPhkjqtnwdXYz+zpAw1Liyj8tIzelPsJNE02UbAeGRoC8mI97lSJVhIdoGWPPF+yq1EdaK6erPPjoiujPSf8D9y4yHyP0PHHICaFVfWRYwfJJo/RcydUtNQxZLzoaqU6frs0IjIT27n47Joc0huJJxswSguJATrK8pJ3i1SP2qm2wh1L3xnnjuXBPFQGGM6jKPu4C/eQx714ECV03rZpEEZD9WYJEcayQjd0G5HZYC6k28zL5kt6x9a0NU0Zr+pZ1Jq+N8wzeCbP4tk8h+fyPJ7PC3ghL+LFvISX8jJezit4Ja/i1byG1/I6Xs8beCNv4s28hbfydj7Ih/gw53E+F3AhF5GVsb+TjUxgpDKt3UrtQyjJw3gEVeHRPJWq8zbeRo14Jx8g/fxPXawHZ86UyL5XWhXOTQG6Wy2ZgdS8lUjo26mBVFBEDb2+plHLI95TmXAOhlBC+6ikfVTVPhq4PqQGRg3Sgc5/J1nnthFLZ5WoBtXjvWS5O++T2268X24HyFGW+3kZOzVjl2bs1ow9kYx8stJXAVnpr1BuF7v6eKGXcVAzDmnGYc3I0wxDLPX3EUfm+991ymbI+N+ISeVMhXS86a+f/TDl03GmrxkazlMznZVqEpNwT2aDG8Wkwz09wj0bdfwpHrOa3PoVJPWMGur51045jZzzVMH20lc89WxPvXerAdveWU3Pudq27h8ayON0AAAAeNpjYGGKYvjFwMrAwNTFFMHAwOANoRnjGIwYHYCiDAycDGCwgIHpvwDDj9dAJgeI7+UEJA4w8P77z/zn3xUGBuY/jDoKDIzz718H6lJjugWUVWBgBQAJsxLiAAB42gXBgQWAUBgGwPv+QkAhNECLBSoCPNqkmZop0J2IQWFWWNW9Hy0423ZlFL1FQcqLBx86UZlA+AH7QgZQAAAAeNp8kAO0HE0Qhau6KrYfN7096bfvt23btm3Gtm09xbaTo9jm5sxObDvZTaVjfmfuHTc+AFASkpSVRnfmwrcDoJKbAvK2GNwBD0EtvAtrY2tsh9k4HBfgFtyBhzChUtU96gH1kZqoJquZaraKqgPqCDEVpRJUmlLJo0y6nx6k/6gWNaMW1IayaQANp9m0kFZyUU5hjx/mZ/gN/pS/4LY8jLeFGoZ6hY7pkrqsTtEhbXQlnaHv1Pfoh/Wz+k9dVVfTTfVgPVRP0dPCZcLlwyZ8e7hreIsBQ6aQKWpKm3ImxYSMZ6zJNLeYB8yj5iXzlfnONPbyeUme9f714raD7W2z7SA7086x8+xCu9zusHsysiPlIn9FtkWO3PKhn+OPiicSCQBxoOFOeBiy8F7nIAuH4XzcjNvxIJ5USepu52CCOJghDlY5B0D5LziwzsG/4qCBOGhFbSmXBtIImiMOkItzKlfiR/hZfos/5zY8lLeG6oiDLHFQRifpNK3PObhbP+Qc/CsO6uhBFxyUcw7aOAfKFDRFTAlxkHTOQeScgxfNl+ZbU89T5xycsGA72iw70I50DhbYZXaLOMgSB79HtkYOiYMsf/gZB6oHAG4FR/woVoSriM+PtwXAv7EJ/iC3W2ETCHgn3o4ZWBFDWApLwvhEpnz5peSJ+OPST4FcgXDqa8k/cBkxmS94OXgOHIEXJAWDN3QKbontj02OTQ6+ieUEHOSPHYrtDCbK+7wgR/4p7G+Gc/h5klF+R3+MP8gf4Pfz+8IF/Mn+UP9FEKL/RGtHK8v53ejr0s9GH41mRtPXDQRYM2lNfFVtb4u3hgYBghySNMxTM0CgD+lj+pQ+py/pa/qWfqY/QaDfwUE/u/6TqsBV0N+SGu5KmhpJWlGe9ETJRjrOJbk0l+XynATAGgRewEt4BdwQnux6outZPIfn8QK5WgKXcuENrzp3v4rXgyM/uM6AC+QPwWWofuoJ9b16/jRB8AAAxgEAQXDv/mPbtm3btm2btWLbtm3btm3VzozX+XZw0J1c3TVcwYdczA1d1JVd3CV80sd8wmWCA4ikJCMNGShEYUpRlprUpi6NaUIrhjCM4XzNCMaygIUsYzkbXNtVXMcX3CysxhbOco4r3OA1b/iZ3xQooqIolmIrkfIon/KrsEqrghqriVqqlTq7ZnDKtXzOK1zaa7zZa701OB0cDqsER9TdbX3ejYKjYb3guM84p3OF1X0zOORyYX3nUA+3c2EXchGXJS4mKomITUISk5K8ZCQLuahCOSpQkbS0pCutacsgOvsIA5jMOCYwkRUMVUmOspW9nOIwJznNRZ5ykzs84j/+4C/+5qoSKq0SK6lyKbWPKoeqqaIqq4paK6/aEp/jBGwjASdIznlScYnUXCYFF0jHNdJznfw8JxO3yM1jCvCCzNymOB8oyjtK8okSfKQMv1KaX6ghU01Qnj+pLlGJ36mlCNRRJEWmnqLSQNGpr2g0VAwaKSZNFYfmik8zxVNcWigB/ZSNNkpCX2VlsHLzhQrwlQrxpQryjYrwvYrznYrxrYoyWuUYpbKMVBnmqxFzVJ/xqsQ8NWS26jFXDVisZqxUG1axUV3YrG5sUleVorvSM1U1iMIeivGe/spOEd6ShDMMVE5+UAnGqDzr1DHME+YKa4dVwzphg7BuWCPMHxYIC4fFwxJh0TBfmDcsGRYLC4ZFwv7hQL3wUr3UK73WW71zDL3XB8dzfCdwNMd2dMdyHMd0XH3UQM1RX03RZE3TdM3QRE3STA3Xjxqrnuql3uqj/hqgQRqsIRqqYfpJIzRKIzVaYzReEzROUzVLszVfC7RQi7RUy7RCK7VKq7VGO7RTu7VLe7RXB3RQ+3VMp3VGy3VWi3VUR3RcJ3RSh3RYp7RW27VP/bREc3VO83SepWrBIjVliZoThyPE4xjR2EcMDhCTg8TiENHZT8h2IrKTSOwiMruJwA7y8IR8PKMgL8nKXbJznxw8ICcPycY9qvI/lfmXLkpDN6WjnZLRQSnoqJR0UiraKzk9lIFeykRvZaaPstBTGZmkqkxRdaapJjNUm5mqwyzVZbpqsUbtWa12rFUH1quTW7uNm7ulW7lFcCY45/JOFJz3Wz/3S7/2e3/wO7/wK7/xDe/xLu/3E+/zVW/3NR/2Q2/zdZ/1Xh/3bp/2KT/2Ux/wQd/3g+BScNGfglufCYKHw0AAAABgj6x19tW2bdu2bdvmGuU2TTx78eZdt1QTigzKNiRHnwz9MnWJFCxFp3CBko07sqPQmANb8k27sy3EtSiHSk25tSnIlQj7SnQoNytMgAVVkoyqMGfPhkXV8kyqNO/GulCXai0rMyPariU1irWK1ybBVz/F+e+LWP98dmrNDydWfffowh8Pzv0W469Pjq345t6ZX+rVadCoRbMmPYYNaJcmV5ZEvUakK/goCA4KCAAAIIBxgwDwwR8AAFpA/xYA2PLNNbfc88gzr7zzUVFWQhQVVNXUNfLTNbS01TOysjM11ze2tjcwsXEws9DW0dLMKZccc/4DDH9wjAAAAAABAAH//wAPeNq0fAdcW0e2950rQEZgU4QophmEJYpA5aqhrqtGkQQGDAYEGGPc7fTeuzflbUn57Uuc7Mab6vQs21O25Hnry/bdLFvSy9vse5ttTtXlOzP3anTBN+VryU/X8OfOaXNm5syZM2JUzBTDIIFdhp+KmGKG4SpaKja3VCDUMoXuEo4ik/Bt+PyKXc4abKxXYFgvwzJ+hmHroY2aKYcWWk6rN+rVWk5lMBiLitT+Z8afiTj+ao/8PF5WwbKVZbjxT36CClGJJ11amvasrIgUVF9lDQxiGKaoYLKJUUBnmDz6AWMouAR+KmKQiK5Y8LuAwlu0Ba9Z3eJSeQuKXqaIXi6hSpJkFNFpiiYJhSsU5Zv+CPmuXMOzmaBXKcp39UnoA5TuOKI82WUZNyWpt72UR1+QUHVBgKlkjlH8MH17OzxVQNnDhtll6O9apoVhClsNDrvTxamLinRV1Ryn27zWCdCJHndnh72kaVNDXSD7wVqXOG42NAWbNPWcrqbeenytg+Tly+syK9P7MYrOMQAwm+DRC9KVMVrsjy06fQVHPi0OLFKFftMD6NDxe+89Lrz3BWvwsw522Se87xOe9/3iF6gE3Qh0CQVio1rRH/VY692AaoBuJVPPtOGxwdmqdVVFRXqHs1r8wcjZnA67Qa935H7Y/czsKe39nHtLt32ev+6axMhI4prL+YGB8BXs8uIEl+wsRd2jvf5pqy/J88OehD8QB112rJxgEfsK00xsa3BU2J1OzgZM9ECztUhXAVYGBhzwRNbgDMfNBEMzHJ/kw8lkODLIczMaWyaAxoMZq302lBhORYVj0dSWeGjWDtoR6kS7+px2CmimENQF1EMkqWRsDFOTUwu6uokFjfXGj5HulWRNo9+ut1TXOdq81kJFUY931W2obsj4WG1bQ0vPEx8muJKM04V59AGKThDJobfQCeitEkZH+goLWEE7qYJ0zgPxxd7exfjevQPbtg3sZZddOyLCn/gFl298ALX2T0CfayQqKvCmOobROlp0KkVaGlT7rdXk0KTbLdx7MlGQmMhG9GjJzSf/f3iBL50KxmCJHfBsrmuRPqeizwmPom7hl2gY+3/WJ/zRB5KRt4lkm0XfsDEK6EyVEppRRKcpCrMiRa9gCAozFEtnxdzfeBkd2gLPjRLaLEOvYpTevVqGPkDRcZ0SOlFFJWGXKcor6rLtRB79OUXnZdwOU3R7FQBA18OqyUzZoDRPyjoEPWF2dXRKU6SwN989qydH2ll5no9RnnPAEzH7AV0PPIvlPb4fHRW+gHjhaUzgLb/wCCObZ/QfPc84YD7Tfchc86VXP2yy2eU7una+cYs+1coooDMFSmhGEZ2W0HIsPUV3yWcDik4UgKZkxP0tNwrAKvDRw3M3j4p4XniPXRaeQnzWgDLCXQyLRyKblkYiGYdI1kbDRoW6XLtqtzv7Z3lrkIDwItIGpbgAS3A6PF5jf08kcAAlh7gunf7v/47O/PznfewOvz97B+lV8iZpz0vRkBI6wyih0zL0AYqOIyV0Qnx3xYLloiivSBeiBIr+nKLzlXn0MEZpjMACXQ+m+2GeLzMBssg9/23RIKu9Pmceyu0xym2OWNe3cgK4LTMVIi9OdFxgwcHciSp2nsanY7H0V985Q3P6zv6RkT70C3/2bwunAz1oyWqIpmnRgj7JX9g2kL5U9BcOIhmtXqUHh7nmaN+j30zdfxX7e+EJFBXuFK5EM8KXyKwO/thGLDks+iOR7GygVAGSFUqepzubR5MQ4uwgfb0f/5VwHxH7+lqMSm0o6rqDoEBfju6qOvldNRth/o3YH08/NcSHYR5wOTaLPqyrQqcLJ0CCv4SzYaGGyIGlHJdWiQYipba6usbpdGmxw9sDrEulVzWpdBXjmWlNZWFh5bqp6ZCqsJC9LH6FqrBABe7/3sbeiorejagIBsHp7dNT6QbhWnR2Q3Iy0ymAOIgBW6C/k/4h9HtYB0gDVFldxa7J91gVG5p8B2EJsqdVe9xa9M+sgf10mc3XJJSCjqQ1sdIkHREnoxmGoCvlmBNFo6QXFleS6B/Af2MuikGYtZ6KghfYNwb8vPBXFrGhqfcQSGQe9y35eB/7KVEOkO3eCkegEX09a/KMmfISPEZ40fgTz0DoBMyqFSfHb5iPETsmnV+RKTBttU4HxGc40RcK9SU01kwQJtRpm206KByDidWbjKHxWDIZE47FktIsJ0UQc5JFlNAZRgmdzqF4RaboFRJqgXfpiiz9jactkKzFlRRtlqFX5XnK0Ktl6AMUHUeUJ8zjlJtGSWqYgSj6c4rCDMSoiAy1qk6YWxuZLugT0sNkzdKrPs7+t+gra5xc56cVuoG9wVxbxUfbrdm9H9khkhVqibQHxP6okjTDclEUNFN4d9tzefTnFJ1n8uhjFJ07IaFoRWabKZl1D1N0u+SNHuKNbYwtNw87XeDta+2ipnPzGgOdZXatr68sqiiiFrKYKpqaYK6+SbITzNXlbZvLEVplpcDUxg31Djx9vy03Fu4v08pzrIn9H/hJh2OPGsQh18f0kwl9NyAEvqvQS+2q6g/+3PSxI4bwJDY7a+2IIfadk43gdrC6l+y/ukE6uWQ1sHbT/aTeod/ArhbzGXPcaIyb9ebGgsKVbx058q2VwoJGs9bc22s2u90a85gLne8eNTd2VA0HhWxAeDU4rO1sDER60fm9kahbuNodFfcubCPMVqWyvQueofQVFXRj+Xx43uGYD99+e2TLcPR2dpmbCQVn7MJxdPaWSGwIa7EAj41AZT1TTajoRDpARkf3pwv8fcGM7ZTZ++4LDQyE7mOXv2Ae90zsefLdhM+fABpzK0m2ACxRgyPMQmNNq4Lj1KxxmK8eXF9UUxqcsdlmgtAjTtsZv8XEw4ODS18uUnEzATQSzHD2Gb/wcHh77dOvDkXRSCydjgkPR4cYSftakHsDUyPTXg3rr1z/X4e328f670rfdvWN/PAwfyNYIBNI7SsTvoF4CMcuGg7zaWmvJY22C6V+V0IzjLSCY84UFdeOYfCGdWCDTjJ+aHBhNxiN8JtoiRopYq6qrqkROwtZY4sufrw/PuSxT/VvAVvMHkJ8MhQecNumBsYc8xrLpC84GA840mUN1Xv7ekd79kwG+kIe22B5Q82hfu+EBSQivImcl1LpT0Yz8GQB9RA5Kxm/0l7d8cllf16+bf84Pdbs3/9PtIK1hqDlWH6CUuuTnioHb2jFvoAF5nQqmnDJJ1ocLuJ+u63T/uVn/NM2x1wo5IsOD0c7v3ZzoJ+t8W6zBIV/bkC2qUBozuEbiUWHe4W+YPa/yEiBWeBfYLmNTJvUx44Wh2gU/ZopCf7iAkuhrsCkFQ3H+XCMN08FQ1MW61QwGhX+qzim4TL+79wcTQ0nYPtjzcB05M9w7nT8uuKb8LhEjAdYNpF8KdMiBcGo9BfolZ+xd/h82R0MS99QMSVSHkB670x06nP4TWTp7RWk98Fy5H1iz8Myf/CseAiVStBL5g81udyNRPNfYmcb15PO9mLyUpdubBX79LgkGOYEfQQ0KafoH8Xo6gT6B42+cTwlxd8k+u6e3cfHwqEov1dzygxbm30jmkpF8b+zh4AiaUtkv4F6+MnoDKOETsvQByg6jkTUgmWiKK9IAaIKiv6covPEfoCyM6o+ElWsjSnW6vi1hLYaoohfUlXZB3Kxw+BapSWOQBvLcfMqrS2EowFHCmwR/E3pXZCZoj+n6Lzs3ccoOke1XpFpPSWzxWGKbpciZQ/pS8PJ0YJcZVm8IIsQJi18NByO8t1ShCCPDLDyeEHG/+ZjAypHvqdmZdI9RlC6z6NnDaUwdlT5fYoKMd+LXbu+vKCgYv21/PcgVH/LPKLTjZjZ8qwBt2uFdk5oh/O20K6JrQmw0I7+ADucHta4gVWrzt8WCLJFhUhVpFb1J2PwD8vCx+ef3Aa/FLEYHwQGr1TZ7Vqt3V7FNqz62cBurHNYy8utjrrsa6AH4Uxsfyft6ZPRaSaPPkDRcaT0LvQ/aGQBtJ1dJmukVsXViKZw4X2qUUy6qy2/+eHgOcX1mnUNxef1/fA3g1cUNxQX1xdfjc5FO/5QgWWs+INwVLjyn+W2igprxT+BqgmomsjaC3OT3MAVqOT56O2lFaqCipLbos8jHfoP4bs1m4vXGWpQQPAKb2JJSWsi6b2Srkoo6ErRBygq6mpasWD+FOU1ShTAAhT9OUXnZXQPU3S7DH2MoqI3TcJjRcqUOVALTvS06CbRpPAAukW4Hy3wbMYXz95HdurkXSLDo5JuSmiGyaMPUHSCzCeDZJa0wB7bmBtbHCcuM2o9WWV0MCXrXVXiOiMuyahofHF++CuRgLu/iC8+ZcvkvnBJ2fZgbOtXbP5BzdTAwLjfx9tN8a07x4TDBysDg664a9rdYw9gOQhHVQXIsUTkcHQooZ7CPHo+Rc9hRNSC32UM+C36N16xxblMHv0iRc+ToXdQ9HxGSZLeQiXUnUPZcdWVFL1gjXxuJfnYYlmLC5kculEm30WK8l0sQ1mK2gopT9Yi46Yktf31POqkaGA9Rdk/UdQPySEVoB62HfyjDLzVRXNmNTRl9kk95o84ndYhZtP+9BHesyrF9sRHuBLVw0Ul9sp0LqWoj+hhAAtzoIedCTH9ZP/kWCs42UkFWKyATq8jq4qLE5cZI+ypqDbwJ63UTvdgoG8wNNdt1JvYkKrfb+QaVWxhva0tPPhKj6GtUxVSDQQMXH2BStXkbNhsnW3p6P7GXSZDW49mOGz3JbZ1201tgcF6g1ZrqB+Lf/qcTmcX+b2y0lDvdnee09lqN9pQ+bZOl6sTdCNakP78sTh22sjeBDR+G2aMailSdNToyVZQzantTqKO1BeizLg7womJplqeR9rabfHRhYXFYCIRhI8mzZsn2OVbTzOHhw5l7s0c7E3FvhRPpWNfiqbx3DQPnN4HKzZKESkN1g0iZWo0ZBa3WplTEI/68TYrHOqHH0/BWaSjsAHbPRGIDsaORpMx/8Ru0IxQJpo9K2pmZBTQXhXoC6iHSFHJWJT2FK6PlOyXsm2Ez6L5EDHX7B+UhFaSz83kUZaiHDxZgv5N3ksOsXOMnNHB0RGzqpdqRnbuHElM1GoRz9c2TThC8XgI99JB6JpDQ2HzabdmDRNmPt2bjn4plk7FvxRLYU5J8JJS4NTC9Ej9RBMF4MpGtcNl5GpcOrW0sTIS+xmkgWqKLLrtc8FWl7F4XYFRn7j7muSI45Zz+10u985ofGt7rCcxNqZxL0ajC846ffl63jKfcgf3pOJu957UjXx0tzswNWDp75gcGJiEcTcEssTJrmEj0w4uBL2EPpHuQhG/Xng6lcmkomnJAGmbJxTyuMNh1rC0lP3ZgekHMgfSfN4Kqci9kXQaHik84heA84hk7/ZPaHG8rQGr79gxkhiXmI47QrFYKBiLVaMRMPx+0fC/oYbfjQ2/O5Zidb29Ui+/Db5Zx+hXjxEYhS15L9TmeLagbkgMgX9B+kh4oC/ijJXy6/e7E3ykDzXiM6yjgWmOmw5s52Npc1d0CHm52FA63pXzs7eJ9z0nzQZKqIdRQnsVUeq/eFWj6AUSaoF3yarGMvRvPG1RLGtxIUVhVaPoRTKed1D0YhnKUtSmiHJUErAxRXlFXewv5VEnRQP5d9k/UdQvy0paYKVz0pWOzP/KnSjbbajy3XmO2dW4SV25LojTgcHAlFV4KBFxRkv4os5NNbD+1QbXx/lIAplhpatxNCF2bR8bvFVV4vKHXupb09elVGIfQ3MEq72tha5oksAKKYIt8YgjCn62d0to0opzBDHh9eI4zhHk3AwLJWYIutZxYoaAl3IeuH4Fn2GR5VNHtMaZxzfuuWeAP3KkzfDaa+jL3r3+uG9z616vkCJ2TaK/gZRNjCk3XztcePDp5WMShiQgqlXj8f7b7Q5UqRuLjy0swKNyAz852kBmwXh8yWfnXAdbwqlD0+dkDqXCLQvZHw6NIW06egYekmfEUthuhDfxir+IY2STEurJKqG9iqhbhp5K0ZAMZSnKZaVsEdm9ShlPXW5ZrtDnEpS7eV3dWHxkBx/3BfrY5aMHTHx696TwGbQnmhyKCUcw7UKRCluEfoR9eOWfDCPtRf9BqqPcK/uYL8J7+IykmcjwtihDGbwoooAV5056sSTT33/4rW/50MM+odpHW1bQlg6OUUA9ZUqom6Jy3jZFlBPRFYsMNQBKxrIidfvf8qiTooFKirJ/oqgf6KiAugdTZ8ph3TEonfVSI6jIn8SyKRSUn/r+HJvnlcbW1kb4rDn7FY3G3tBcX79pU319c16+UiqJT9IziY5jPVGBqD0uZyTog/Dm+tyIwIkvPACmr4ok/o7sB+eWfH08es6X/Utmn0Tlv1UVlIq7CVPZR3Py4omwSzoR3sefd1/qG0+k7z8fzkHn3xTeF55HzAqWZt9KOW4BdIpy+UzpxLeONYBvPQgowllldpO048azCjEVsRs6rYdv+/K/uoyPtIa62TJf9ivtXdh3SAu850TF4k70L5iuRIeiLoagIIMcjVZhtBrePQN4AvoX8cz4PQYgKouKqRTPjFWrJdqJTl/MySQeIMskA10GoP0GmH2M0nmD2kACQ+PaUUh/UFcMeErUyNZlshdsqC62mmzugL5502aPvrm5DfoxUdnt9Dia4NnvF8bRvcbubqMwmfuXjneLdE7yIcN9NJEb7oYFY2xIGu2DaWm0Exqkv8tlu+QyglZLqLogusKrzlJ4u7dQOjnAclBUzF3vAU/6O56NqedR9amsYnHXP2yhwZgvkOB53UYQdx7OMsApg2hSnJSo4F/wTVjyMpdSfr5CMe59G9ZaMz15li+mwGVN2GcK4OOygPgM9/VBPN5XDOHRF4MEuROCJU8y/sV4kjwwV0Kf6F4jRUFKqIdRQt05lMQ7gCrHOwxD/8Zrci2KZS0upHQg3qHoRTKed1D0YhnKUtQmi2zMcm4KUkNkQ1EnRQPwVBEZNOylyqfOH2P7w3qSL75MoQvQy1LmWKj60M6QLKAhkraJfbFR0grLRFHQSuFd+3N51ElR0IqipRT1nZBQtCKzi5NaFmI7jCrEdrITZ1frScGdPIO8xjhnmd0NLQUlmvyJc5dhY3MzxHOyE+carhkhabMIh75HPRMba8QV40QyfjSeJA/oJevKS6yRTa89a/6o3rGiJV5IfmPVWXN/fxg+TeyB7E1VMq64W1Kxo7EUeWCbEH7EUt0njZFSaikf8SA9RO0usFQ7RMFBMVNSYf8k2RE6kcjyI4+Gk0O8kWtgVQX13GY+9YbZoO8pCKlTXqO9XqViG+3Nhp4eg9Fs/uZ9PUZDt2Y0jooSY7mEyC2ndjlNrf4BMSHS6+xCRV1Op0l4r8uBSqfhxy4x/5Ekey5yHlwjm8XIcRzJh9ToXKusuRvvpxOjCz1bXGR/fTVOgAT6+pbYZbyvgw02HNfBRm/uwZdhWx1PpmKwwcbWWVwZRv+i+1k8g+pcnyTjssh/Xjnl8uibb97zkVkXGj9LmQPl0HmNtz4CbCYSIwsLI4TrD3Ixc54H5pk1vAxMYqlknGiHmPOAXal85XKK2ugl0hXnhcvq0OjAtl0xnImAFcA/PHVgprkhnk7HhSMrKyIF4ml20dPcjALaS1b89pVyzA2j0momViVmYLQzsGKYxPXCyFVXc6sOiLlcZmfVCbEeVdmHLIW8OmjpdXltptnB9NzW9tTcOr7IZ2l3ei2WzEBqZry4Ldy12cJ1tTuKNpQMhuNbBgKtXTCYu9atLxni+8exZEQCIq9b1KJHCe3FJZmAeoi0lUzww6rRP7EGy6vOuGs/iTqrM1VPfoxyClq4NaJu5VgLikY/yJ1zF8MZtEk656ZFH/LD7mr59QIpwLFN+2CO6hi0ubeY7LN8yJdIJfs6O4J9iZB/gK33T9m6t3rsw92lyLTFBSUiPpSORAY8aV94IBnOvop5PwyPf+WqY+les+Lhkcjjj2/uYfv5Ia/FkP0avBkiJybfYSpJtEpCQwdHNqVV0Art4fvuuIN//vm+G2IhtOi77TafcFu/j2FpOxWOPV2Q+lGf3HoKXXCQtv/A7f5gLQ1yyr2O0CDZLZWCBJeMDe4coVTYA0eOZG9aS2fFI+mAa1pOzmkqUC1d5SwaSn+1RxyXM4KeBk7lmBP0dIhGhbnTcsOHnJZ3Te/n44Fggj+gOWUO7RDuiKdScfzv3Cn0VBR7VIyuLiejHkYJdctQlqI2CbVgmSjKK1KAaIiiTooGclqxA+xNuNbAJVOJhkQVZCJdJLp5oOSuu/NAZnr/M3kNpaDnP+dOOUXiwg4Q3qlVmlowF4ryK0rvgpwUdVIU5KRoKUV9shPyvKZOisI5DUX9shNyUnMvj24+4oCcBjSZ/eL5eLsUz+TimEOzaKdwBAct+N98KEOt7aIyeGU9U0pRH5EM/IutYg0nn46jJ6NXarQFhZWaKyJPsgbh7EZfRYWvEV2bXWboqa8B71O4fDsZAb10j0t1zbQ/qFrHssUFfeG+gmKWXVcQ9M4MhQtKVSpNYRRIn1Lt1Wo91XB/4VC1R6v1VqPPZpfRFfVBrTZYL1xEz2KxrSdpz56Mupk8ylLUxii9aycn4mFS8Wz4qBPx8DNfT19QtL6gYH3RBamvfy91ZVFZYUGZ+iq0EZU+UVyjVtcUPyH8U3jtuKZOra7THMc2hQq4Kil74JIZBz295Sf9VxVDPXTFuosSwltLv2ORcE+tvazMUYsmswYsJ2lL5JyTNFVCQVOKshS1SagFc5dQNYzLLzJKNMACFHVSNJB/l/0TRf0yCqUUFT1oB7mDZFh9Ir4D+YUfo0uFp1EqhI75QsI4md3Iu0SGPZJ2Smgvk0dZiornNI+j76I7SaV0B94/6VcfbZI1gq5G4siCn+HE6wKVcVODsaCjyN/N+T9tsju7Dx2qb97c3GEpKdG40Pdd19c11+k2d1k7vlfYYzT2tNbX1ja2t3TXt2CuT6In0W3sS9Cj9cCVBncKR3cmm99vw59NRuMm+KAnXaY5k4s8Wtsa5xrbyCN3ExFnDBlENAMtWQ2tYSQ3cDjb2luCe9CVwlOH+XmHczt/+DDOPx9ml30rDJcJBmc531A0RisYNYT2RtJHZ9IbBRLlM9Htwt3QktSCkb+S7NBp9O4iktBeRk3aODjSaiaEm83dRmrOjCtnshZya7KaxFa4LAaE1uEiMRfUqalgl2RY36BDxWgs4RUOWlHVL9Yh4/XHtdFJDj2Z3X78+uuPs4vCxcPn5W4mEZk3f9hdLAZhTuQeqU4csdpVVy30wLP6qguip3p7fadEL7gqdq6v138uOh9tF76KBsjnC8I1+PIF/gC1PnyTA7ypRxbLrrmPSQv6VodWqJ3f2Yt41VhiYGxsYGIikkpH4qO8c0dk/syOQc61pdu1S2OdhIhpKBJP+1KhcH8q5J+0Lk5yQxBX9Yy5g3NOvDLgrAy95YATO+S+KQ7nXKrFEIvYd6dCrArh+0aljT5bOfvprAH9s8rlqc6eBlYi7UnfnSerepPuooAth/O/kxp9qEERUeBds/I+egv3nxQZQ+8RE4KaNXUdnWgd2sm/sA4lE4WheIKtzBrYO4TOnXuB3jjtq205+uhv5Pcg+V26zwC/k6oZ7NuYk+RL5E7UHnSYFz5glzFV4oVSBTO0OS9/d4DQgDGXq1gkfz+8qq5rPdBcNcv+aOC3/desry4s1JZekBDefoptEG5riWq10Ra0mDXI7zOjq0SbSTeUXweUhdHXwnThKI9u+cH3c7t+vc5YAUs3/Ew8hQx9gx5B6TJnmwmFQjM2LhMKdYX1beF9XaE2fbirLg6nNScCGS4e58gPtvglbKOBN53o4g0GvuuEiQeZpNosrN09RLsxyWJaWJe1Yqzg4KSNPfgJehhVDFoWDvDD/d3RDTzqVKn3Z/7xj1BSrUJnZQ3E5jA6TSRCB11gWIr/69D/COfz/+ST118Ptp9nv5Cd/z5+OyHNECVkPc+9XdGHgtf2XhuAV6fZu8nHQN4G2uJ9aUqb0n9fSPoP9x72mwmHWfao+HlGlOkK0EqSSS+10euQ5mhMiN150UXQYJG9LWu4SJoPa2QV7UqzIX8TP+90zvM3fS42MhL7HIyRZ3EVL1TrjsZio3hWLSBU6KyqdyjRufbqH5wuEjr9VEzoVPa24BpKKjFTLd0OrqMSgSdIhAglBOhAyDq1d++U1RqIxQJWFA1hsXZPmCZ2e+N+UyAm3Ii9nmFX3l95n/UCRexxjFoagZSoNBI3U9qF1U2tMCaLwvGxsfgl16lRzIOGw11Wa1e4MBBwsD3Cs6Oxc2Oj7J1CyZbtAc50romTKoMxFy2uC6H9lGdS4aIcPIFjgUDf1q19Fx57I9Bts3UHsOjIJjw7Ej83PoJOET7bC2S7bbSiHI9PUnuNyIk+8xE3Q/HWSLfqFnqGg2ULhgw/yIcHX399MBwZ4G0nXQ291vcZ6T63eDJzAr0j48Ll75sqlV+jzuCsjR+I8AOYPjCyzQYJXw1Qj29JRT/ju1Zedw3Dk95PJPMnv/p2JLpFXIsIKt0ghLfSxALwH1si1VdKldIu+dmCWl1x/vnIdYF+YDyU5Hs6Pb4g+wWvV/j95uGJAeFxFOoNBHnhR9BncbClHrTUSXqCfhVkuDjoAcCaGxRX9G+dDwTmt/YPbt062GO39/RwnGZudEm4C7rwm3eMzc6NCmePznlCbnStOxRyC2e7Q3h88HieoeNDK1WjcGQdwAsRCaP4L/aN2reHfs1ffesNN94YHh5CibJ9KZjTsgbx5gRqHeLDw8QGK0lig025fXJOcz21CD3BQOsc/AAxAy+aZWsoBR5BTjGsoi2Iff7Qhu3zHTjHoJE8sTquy1TRSnzQgHClGVFZ/T3ooMqV5yNT5uDBzMwB61QgHBf+Ho+jDYlQKAGF5mh89tChWeIEkDi/5ZZ4Ei1chXdYtP7OAlyXZGf7yyTPSHmSsJOeICsl8bu377vknCuumJjZsGFLYtt2uAeAc398vE9z6k5UfMlhftfcYGMgfmjnaGTO5t3SN9q/ZTQx2reFUZH5sAiioTLyDRr0uyT0DvyP0hdJ7HkjPZMMREZ2jN53HxcKcffd2+P1mO9lDWm+N67u88XHvI4uk9Njbe+wQc9dR2JGQz5GvA5dInyPNcBJKuhP/kpi9KNi5M4ztM2naYxIWgVDuNneu4VqKUbE+8QNjI5EGU7n6hhRDSbqqdCjIrQVQsTTPEj9y0K06frjuh1B5BSqcISIHns/PkurLEgfPCevP2EMeOdDUCxTA/zsA45ShFhDsjIuWYTYcN5p/K6om9/Dn3Ze9EDUHTuI93In4D/hbeFlfBKLP/BI4xMM1syYcQ/L04TUyPCTtPnIXTnSScnOyq07S6KasMNuD/sdF11odTXYmp2cpzhaMrvF6Rjq9nA+3+JYcX+wtcvT2e3xch31pjqTPjhojHRz0YKCgr7e+ASNnAzK8eEeiAzZd8fJkzUIX633ubToTdg7D9T73JWCDmxE2pN+OybmeQoAyJ0oiyfTMvPs588UT6bPYg1v0oNpegZN6DxIaxsR07zyLpGufE0EuYHVN1d3mJAazfLL61Br2KoGP0fzINqfhd/xUz30/rCBqScy0K03TBO5+8OsTjc+MwX3hwsqi7fNhOBtdF78Aha0Nbwl3h5+K7v8VMe28YF64QE01rr3nN6nGJnNSkTtWqSL43t4VMDjmNPw179ml99/n55GmdkicsZCWyrEqQYsOhkJ0nkGtLESy8yBF77LWpgi5lkB04iAXjqRBr2rU/ID9IsfoDcCAaGW7q4NQGFOvjNnDLh3RBTGewDQjXCfXMvUk1XAIW07wZ3J3EJiUVo8SSYZtGH7qadu95FHNJW6FD7RpaUDszfN7P/KV/bP3DR7YOnP6JupGNwqGoJHCnhLGRDgOksssA0ef2ENJO50wBxdtCbuPFY2YJnfw8cjXHwD/6xKjRam7rknwEPY2ZBdplGn4SOiToOgQ28KOlnUafiwqNMglKG/4Q+QplGn4WOjToNQCfzIRxZ1Gj486jQIdej17DKOOg+QXYiB0TBaaWysmV4P8Mem9+2fOnYsEI0GjrGGH80OD835fE4nzhMXSa2lmFXvOLn9p674wbWYwLXX+iIR37XgFIRC0Gt3eGiUKfKvUZCAxpjOid27tjmd/kjE78QxpuGnmaHhjNvvcvqFF7G74lWqECJMP8lvteRHqO7DI0xtkx4VoiIvjgHPvaEQRbwo7TXZ7SZvIcQM6AyIA9shDvyL8P3xHRBgtnfjiZf0oof4TKMkMeitHGEmAkc9Pkz97KN/8OEIE2bqZ5+VyG4SXnDbTe0me+4chIxMdy66RO/BKGtRrG2mwSWtbyZnrZlDiEd9sPX+yU/6w6E++OWQrMI5nopZAvZoOoHLhREzK1XrtdDZngaWJ9fsoQ5Cuz8o0g72Y9oZzHVKs3vCn0hH7QFLLBUPTOyWznyVK60UUNtH1CVJVWbYztrccQPo7jypVKZwB//ww6r1SQ+UscT8gT6ejfbOzPROTZkdUBLyE2QiRSLPsVFGijabWYs82iTnpdyHZrkuj4/sCgR2jcRxV5o4zmSy2TSZ9EyWNfxr69D09NBr6YzL73zN6ScP4JEUZ1bpZrFLOmbDZb6wnknXEJLXhhL7pv/A33zZhbfe6u1L/HrDeHg4k13+6U+R5sUAx/mxBUh9DNQhnVwfo6cWkRfK6P/HHUlE/YEEv7DAP/SQbiNU8s1L9VsbJSsQ2/RJZX1/IhVdcZh9K8m8+E9ZlGmBdXijQu3whwSaflwI4PdPgVf4w5DwTSRQOS5GwFsc7ITcVPCoGGy63RBsqqw42GTW5gbX5vNyGTv8O8nYsbI7btL36dHsO16AyPfpXVtaWVCgLf1UI/oMSbqUm0erqkYs2be8XkYh+ybdc4LfHz05w8OochmeXI2EFiz/cd+b8KNndijcxUcZn0+49SPv4ivtyOQZLnk2aENO/x7WasEGEJXXlK9bV1b6KVHzrqjRGO3KvsUoZLKkbx2B3yeJnjiJUEgqCtS5m7VI+oyix4U0fE5H+yBfEMwuBoNoNBA4Kf+Vi8JIf11Gpae5LpDeBb83SNI7ECbeYkQ65IIYGSWFJfSq8PU+1CU824eGAsiOOgM+lfCPiPCGyrc2M7Z2h4R/lzJbwP0ahjk510RtV4/XfHptsxqvkjjFJX3XiY5kuUJt4c4QZLZCkOc6Bm6MD58gkYXeFoohmYV/A4c+hqnipcEAHtJBalodPexq31DjkepY5SAQ2Nxew+lxddOkTW+rvf0XJnt/IDgAy08JuyniQA7xy6SEHzv4FrbEOxv3IBcOZYQfemJzWLMuadwY0M/I2cdZKwFSjfsY4PS7ujAuPCPhxKsZo4hg76Y4eJsM5wn+c7FfCf4KwecIfqdocYIvEfxe8X3RBiDP6xLfV9bkE56T32TEVAj6soRK9TOsm3wLVC3ZU9Pj0c3y1Dc6aDA7Q2NbhF/Rrxta8jrMw8OpkaU13zsk7V7fojP+mmIVxQsf0rULXCNTWUtvXWjyxSpQmRMe6s0XrEiSF5MsBvhAjaxCQZ0rT9A5FNLtUnlCwBmIQXHC9YflxQlL7E/F6oTQdNmGqTjUJiy9lcrXJoBZczM3U4mthS/uqqwW8cKuDpX8R/TKwpLiInVxacHlkf9YWoLQ7+Kyttbq6ta2MnR5dnlJuqFDchh1WG6XFGi4jHhU1pADf1JX5ZJSwNLtnKKkfbp3Y09ZwbswCF58qdnW2LsY5hd7I+2Jnp54R0e8pyfR/lxwwV1aWpAN9r7YnBi1hHd5PLsi1lRXV8pKnuSGKa6mk3adevGw2EGWS3lZinhOTI+5cnFP3D626Pdynu4hh3NkpiRa3Gt3Nlsb3ZYLL3L4w3a7M6SJluwsnoj39sEWM8p1R4yDQT1sPOs7OK+nu9PT1RrsJzvfJMkGN2P9AyoXPtVTb1CJrKrVar3LCUIY0uVdQxdPCw+iW66JTpgrA703+ryFpXxpoePGqblHmgKDi4enffEb+vemfQ0uv8191VXmaQZhv/iEFbgxf74CN/sHtkGqt6frzzKpW9V//HcmqaDvFL83aStMq7/GQSFKSsvPklg3iZJ4MRaWYF3OeHC/hEils0Fedd0iVV3fCRXO/4nKuoyXQHEzmvYJe6G4WalyW35moTVyiC7T/t8O9KHixIUlVYWFuvXXsA1PZQ1osTWi1UZahdug5S4S9xhw5rlmVdGAVOOH1a7ZxccCwTi/a7Ij0K4pQOrCQqiYE47gdRTPzHMHdYbqWr32IZBMOvcHybYRyVIrKejxVxkT8XgSn8mzt9Tb1rpAKh7qDZ65ENlh54fjcB4ZGR9Pjo4m9+UcYd/+c38Uny0rnwpP7LJAFDSYCIXTvsFIdIC4wwFGYRfeDLuWzXg/IWXW9DR5SKRg1/PJH/DjbNFOo35j4XAUZfCO0tsrfLG9GxuY1FD/S5rdZPOOcr1hDWi0xzIZ8E9auodd5GLZVTCzQfEfii+x9YFpCyQKlesNEbODzDUWnHd0Odbku9daaocNXyPj+IFQeGAgfMDnLcIGsh+YPeUHR8D1zFs9gVgydkdokBhmj/itYGypVDkp0cfRrdEGk5BsFuLyM/UOcOwXzmyu7dbrREfnE+FwItgf6vsujjc9tQ017a5NR8U7baTgFT8YWqUlebfo3LlKpsv4vq+hp4/3nUlqlWilklSTBL0WIzFoCGxRCxSqyP1TBy1uoWcNtGZXj9bv2B9IxmeHpvfvUMWTHpsBZynwdyHG0uiv21Jfg0TFm+nY1+xeHK0A3Xbgo8bRykoSZOUBqca72jV8KuiQ0KH18/sCyag7mgzsm19aOjiDiccH0X8L2sE4/nnm4BLWGixcCxbupneOXTrxdE9aZql1jQ7iQdjm+PjiKU90MKTvBKMb3cZWvaGrLZSKeuz+Ir9mtP+l5GIJrwmbXzbbbOaXxac5qOFLFpIv9Y/GvN4Yth+ZT0hG7T2y2p+pzqMsRW1MHr2Somcr1lqd2aZUrdWP8uiVFD1bqeJeokCsglFWI6JV0g4IZxLJqDJ+sqhBi++TKkcOZfsGTv2I6IEdv/56vAuhVegnRElKGSkDJ+r9joh2SKMez2i4tn5tnLQ2b4r6pWDpXVkClYZLSplUhqXfc14mZYa0YqCsV+EFZzPM5VOXnYAt3GUnWBaV8cJLPGw2frYxVY8ehj2HpS7VIIwY2euxJbdJJ2V47er6+LVLK78C1c1v57jtfHiO4+bCfCrFw51aqJZuqq1rbNTY53kUimy327dHhG/z83b/aAKFEqOjCeHb8TFU1IxfqqttxuN9O5isGrTRiDfO1A4XXoq3//j4o9vu97GLNw5cjr/mETFD8F45yLoRv+dy0pKIAJuL5dQtutlXg77haGKER64d4fC8PZH8IToQf5M/6IgN45M7zjYdCl+Z/JEPcx4BP8I7+OY1J3gkChQjDYd0eIJaoaiFT/KRwcGI/5twEnnWd7afxs1quOlANDXEAx78Tx//q+KDGR5mVqCdAQZvsr/DOzUg5EAcItlfdL/wZaRPCM+hEv6eM9HTgq3ju0JGyvm8B7K0rs75SPkeLQQNKtlhDuradnAdX9AfjPT3Rc3h9XwhOl14VlWzcSS2be6QZmaL07+lL9o3ZOtGN/mEN5pc4YOL0fkzwHfSpM4EqlZo/spOiuRqpE4X+1ziW1SNTPxOd2PjtwZ+VlCe6PFNWN0Lkfj4eDw2jtC4xrM3ZtthQW7hIVW13rUzGtvb65lLD85kkuk50GlUOslfBz2GWshBi+r7aJ3wwxh6aoW97Zrj0ew+PF7GQSaW9KwzLxPt4XzZs1FWGS2JSysVkQl6u2/LrMuWDPgTVltmtO+Mhdiw25Xpj9smPd6MvT+Vcbq3aHq2esKzhp6N8S4nH3Z3xWt72mcgIvDGvdZ0fXfbtNcxbOoetnumDaaNaYsvgW1Gch6vYJuRaElc7+QyqLQgmlOS9sfEVt5t2FbYeg1P1MTH2fE+sBsaxYZajMT3eDx74mA74QdobCaZmptLJzMwn9y6chg9hWKsmoXoJ5sF5K6Vz6HjyAtIt4QcAeQZ8k6PhNwArY6Rd8wSciu8cxdBLBLyGXjnIYJYJeTzgHybIDYJuRNaPUkQjvK6GD1BEDsg/8Ct4J3vEO4O/A5Y51Z0HXpK1fdJKtIiQ0MR/Om0Wjvhg65Lhu8KDw7CI2m1dd4FEDzwCeBd6GbIOQbwnKDNzwl3XX7+QnovutmG+jOBpPAp/OYRePMZ4F4Lb8pnBdI3xD043X23NbSa29vNLjYZ4gfN7Re9iG4On1vjre+y2kx8ajDYvqV5zoZnhBtAl2PAl2hCJwRxPsApdLWDEEUNfMpp6TCae9ob57/y6umhZApdNxhot1ja263OfVbPhdr+QGAQU7wV5LsLKJaINYJwvEVy0ujgLx/0P37EhW7eOXRC+KB8Hz7q+wxwfwjexdMinQNyU4ADB1zqnFqoyZcqdBWY29rNlvZaQ7Hj3e+WqKG8OwaCxNytnbbOLktV+V9tD7BN+oFAOAn99Hmg/m2grpXok0HGqTlKk457cjwc3VJXfsB7SdMmja3ZEx2OdtlsXZ0cB30W2hStv+8HG2ob+/2hJO5J8gH57wRdnwQOMN61Wr043n/3yKMu1HAv/OWc1CVe4XN4vB8BSZ6APqtjOCrJxwx3SUQ62CMpW9e4rrZrs6GzTjdq4lKRTnPjxtH2nr5gKNHTsbW2wYyu89n1gSqDpq26saWlSacv2VwVaLP7rG1NtZ2lxkpvs83lsm3yaA2lHXVNbdhCIOV3QC5iIa1LTy71y5m7ZBZ669LmTcW2Tb2x4Uh0pK7iAMoZ6OacaZKh5mj9/T+hBhLXOvQOyeExHOLQdrTgEG7HqUBA9OTsAn+LcSeuAmxR9mYdCb0RpLEgjpDGhQpIoehZba1tTZsMHOKd9rDZNLreuP6s7H+dXVBZEognz3yBsHL3V3fXNbYZm7mgz9warrcVIdaEbja9XajVQIZceN0k7CfigDxNeMdIdoh1UpZfxlJLfFlNfLkF2DedA3yCieTerzx+ee/hSzghQfitIR0f+Mr3yhd+neOwSeJQwhhx9NEio/lRo4+o+5rE5zJXhDNuajZsbm7aeuTZPXY+fBrhLLFCn/GY61v1jfWt1qjJunW9u9viE04lAiDm+ZUT/6u97wBso8ganjer4t5tWS6yZVmWi9wky7ItV7mnOglJHEgCCSaFVEJN4CgJHHd8gY8SAlwjHxeOXg4CF3q9kORCCD3kuF7gqDngO4Itrf83szvyrmXH8PfmZFe7O2/ee/PmzZu3szPzYDO5gX+N03o27uKysmI84sodxeXlxY5yhN0zegasIbewmrNgd7ln5tmX7QK/fACLoOChNYjHQghoMEk6rI7yiiJHeblD/YWfldrtpeyQB8UVw/Y4UroYsUkkVaGlel0KGsfjSNlfWFZWmFRYWlrIeaDtpYV4gwdKle8Jnkfu5fa4TOcdY3a77s6ru4OPsvLysiy5ufI69eIu9TfOZu2x2iY9Ma4/Gx2BDXxebzohTokNwpt1fENW2kBaLq4cyEnOKSi0vg6br79evvqdQqu1sCDHWshwfIze9FpaoeAw+nDwPFPS4zCludNqcuz2nHi2mn7PjXCh/MMb6brCnBybLSenkNkWdSZpBvOk/GODesK5MWfq2fqbB6fZ9WzZElxej59GyiP8vfogenWzW3ASUOA0L5z/hpbPVaML4WnqVmiIfXOQVmRUYjzbweCZPvz8EvT0zEFa6yMFuKfmtNbAwlp63gPTOjumtdAzC3KQAauyS8AfwAyb4Q5qpmzQJ5UAeQkMaKHe4X2JTrOqm5qq8QAD/8EDAbBNnUlr6XISQDm4/Dju6KqiLpffYqMWfxXFNxIuDgsm+C3mJGo2Y4LFzIAcePdAQ0eqLS/ekFxcbl2TfbbVVZhglmJNXaYYgzmhwJW9zrLWWl6cbIjPK0gO+oPJWUmmWFNSZuqQa4nFbo2Pp4a4WFdbSWxGRqwxubgy97zz0LlKNsVmZMa42l2xsUYaH2+1Zy11LbWUOZKSHGXYdCi3gT4+/o8W2MsaPT+8Zn5kOvjh8OOXOkwYdC1eUbrmfJff9TAeY9e1D5c+fLjunbrD+Kf8AH0HJSraOzUxiRIgC0dvpID9laSsrF0IQ7g2cb10f+iUcalGTIWncI0LDPFkHE/PA/Po43AH239AbuEj7FeAmeSqT+7g+H+NHtbfpD4+/qt+pPNnJlE+ZdcCf9u+o/OKxd3L6+rO7LrIse+W54d+strSnrrwylOen3vlYArmPxfz36Tkt/haKZ/h6/IpQy7nYkbfsu7FV3TuuCiYMnjl3OdPuXJhartl9U+Gnr9lH+FvFDfCMPLvUnQUe1h1cBt71Hp1hhj2tHzaFvarfPjwlboZLinR4OpYv76tzJAouWbUeb1VfinR2N7g7zAmSv4q73pnT+1eX3Wgqv4JT7cz4K16ItBvnta8t8ob0FO1CGLezKIx8lkqMUHe5FjqqfYbEgzt/oY2/PHjIIVvhguvytrWr28vxQvXDN96pLO3eZq5P/AE0nF2e56orwpU+/bW9jhZWd9Bqs8hVTNSVfe3fucfd92FlRUIHQwwiNsQYqsKoW7pcdtdd/1jfUCqDyj1vR5Pn6srEyRmdr+86qrQVVfBGtgg3yTfhBA7EeLXCoSdQ0D+1VffffXVAoTp2GqE+QhheulcOkjI86SdPb0Jn77In84TTxHfdqiEQ7CKSMrXvO3QDpX8G6hIQU1doOziDFU0BlYLyAHYC1UBXi4ClXRQwZGKKXiNKCbA0Dz6IM0b/YDrOsI1wx/nNjYinNqvIVyAj50N4b3M+zmUlBELaccDerHTkf8m+jzR750Kr8NXUowCCwK25bKGmfKjeMJUAYx48U7WwerwjsEiT1/AEbhHMpNkGqBL6MrnmUQeQogVmN9MAzgmew7f76OUolSIkdlDpwsNhMXOz/CHw6/Neu01+eDhw7Nfe630+PHPvmAHicrDtjcz2/kZ0l49PPvwYfngq6/OPox51D/CvFpSCntZHkEFzj5wYPqBQwj06Zf6dD/HtfvAoZkHD5R++iXLT8kueBDTjyk0wcX8GDs/w3nxs+PkMJ7gwTdOPfUNdhAACeHnMHgBDYlxsxDkmjvuuAbxyXVQBYe4LpgVbbDjUQm3h1bB7UwrmF5II+9roOLH4Lx4JMMzwynwzOmKEvEMMHIfcVAzyjUJYb3pksOPtgozoME5OOvz4zNfNCWZho3GYVMyAsnH5KOfmVOMAWNKDDIpLx69D2bSz7jGpNr5fCiID8+hDwXnw7YAXBV6hkFJU1FIMIbOkG43JUQoJJkDpmSkQDXc5RDiGsvpQkRedqteL2BYRkoN7yKW5xDrmy9mWA2G3Ex27RAIP+HYLTaDMd/Kr1Xu4J9IIY55L4g83Ws2Wyzw86PhBnrg6MyXar3POyAuALGfNQY+4RwJeLbbzFgOr6T8bjsaIgZQMr6JxdMjABe4OCKknEo+hr/AY/wLF771ISY+1tsqMVspltQnSUPuYLJcTs0V9rzq8upGVMWCliJbTkV5TeBjR2HAaCu2VbhtBf6S7u5CJ7tkujIDrV6j1Kr41+Zv2Qt42awu34wSKUF0BAlSyQzfpk3cTLc1+Nu5md70WvAkXYHSi1L5FZUDroVGJaITpyC/gkbzTah8IahYaTWHYZhijlk8R7Iy80zYa7uIhIe52XEW2u8Te9DMw5YgpUHVlI8hU3pq+RbE9xMmAzoQfoGN0tIDP0kmkuzG/t3H3/UL+J4/TKX4MbG3ASoXgy75EriuVJ4Gz0/oeYS7kK0o9yP8JOeO8XMUvZAycgPy0xT+hvPT9DBauND9o/8iYeX5yKuE8PS7lfQrWfoFmC9Ip+HzA6NBJX3kFvw1I9xMghDy1QiBK100OTt+wp6vIU9AGN7H513hu0d/h7Z+H4d/l3FCa/B5c/gEh2/mnLyGnLynPB9BE8bT7+aUmkfPIAxiGqnEd5SVHGIN8XOIauJHiH2jl3LcTyDu7yMvJbRjJ8/JpgESY6gWn9+HzxP4fPUWMp3v1aS0YKfPmAk6z1nS3RmnduclqMgoS0goT5ffhruHXxPvSXgSV3DrJB7/tM7b4jKM+Lb6467fd8mHxSsV3Cuu3pzslcAgn0LOhndoOY+5xX1XCVvxZG+CFtaD05LQoSK3u6iooqJI/cXJrrArEJAPltntZewAt7j6XSDA6hel/hOUegnd/xMuU6wVv/r8PF4b/Akxo4acx2vhQezNK3hNtqg13MJqWD6Cb0lerilt4b/w521sfiqDoTH0Nvb+5dC0B2y1/PjmInkzPLAh/Fca3NK5Bf5Nnr2BFoafvPCJwAOBZ57B0xMERnaNHkYcj6AciJHn1+MRR/jgYPhSeueSkCwVLwldJv18UfsielV4cLFkCB1bIm0LnTro2e6/yX+j/7rr/DfixXbkezfXWMZ3hxwz1nbkO/F5r/o8VtHkw+z5RiznM8rz8FtKi8CmZZDX4vMn8bmJxClxUlw+1qdkOrFqvoWWbU/PkWiWfCr8IjQy2ftjtjEjsfX3ra2/n0RrRkdHbsc3tFiJInfdIxcRwn6x/nYhl93YJ9Hw22QaTaBbSID0EeL87u9wRm3Dks9omJ1akBtvSHKWWy/N/p7ujS6xoCT7Msul1nJnEn+jG/APpGQmmeJMSRmp8Li2Tc11bVDf72Ljattq4jLTY03s/W77dvZ+Z4xJz4ytba+NjTMo73cbXRstpcX8/e5CbfvCugHl/YqX+tjow2iVsJRECv9GeWvi7chDiF3/Fij0Z8wuR71ZyUT3YgiXyFtK4UG5L2KipfmaV69oU/1w9MuYwteNEFb7i75vwdfJelvUqMh70Hh2j8glpdQQ/mKM3Za6GSU0jjo7Zs1qK5XiaMmMupqaqnp8ZKku8vjxSX1VzQRdDvbOz/qqmqvqH1V650eLGwqpgfb5n8UOWi3Rc5EecOoS8f43muGt8nmlsEcORhimPdgpT8CPeBszhHFXatjMR/4sxEv8k4+aGacYAwD3OCMaeuQkowKwRxhU+S1x9YMoRhl/aB8uVkezqpFD4k9H4mxEy69MfjKz2epT8HbUnzeQd1p3jtVodFqTc/GnxBr2nIS98WNixmjWiMR5C9G/Eh9pJL3RteZ1YWMYM1za6Wzj+NN3teNq9aWUhpXdPSsacMpJ0N0/b/6M6QtHS7dcOVbHF7MBrHg2lCW4NHScjt97g7gdLD33/tk9ffPm9jYIxmWHLddaWGjNKUDp/kNdCVvBZeuPLkO0RJVDcG7Bw4iHbNPxLCu/0c84x8/JpTIkirEh9U9ccibZHyGmkRtU/gKkjXSijKeT2RO0DvE7Ia923S/nGTtBo+Z3ZJ++FeVpL6JK8Vf9BS8P5JXKf4UK/aUoUXQBNYXkBY35plEpJy/fPLKQnEZOJ2eSlVOUdcoyT1128fvNer0MSia90Anj2IQXQiolpfIx8E16KSQyuZD0guJ/qs2iMer8awdxjc3AnspG4WiN3Ad7R06czDK9jo5fOBA4HN3kKbb4B/kMiXz+zT6dY56QIvLDWsXReh0Bce2m4dBcpIXLW7RkPmiEU5DKyLmjD8KfpH5SQ+qmoFJFx/W4nGzo8knIGm739jrV/nZ553DtBCzkLbmkf3eky909d9tgKuNqdDQ8in3UKPcS+tR3kO7Rw2QrkeR8TPkIU9QRDua6sQPAC/LLUkm4nL4T8vIh3ScCgQ8DgfA/lTdMaeT+yXOG5hpvHd5r7PvmxQlyglyEOd/BnCl8TNgMmWMuFibC8mALnSkPRvylXPk4vtzeIR9Bj+e2uHSMPhr/TbgKfZ/piOcxxFNC+/ZgmbBsbG2HIWTi+AVnyXre7HjIq6T1oT9LtpEvOX/hr6PYVN56QwWI6YeK3Eb2ExKRH3pZODUfQkVY299Xx2x8/I06M1REbwjSG+Y2SuYQ2gYI/3X0PjFmiDCZ4b8aGuY385kz3xu9Fn20amLCFAk/1ADA5lBohfwh2M6Fm7fATXKlXMtGsBHutwqcBYB9zzkXbPKHK0Khc+E1eFNet0Veo/3WYaKdBO/FNzC8byE8ej2ut4uTVhIbcSmxHBypfIUNHkpHx7c/492dIzN6/fFTp5xSPaOqe3ZubXFZU8HgrKoZQW00e7Y9xLXXXntT0hl95cHK2LiaadUDqxKv3779lZlqXPtevj/teTCC7zUSb4UoMdfJI1vk1eRPEjRiu9QaenHrhLEikI6XXEyddCMpYt6vU5ls4jK7lImwfnT+GUEL+vu85GaLSzPzm7VG+Nf87IC9KJC9oPKUtIyMtAVVC60Be6d3fuX8tMzM1Hlfl7Y7ne2lpe0lJe0Xz09JS0+dX3mKtbmoqDl7QfXC1LRicWs9pbmkvayMwZWVdvAvtgNYDzHSCuLAvtvLtILtVIMf7FNdCnesPnhIPleqRWEv08e5q6apnDsLWJesgWBfW27/nOXzauYth2BrvX36vFULA8GmuuSa+pY2//ZtptXzm/pNUBaDQfhmn2nets20cl5Dj1n+MM6yYdqcleZtz5q7GjBIn7ETrKZ2r29mEjGQM0b3KXEc+MiCG2U3cSQHM6ry1NEcZLj1NXWCYAe4POsWV4uADsvZxp9rm5runNVVwTaQr8A5F+81YnshOfjlNYX+kVSLVVmogfxQdES3RFC7TDCJQmv7krp5+Fe3pL11sU8K0lntwZkP4t+Mzo6ZNCj5Fsdh7Mlmz1pPEDeNwMnhOOusK4i3zV040xnVSOx4kKLEQVaWM0Rvv8/Xzwy1dY9two87A+1p7m6DhuZ3W7sDTse7zfKLjadUMk20q7uGZ7MrpSS6XUuUQkSiWm5ZhH+HO073+U7v2P7RR9vZTJ/tDwRODcASnCaHbuGpgQfge7NxniDins59j7+SElLOcLdSX12VFBGUmOptk3jjVvrZ6TkNroz8/AycTxw8wwddc7ra+th9SX0OXC3Xwaqe1IZgUVlbvTfgalpQVTU/0NLT2+bwe33tFeX9DSkBaFK+mdQj7SJldwy7z+zz84NPM870Z5r5AQkP4d878MnbD+Pfa7X1tRvw+M9A4M/q5Z+JJFY3cWudpfgDRnboY4/hpxa5EI/PdSHIkpqbr8b/0aHImDUkX6I1vE758kvCyHEV1mw5f19C2ze21riqN/hRsHdPszQ39CA7mG0GhIGZnCuijMQH+XQHxKvOPkGrWk/wEvV0Nq2lV7CRGmfEluEbH99WCH+ZNcF7iG1f3tCwvB1K5aNVXSXwvNxe0lUFpbMxCurO1sV1gZJOt7vJ7e4sCXAbQS5EPyl//Do1Jx7cE1IO+LvfL9/g9+/1+5UV+PChUj4v9kZ29VgAA2yIWH4YbmwGRzNIzXymzMzRl2m8lMAtcZvy7VbiDd0mjc21LaqSuNKbJ025FFw++b0VrT6Ht8TuzLbmtjTXFdeV2IstOfktEz5tlvpCe+H2/vr2vLKyPLutf+zq84keEkrKkNcKzmsB5xRp2vluTVg+brXxN7IkQOHoGiit7iyR2+H5ks5q+SiUKuLnxP9NI+y6xa07W5bUsZZajVRqtVT8J6lPhcqCiStVoRJds3oq1gmpYCE0+DvZNkadDH/fwECfivlJ7A8b2hd7mmf21uFmZAyrC7GWabFyCSHaiWSzHUoZNiYVBb+CtXlWT13vzGbP4vYG7HOV9fzLaSr1Kf7d2HpciH/55eDLLy8/FDiE/yf4TroOn3xEY1k+vwv/sY4WR9RuKd+xo3zHzeU376i4aTtel+3YidflO5DrIbIUvqIBPl+nQNF380kGsYfg+tf4BBD9Caqbm18X78iwRlyhfE5TRu95e4rYmNPgDnkp3AH/wT0/HsfiZQhLCaLV8TbBYUV9DCo5FBX+nZKN77IwjRI6jSSMG4cf1A766YbGx+VyOjHUghGNNFo8IyXo/d4tv61khYppv+/6fSQvlmU+IVSirxCJrw7mVkFDcz48KM/X0m1tfUVPeQIMLi19xCDpOUAUOh7EPqNNJJnl947pBh49L+/b13HgwCv+EFOPkB/1YybZROOxtyihh8kyYsYzGd2EWGYCofHwAp8ZN6mFmTmhFQE6oa0A0kPepGmwkxi538/s5hvyeXDozR8EXsLUxXAKhJQYHunaddWLfxl8oHNDDO4FmhJzLsJ8X94CUkY5Fj9DDqOcysguWg3fIKdugg3OL7yiyDbtnGN1c3Y2xCzcItEKi5IoCwH2i8au3mZvW6pkLvQV8+tmvC7y5WUX56QaCnJrHW435BdXVBRbnOxBomtXf+v01v7GGktNkXqVVVtUk17oTJ/VXuOa7qrhJ35fYOfl97D1klwXtSXseWrBU11b49MMOMfwCg98JSfAYH5LSkqzTb6b6PM59TvHKtnwtevyzqdYxrvVrWMH5QSNv5QR8ZcivpLwkxQvSfWR6HTuIYUf4v6RvldWlymxfxf2Q6g/+Pc90tzmZqVfRlg/wuYptWdR11UD257Uz3eD/Ju8DqrkV+HWPS1wDVzTEpBv7ZVvCRDgszC7lP3t7JLDx0qX6VWLl/P9C3avi4kxQUzs/R3v48IzeaW9Kja2yk5nhks0O0Pli7UdmmUydVXU5bUZJpilXdF2avUZg30DSUk1s04tH0rzt9Y7zj6jva+7k4WU85zeOW9ofU9rfqr3jPmdWXHlzTNOq/v10Ea2Q1TvvDn9bIcoQF98BpyYao3gGd3Bru7O7lVLyjoq4gxgMsXwNYI9fX18I+Fla9Q1goSyNczwS9XTIuL7L2wIyv/izg07sNWk4cyQHvoHbonZ3EefMsvWOG5OOt44ivBSmug5l0EahBpkA2xs7sVI8j09LdOnT3997LrY5WIEjb0t+I+ffLN7BwZ6Z8MZY4/qBnoHyly9rjJiGg0jXzNUvir4qC1aMQdy5tRJ3iL4YfqraZgmk18Hd7I59hL8yCuvgHT2HQpnZ2bWer21FS5Ky8rZVXkppaVb8LkV0+XH61tb6/1tbX67w2EvcBSxQpUW55+aX8xPlRgyva6pIjOzInJRiQk2B0+F69vqOura+KnKWdhR6Cy244kA2QW1sJf2ixnvaF3NvOdN2bixAc7ZCLXnes7F/8RAWvB9KRdk/hXAQar1XwG01/ZJnsMRe0V5kb28XL4FT/aisjIoKSof92R1uTLSXy5fW8YeFOGd+gvnijRCGX30hu9Q/BDeN03o3bTCl/LRKN+m+fA4x4YSF+Ir0+Gb0K9xIb7E8V4N4hvn0lCyh7wBu+FFLi3C46lONG/fXdfVVefr7PQ5KisdeLyh3NV1lfJbPPBNQPRe1EQPq28Cl2LZ57J10BOXGmLHF/lSfYEZljIym1Yo7xP+k3i5ZRP7t7MncG2BuJCzMoUz/8TyGy+7S6Mkp9uTRLe3OP9MD8qWJMa0hB92vrwXLPoA3HCIv9vHIY5ZfA0QjzLgd7Cp8E5jpouZM+QlddQAcXGVT4AD7E9m5RrjqERjsioTk10/W/31v1b/LD3PlFiZhR/YOa4ZKKe1PJqAC5ATFw+QYGcbjvEbc3cAliXZYiHebX0Jbh8wULM5P2lGKwwlWc1mMMySl71irUmkcUVJDF8pcdAmeg7H50d0PkTHRWTxqfOi/nFHXE5sYmkq23g4tTTRbE28Y/WHHzheTbSaY0EakGisKSf5kPye/J7C3/QIfz6+4wCiAT9k8Sv0cVK3v2R1x0OsLUm+vQXOTMo3m6lpYPosCfnMSYShNvlHSfZ4mlhtfUVexjFiS5+l7JVsdPosSoRRdad5b73fnwkV8h+ezMozxIHhVIkyQcZFhEZjwidUSTJclWQ64jqbc4fvwIiBVSZYwMSvsAOvHDBSc0xeEpzZLN+eWKCIcTrcjjJLovH2JFjRIv8kMQeZlmaNk5+TTd9CRJmq/pe42ICWBVI+/OBsLsOyFNZhp5RxGTrYPC4uREoHDMCFGOFwLccHKDozn8eVakfPgt9YgKbKP03Ki2FSg9sVWRYkwrLpsCKpKI7LDW6fZQCz2Zok/4TA6MPI4d3IYRmWWcuhpoodouYjTN+q4XnVWK2fLXTh1glKodEEVTlEsXgtLqCzpCuJS1eLE7aGSL265d+r9aq2jyIoUtuHUs/3jtXzBdHt5RpR8SY2zw5795LI2Hg6yVF2ImSLDdLVX74jjt9rcbjM21v33vrXVtutcg+0yz3fBL9Z8tyz0CfvhXSfT/507KqxEfp+//t7743oKSwgRl5Co5PrJYonH7Xxm+HViq4YbvzWuiLdEVrKpJyTEK0r1hSmKzbE9wMVn2Pixrtr9R0JOWassdBS6Q6sx9icuDvO/sBxKMVqigXDAKWxWIuvYtPl3HFsZYhtaj2ZgGF6JFpRwjWiCFMqCi/T6L/kt+jy0c1EUuZBxdG18lt33klECrHxFPTheAprT2NpL+nTPpdTI2mwSpdGd4TXRtJooi5Nagy9Mpb2iD7t96GiSJq0UJdm2DbyvbG0kC7NWDp8lKfBqnFp+EDwIi0UaWrJpYWRkpPpIpc3NW6+ilBJ2alJ2aVL2a9JeUObAm4ND1CvJqlpF2rTrtCnvahNO6RLo4naclkiaeAekwdgGrgjBIEmatKQS5ooiib4hFU6PrmsBE6eJnCKRC7jceXTyFilZ+RpaipnJ7yWQVBN7Zk5jJVyIBUJArHzhJiwng9GMOkhgEMg1wcV5aM7WOlZ6fSSEVT0fCipAiK8YypeRKkEIeInzaMpdJBjE/bPwmfuOIhLzKQQMxaivuivIRvIueRCcjG5jGwjV+Nuuf9ObiK3kB+T28nP8e3qPvIQeZT8ijxFnsMW+ApGjX+NvEneJb9FvtkKPzy8msPyf8kzmtcc/muz+PufeSk93xz5u+h/6iVb54Jq9T9fk/5A/kI+IB+Tz8mX5GsyQkZBAjPEQzKkgwVyoQBY/1IB1WxgGQLQBp3QC9NhNsyDhXAanA5nwkq21AbOhQvhYrgMtsHV8G/w73AT3AI/htvh53AX3AcPwaPwK0Vv2eHCI5Mf+mtxgLieOm1qmP8P991lqq8X3ibv5pq6h5/lt/DELxZP1KIQ+L/+muPRYxf09qiNdCRD03qON+v+YFXzBH/wx+ZJ/+ggnk6SvON/32TB+dQljpaOXnikLGKBWkgH6Sb9ZCaZQ+aTRWQJWUbOIqvJOnIOOZ9sJt8jV5CryA/JteQGcjO5jfwUV1vdSe4hD5BfksfIE+QZ8gL5NTlAXiWvk7fJe+R3hKTyMf1vd3gzxx2pTjXRgoeL/yqHJK7VA/4H33N6ej44X80n/ZMLubHX/D+uuZZv/e95c1xPiDeck/4NH+XtSv0HbnGx+7/mQmTn7ZR7asSDnv7P+Jwp/eYsJnAPXjtnzrWDi7bPmbPdIy4W4UNCNfkKonNGTa3RYlo07YKurgum8bMOq0c8ZWeio1E8CY1y6miWfJNRqVyxKHtiMsnBOdOyFUI6OjkTSKGJeuvqGA0dfvnnvYuCRZhfhxvqS64b6LqAxERwxpNUdZTWRwJs3rFU57dwfi3mEoufnaV6fGL2I0W84ZuWSH6+hQk+dhSl62D4zh5+ZMwcF1djwL+aOJfb0WKdVlY2zdriuNHpdjsTU4rS0uypiYmp9rS0opREfPYQAiBYi8NdNu0MJVscrBoDdW60sjTYysHuUXGHj6okqNXN0MtLOKXfjOF1EoNOEyqIf2pt8E88Bju5lkyrx+997HBUVTmKqqsn15qrOBweVdVFCvCYjt9OJOQtlrJXEfaO4METX2OrSTdzCKPfZRZQ8sEPP/xQBf3ww3+wKdikme/1e4SYeeQDSdlwwcW+Lvl9fCTHxDYcwXGe43v2XPrgg50Gc27y8uXJuWaDOS/5zDNTcqGrF7rlp3rlp5uT6vOfKng6vz4JL54ueMrm41FosNugOxi/PnyjoYN4yyYhUk2KWUlz4isPJh5jH/c4FH6t4yuu34AXQWYY/Ai1E9xvsPdGQjUpZiWNWUlMH96/n4N49rNxbkGnVyoW665PSt0ghwR1HZwpAqcwGQEaDwUIZeRQd9MSOYHuwN9Bj5xAJB3V+DG6bORKlPxPHoEYl1h1hZ/mdd7MtRLpuAD4SyE+CP+McPl61DTEBnS5h72+RvRkB3vuBLvyyopPeEot8vAzJQWQ1s/o8lrwQz2hGkpGTstplzi58Aew7y+cpgeeI1RD1cjpGp1OTDzCZpBwBv7yl78QquHBqHCRzhnhAHITpsnJDBuHQ44EHEipRoUtD6KLkFdK+wZdDjIvLQItx2reiXWMGN6ggyBjHdfo6lhAGzm84PI6eRPLuGDBAn1ej8grtI7GMCz+9PSdO3e+wdoPwvOUQwj/fanu5WaC0AivPN8PL3I8dUj8SDtiwqfbVR29Wqpjr/GIH//hH9VQMHIaOD8RyXxy/wJOqfQRAYO0VBgsgd+1E1O/eOQRUQAq6KrSk+xmvwPTWPL9+6H+GMfDuRAwldTsM8OLzCaUPvIGJ0mINPoJ+mNr1XXxyVyL2Xg131eWj6guhaR75bfuhST5C3o5gx0Kn6AxQ+Ed9MjQEKEsP5aH5+e5MZ+ae6l8HbyjZH0LgUOHeDZePg1Nkq5EmeR0d2KG64Y4RaluKFzDqRFGhbzPc/B2K2a3ZNDLw5fTy2H30NB+5EVSoPhISiwvC2L1ckinD6+Qo6F7MQNmuncIdlOcCYD58D+2ubsVGnyEjHPl4jOjlXwZsGlILr936P0h+nTojwKe7GTUBLyfl8DJKe4cgk3yF0P3vi8VhruG9nNCSqk5fl4GYPAKT/JbQ8qwGTuIgUlU4OU9r75ONHMAtXVz79DQ0L366uF8cuK8nhXqQjbpHBtiUTHuRCxDvJSIhOVnzKg4iMR410uWc4T50rWcaHhQsqvUQSkT7Ob1PTZfAqnSy5FznofxvJbpByi8InSsCq3CwjsqaLhGhVT4EpARrPCOgvSIHieHNI9xsP99evn7gragez3CGFUYhIDdKsVIOkohViM/hEHJeTgUs+Ackuxn9wITpwW731c5iqQLTAwLh/Gg6nMohkjwpEIKyQlYpMqgOV0BLkr5jlJKu4+1rGHecL/AhKb9+8P7RDmWIpRRgeIwsIlDhOTx5bRz/XAwmPf3ezgQLQmncUxkmNETmDg1xIO0JIqkxpeTR71hMJ797ysM0c/CxxBQX05Bk8Nyqggt6HJwKqyW0p+KkgKeRWmvwzNTZFRFbqhEqTGPWir+j5c8iZeeQ6OVEqUSkIg5U5SMw3LbxBCzucyQRBOx/LxNi/FSuHCn3LoTkvbjH8LsH92A0lzNYficGAkPlnYD3C4vo0swCu6ZXCdU7ZOQKodgmhCu0deqXnf1dYq539HrrqhSjp3jGK+REhX5IYmnI3VJsa2sAGoKLNWkwCZNiuCLpbB/PJXJCZXZQ4iBWBGmDWHEiGPUqDL8dih8bAihhzCT+kcMKLUWlNpdIp8a3UNzCFh65N13Q+vefRdqlYPV31hZ0plOCI4l4sQUr+BGzws8dmn4i0unXSq4IBLy4EQe7hXQfl53yqHAPA5nyT+WN0CP/KTUxs5c0tDOW4+oR7ynT4e7hLwwhctL0fCM91lLVjRbgeB5jQIC05XkNKEhLL9oTQ7WlrjtYRTQAiCMSsOoUEc5MQK8oQkMWt6UnifaznDuuJ69j/+1rY/DCj4ELIdToRCd0DcBo+JCIEYvqs0nauxpJofkNlVD16O1hlh/og1nqhZO0ToOzkHHZI2QEsfMtRPRMkAuUrSZnmjLI2A5VgVacDHOxsaqpVfbIzY3xRp7NC1K2D6fkCjCscJ50GajGKaWO7fuQu46edkFbCa3zQzcM8apR2vpdys56koiOxukDjet7nM4VuychwCX9K8NDJ1y20r5SmH7IjnEynUT5ph3y1kYO+vsJpZj5W2nDAXW9mMOVs52WMq44jqrCdaS4ehb3TQ0b+cKaGfAsEq+FfPx9tkuygFjoV6QEu0/65Z5Q01n9zqgHRliORhvvCSjZ2CejcwSmH2ADTc9HdssZDokKQMS5S8Hjh8fkL+ERPzdVQp/hD+WygvhnlK5UC4shXvkhRoc/Bs/YgAccQ4fGaA1u6QPS0PZpXoIpIIEMmjNQPjIrlIOweNUIe9pKB+9xd+0S67bhcXEP4QZHj0NJfI9vcUfxrQ74RW5ES3+r+WA2nvCUmHxGYTe4mNKdD+u91d4/qh+nDssmrrU987CDeE1x9M1Nh+LQESdalJgE0/R2/x0pQ/N5C2FtUAP6j63+Yi3jeee2uYjWuUP8w2jzV96Mps/rMJOaPNFWYTNZ6i5zccUL6acxOYLLoiEPDiRh4jNT9fYfIU6HYS58oOhV2GO/BD8BGbJj3DqvA2M1aSw+XqbrXjurGsUXp5S22p7MAtbJSwV8sV9O00rMwoYDsHTu4jCgdbuowQwP+cCswtd03IoLP/U9i/ax+SYzBF4FVaFQ6RC9wSUipFjY3SjvNtEYUuFL8ysWcS/9YiuZ4IewBfhleu2MMDj7a8olyjVmAn+LhLgTET1AHbRZ+1mFlt0QeP7IGGtM5iljnRA37bnFbLXy0tAM5/6/Yif7ImwqtGteMGD6nfwF0ZVv7Q69qLgV8ByyAgg1+mdKk5efoFxJ0fIFU7gm9Kn1+sVxxrlHYk2MOV7CcfVJSTfHuVHicYy1VsJ+lKcJdWXi/KmRKOa6t0symuCpIlbufD/pnjDFNhCsqpb0fZAuIpTvWFKVLCleMvRlkO4jGLshfMdP8a50Se4V4dg4CtlOAUxshzIG6ftYi1P8Mfb0/tMnb4K/ZFR5pg5nF/10Dh1DoijJ4hxSCvndNFC1H+RUQSuzGIgQWi0ePlXx6hECbQYeE6RSx2AEeNTAh5USnZ1BImNc0RsGM/xLb04nuFk3jOHmtJ75mi+k9/KK/qkdpvDTW23oz33dM27tKhBwYPgg18qr9dcS/i7s4afeB0OTd5IHj1nHF7QEtwJDgX6/3kRmPj3I0KX0+V8bCxNmUnvq8NVf5kZDhffx9PIx9TBbbdTuz0h2ZMsPx8Z4D6jCP/WrmlsXHNIjLQDycAdsrqkPj77TOIj6O/sgaLwZ/8pfyr1yRvxm8FuhOona2gSrRm/YvG88l/trdi7t3zv3oon1pY//oR6vRdl0ogRtlz0r6SGtEbFfFHWyDv0S+frSiKBEdEF0y9G6Z53UUfLeXP6z27056S3etmaeV9zeo65bJZ/6Yp1y/qhsrq6Eo9H+7adCjNP29bbcg5ukdGSUeYZmH5p/4yaioweY+tg9aXnyI+uu6wRbP66LTW1NbWX1nkJ5StEvMipi3jG4iKZNZ/lHAprStQAtjmrw4Xf4tgkes7dH2csbG8yFRdUzPTWD7iD+R57QXVunvXhga51F/YOTF9bNj3/56Vuf9zgzPPb5sSZq2cVV/eVuWd4Cj223Kr8/Hb78Rtf+Y+zzwv4fccM9ZXn1zTxaCUz+A7jcSSJ7QOhSkoxJRAzsHz5QOva1j3w0cLeVX0LQpuk60KbMNfC0bMoYEmayQwuc20Qd5fYPaGK4o8mth4vlthIge9w4UjPqlezKIWGTO9cr6krJlhT19BWV3VW95xgnbXeeeZ858yhmC5Te7Wzvs1Xe2bH7I46q9+5fIGhwFtYW9pfUF/kcf8YF1zgZzN3WVOcJWVBs39OnFEqaK7qnTejzVHpdTvrErKSF7T455hMhqLWqmmDMMOc31Rc2hKbYrbhbyCOSKSWrOe6lIrtqw11fqJotKgvopr4d1OhXLoAZSgJL9vLfPo5bW3nTJ+xsa1t44yW07ze01r4OegLBn2+Dl9xfr6z2JZf7OtY37y2b2f/mubmNf07+9Y2V9QuCuwMDHo8g/izCDfXqNvKlicVlJQUbGWnujZi1HCbyXUqMCHHbBPfKK5dqfxLry5UpI7b+M66nos0HFes87S0eJqa8oqK8prGMbv9pz9dpud3GSxtqK5u/PenCnNz7YSSdNhEq1HLzKRU7SHQ+o+PTo8X7BOtg32sZduCb1kZWnl9h9OUZDAkGJ1tbiqBOdVYWOUwppoppbAJOlwu+TlYtSK5Khn/r5Bv/UtyaWlSui/pjGXJ3vSk0tLkvzCreRu8CM+hnPQRDaK+cwfnzAmyo8Lnq8ADXhzoCM4e6OgYcDdUVjU0VFU2sMgJ8DqskWL4O4caOQGffMddoQlAPO5oM1Pdj13Z10DZqp2OpYhvKpKSHgxiMS6RrwwfYWdMIgvQolIlGotxLEozwj72WPCxx9bTrYHPPw+EL0XIPgT/FCVQKmIsigV3KG+XX1EOYRNRV/yWJAozarqL53b3zOkLfpM14q6pLC2trCrLd9vM3lh3R0lvDTzSPTDQvSxwevbpTYtT28uXlVdXl8uz3D5LUUoeLpLVcpiucqjhUnDKeUVuwRSA+sDwMO4YGpCHsfQuZY0SX/voVyKD2ailSlKCg1VRl03KTNWvHtTH93JN/6EpKckAlFLftO/jpQkoAOws83rL2JFmtabhQY/J5szGhqzkkoryVBgOl8CXWU2BrKSS8rJ0GZuwr+JEhY+fKq1ZQDJzcjJHSZaVgBKbAjksjopbjd2+2afMGknNimyL4u5d19y8rhcbjrwCWswJfQ3+/oSEfn9geYYnpeu0uI4LZv591vkdHefN3uyJ+Vum250Z/izT3VJb1eNCarOwDcXREmJCzVPWhMx6uuvpU7ZfA5v27Ln8ckLJHEJ4jCQDiWXy8lvYJ3mXec5vfytfAnPvuQdOe/tt+U4PpOIkfqquASthHqFYjauMSMCWA3e9deCuQ4fYGtzMAJ7RsMSQZCxtP2JPV+fVdqrzaAn4Is3IMW5dYyY+i1hD5g+zYK+ZumgoPgGvN6KYnomwXPc/yLRaMzOtdfVud329vBRPbvGE1i2HC9z1dXiHTyLJlT71CVywvA7W1uZmZeXkZFX6fJXuevma+kq3Dx9l5uZiDswvX1NbW3sTIsUHWbm1PndlPVyASBCcZcvKxWT5EwbH3x1QDmvp24pWGot4L4dNCPfBVML5iOC1aMb89Vm8v0uirqJIo0tl/ULneYMYIyrTm5JizrDm1y1pbl5Sl5eTYU5J9WRW1NYOnteZZbdnWQoL42oWbgp2bKrIMqem1FjyprtbTq+vP73FPR2bWEqqOav83I7gpoU1HzuscInV4bDKV1odhEgql2uxthykVvDJVsjbKOcnevaPph1x/jgX4rd5eWPj8ubmZU1Ny5q1nDHa4vf0wFBLy1BAOfc4rHusDn4iVMfNlLyclPrJqTKb85+jI3AmXUkSGSW91FXOjSisr7iwEpA7ICaMhriCLuSrMktK0PyxjojVHP6ak2jJUHU14Or+Cpuxqqp66w+bslw1519y/vxqPNW4shqv2VpVXWW0VeAOAFBNeIS1Ed5SJRKn7nGhtFe2zcUctc1iozrOm+3oKHlmNBZ+PPobYjJ0Eh5JYbQKDuEquVxFVspml8q2DDSyLQOcn1+Sn5uWbvHUlvGrtExP9RtWuzU7026vqI1cEBr+E4uWoPOQfVN7yJHFsvpl3fKnJ/eQpeqwVfWR5/ZduegTdJHLlkS7yF25l57zCXrIf9M4yMQgS6gnGaqHvIAs+/ZesnPMS54qC+jBX2BOtdHJnGr/bHcwz1Nkq8nNz/7lQOfaC3oHpoUvUr3q8omdb5iFnjc8VD497+euyoZv73oHJoWUm7RwbAfPA7iCKKSRylXk+v8Jkvmu4PecXJAjC76NIB/+NkCP/Q+T9revFUkuRF2N4f6JjzSORabyZmp2zuORLk0mP0wmQj9aB/mlGQsXzkhOqqrzV5fNyH2Iglz045LVr8kvO6LLb4HfsmL3L/A31CAjfi90BOS/9PTFwZ3VM6KZfoLviyM/ijEtdouYFsoIiPxokD4UnjNf6pQvDshsneDIUTUuRRohTgalXWNpTx05GjRebUw0PafEt4g3DG920FnyCVOSGoMiJsEknxBREvZE4jR8y7g5dqRYukkfO2fTpujYOfL3gicJn6P40Po4DWaxBxdSqIdK+U3YEL5OBFjgGUZH5S8wRxLmKJEOvoBZpIPhDwiWJcQkt4lLLl7ITsEknx6kr4er5bSgEKHUiaFBDMNvj95H9mEOCfMkkiw1l3JAJvhA2SIIQtuCckpQygnSeeEH4Jn8usREr03unM/QKId8eb/8/RmQk24zmwvTIF/wsxSxs29Jgp9MLU/PhDvZofL1GW5jL3/BOZNCf8a8Ts5ZLI/iNAFPfw7C2miGJmJGo1XxOk6EZrFjjAXkPaJfCXzPBzZCraiXHT09EfbEztSsbDPTsS3D7xhPzVZCnmQN34XKdvPNTNF27nw9X4l3kse1DblYjFwY+QiGvjzyK9GFiZaqJNtxN8xvpBWkitST1kl3gtRskAolk28KKX+k3RSysMdOB+VlUJRRFp9QniYnFPhydFtEtjROsEWklJUuP8b3WcWdntLiwJKSTuV/RG8YmW1q4xtGEpDLyHJ4l/pI+tgeYXZ1LygHszKf4l5hcEcQz/JSvmPYIX4iEDJizp9jzlx9Tk1ufoQOMAx343+OZBD/czwCE+Ki4U9IPU2gy1AnsvV7len2xpLfP348ePw49Gj3x6o/ETiB/zN0m2SZRnaRs9HOlvP2pOyt4hqbL+mcIjJFFrV9cyu1hf9MbZA1bnP1r/DZLa2tb/P/8pvRcSream1l9EdHxE7JvNVlEoeOPv+dKEagldqRtj38B2qnJdQeelwXMpAFx/hA/M+Ojh+IA75P0BixUxqodMInDCkjxw0pYqs0IqF8TkX+ilX+OCSonI3sMq365lblgE/9fnmd33/Q7yeaCEmoLX6/XdP+fLxRHtwyvNJ4INL4Goy3sibp2BkQLS9wcyTW0FSYQs9J5whMoeul9kkwUQ1PBYS4onHpgyNtGbnacI/AOzJouGizPkSSnkZUlCRN1KNkZo/8nAgnqgt99G9bRn5kqO/uHdlvWLmFBz76jRoACfEvWBi4eVwEpJHtePpKiToyUbSQ8K8vQNv47obQk9L6zX2b6SPhkg1Sf+jfL3i89f7Wp57C0+NMqsnIW1iJL+WMlJq7E3IyltFoZGU8ijPd/EcdkXJ9HZD/hRz8SpWjVZdX351LI78SaGa/a/g1izAl4laNNGlRshBTIoCV/C/sKYewpxzgezHvlxNQdiY6h0cn2U4qYTNdyZ+zeeMm2kz8hMp/Gn0NnPRBksgigCpWwCfC4+Bmd/Kf4JV0V3y8K11uZKsEaNfu7rtj4iUTTTDd3f3Hfnla9++7EV2kVIm8XKgMFtF9mP1jimIZ+dXx47M3G15WupCRps33GPZFtARfS1lVRfUjC5D/SjIN3qLTWDyatwgxo2jfJozuk2pNxJAkTlepBTu7kELHkNi7UjgkHZVvxMvPPuf4eUXwCyQjcMic93SVd8Rh4fogEH3+OXK9eOTNnh5D5cjPN8s34gMV3c1Mz3YKfCxi0UZ1x0KUNZvCo9QFl/l+vIPwN0jva649YucMRottjyF/yLTXmGCSfhw6C2v9BU4hEkwMtec/eHknyhu6nuU1xRuNJ4aNpsQYNW9MoqnRlBor8h7hPTwB/iXbnu5AHBJcFwwOX3CMVcl7sApiw49AnCqhrwnPJ+qW05TsTCaOdHs6J/me8adHedbhZcdU+UIsEwVDolL9pzY3HkhX5Da8cnTm55/NPDrSqMmNO32w3Dq9PaDRW+M3s0dHUA7H1DXlVuIakwcTBqgx6IwTWP7hViaodKvRkJP5gnyC1sD1hieGV+vsvyI7S77RkJ/zCcQF8G/xBL3AV1jTtSJqjv+/ImqOdkPJa/8rg+bIL+i3ofxvCJuj276SoBXCVvdPLF8T6SWnoITZaPR/Qwn1QYJ6G2ZbK1O+e3EP6otLPxoXM6ioIvm/texdOi+HyrvRi20UXiwqF+BYaSoopfo6/ACdFwzKncyLrcufD1v64fLQMzPo3fJf0gpRHOkoydA28d6hePcW5pHr8VyJLxx6VNy3nwCdYfgaxHax9i2G44vG2Yg4J0Y7CWqs80+wB3laSiAJSixus3DXEXMm8JOCGxjNW+C1rJK4uJIsuZbOC21jhOTazJL4+JJMeO284ILZUJqE74/WRHANyFv75K1wSR9cPlt+J8liNGcnysdWSltC3yeSbEYf/1/jfHzQqE7Wd9r43Vy3ujp8SKMlr7pPqx63DfyKRU2dAa+6DfxWaskCSdUAKSX2rfRMCuUT7Am/fvqcFTHbnovp9ok94dvqmIsvjbyAJfgAS9BIOkj/1CX49i8sz3pXjitM+anV2f1zzphbY++z0w1jQSDCX+TX5xbj68upge6AN62mrpkXLTtz4qLNOtN85ZVSVpr82JjqQ3ZymiR/nJC9bvrcFfguE9Nd75uZYuoEi3iXMXwzmxBue2NIAtv9Xtj1THs6d2+nCFHCze97cJl8+TGpy1D5zX0nCVWi6a/RBstvThSx5CtST5PEO41f+06jNT3KK418qd52iJeaaLtXD/9UcTrHvSlNbtAeVWicfTL7JCiezNrofTJBL5MRTEVC4GR+mNyYXpKQUJIOr3Cv7E/9f+z5hZk7ZuZ75L8jekKopsdPVftHO//MZ7cwf9rMe+AtxnLs/t+65D7jacO/EB5Y+BH0vx5YSMY8DtF/c7eIO0hq7tuG/T3dxoPDZ12iukMLFwR2EopaIryGdJFT9QiROPrzZq4IW8y1ii944tAl95lv6u45sWGcF7hg4UJekimwKdwY/qB6ljYsT0d3z/ALk2GDf+qx+ZlX4mLYXP4Itn1bZh7/HLE1XnKfYR++ZTQKbMxDEdjkJlIK++haYmTfKHxOtjmdUeiFqilyE+yDfXILnJaRazLlpcq75DtT89hVaWhGKDRjz9PxSZIhMe7F5+MSJUiMQ89nGva9byoxOMNfKLFE3+R1qvN4RctTgkSHH+Yu1dER5/vyjXh5/Ljaghrlr/gFsi1wfCrKr69VgYiXf/XIyr5ew49Gbr6Eo/vnPzVVHMGH0QVPIK9PKrziGy/hPD+g8Pyk6vHSWKTXrnJsUWLO2iT+G72fdZIkfs2KT/xlYlqmLd9e7Sj2OGxFluwiW3Gtw1FTZCvKzsttb68vri3Kt2dnFxU4aouLaxDEainMyS3JfdahsJloKSyysN2vxVGUX1Xl68gtL8vNLSvPZb/pNlu29OGY1zON+EiQzEaOOSviK8/JmD6Js7NBZdbW0uFjzGIZ7LYiLIN4LMrAHtfIh05mQz5h7BbaWAG0RbLjk/p2UaQ7TmJheGtKxvo4naxRy+dw6Us2dfXoq0nje4eeclQW5NosyZDirMy32qzZhfn22mJnrcPmsLAq8jiKvcXs2lFQjNc1+FzdtRwrFyXgKCyuLcaKLHBYLQ61RguKrFY7KsBsje/+SXax01qPp2ytGMaLxN8mRDL+94DWyScgl6Pn83sl4pLFr+26wQt1FeHfsBpJdyUkuLALhmIWv/8ccIpwS+lxn0kSj9w0cgLxPIx48gkxavFEhXEKj1aED2uwHkSsLbRLE9XJIX8eRYTHeBIVijGekPNC8jF8pcR1dmm1dWyveGzaJtOy0kBNeUVOvqOloKHE2YixnfOKymms7Eru+JiFcXYWdneX+Av4Zb4xUFCsjHT5+TymIBlguhL9KTLJ6JighRjHvmBGbft9kfa7ZP1MnLzj6/WU4JSySjUcRrO3uianpKGywhNc3KZ+zLSpHy79url8NTOXLplVnVdenm+3dXbWt7Or6llL8Flk7l+d9ismhIfVnqSdjYhVGfTaXMLVPCtK/71+iY2WPZNTjO+IFmuRzVFT7PCgVmJ7zS+qcfo6Wmx5aJWKalCfuW7bbQ5PsaPanmfLTE78gg14fWjILshL1ypge31Vlc2uVViL3W5JFCMTIC8kn8B98ADxYb1+ayt01iSmprh6IlPzyZjpiLaP4o5p9W2q3JazXQRcSQadCZhaiLpf6ueDj19kZdisBZVFxdXYtK1WNA1CqlY0Dey6uNCRbUFp1zq9LS251mw0FVgQNA3FvA/wFhfXooVg1wjrrEE0ltyCnKK8x5jAwZVNs4uLsiZr/21+vfj1R25JcewfeUVQeTF5Am6nJ0gSe3eDdD7I5FIiBpjZwK+8+Elcf/uY7NgQl2KQUhPOBTu8D7tgUP5L4GgWGz/LOooDyQTIL+FHsIq+Lmao/RJnnuETnHU2Okr2YCSyNeQWaqIBQjjs67BKitHBitlsnXAbjaNHxs1mm4cg8l4GdxuDU/HeSn8Bz9PfU5NhHiEn4wHxXk2vhdclGj0bz6G5htvYQEmOzfaVtaDAitf02oJcFqMzt0D8MjqfIq41HJcOE7jzi4ry8VByCegX6FWwRUplXAHOigTvpplr6VXbt7O0P2HazUoaC476p7OnbeBJlOzGlFGWwuWAaQ48YPravk3/wIMBcQxwgJbQdP6dgEPBgbj2DFqyZw/Dfg3iOIw4xuZuXXNZ9+XdS05j2Zct00Fw3hiCuMt7lizuvoxehRCcx5vpVngJYRKV0no180y75/q97so6/1y6dVaHu67O3TGLIO/P0CH4seSfYuZjpae11VOL0zvzHI48POhQoLq6qam6pqnckZ/vYAeblUKvgUNSAslFTN9tVgq9ZoJpKQSE1oj1bbdCKf1FQwNLeQ+l8QOpniQxWSKnDoeP8202Q4IvxTH/9GJ3WgW9qjcrwVrtsOVZA1jWRZhnT6Se0Nsw4gGJwU19kI4nXlEM918Rbqe0kdcT1iXsXLRos7Tx449Z2gh8DVfRHUqkpzGzN1KBE5W95fB1dXZGsKu0lmneaA2sGb2TQRon0rwjEcWjYn6PUgvGSeefsgm2eHjzMX5BrsPxtc/t9rGjrDCbDRhmFzIOXx1NgS2j/8G4Z0ry6uI5q4/fcANLOTLaBNeRHD72I+b0IoQy0frIDEt+S52jJsvqKw7U7quwJmXlLW6m6cV59irMexDzXkziSIrgDzPi2ACfIQ811f6y8rp4W2GetXVfdYmtzRaXizuQ5rI6DF8DbmKDM7g02fepa+gOQP1DnJdiDJ9jPIYPj9+jxO3hAXvYnKersOUekSgxGTyjeC9aMt57Cd6Ltor3dfyet09+7+P3vFXy+3p+H2k/hoZx9438nrcdft/E7kXLwPsAuxfajffN7F7oJt63sHshXbzvZvdCYnjfQwizalI9WrX7vqNVk+ontGqSD2Vx36RWTfIVKtCF3KpJ5Sipx3VWTSpXrRqm3aykCauGSdyqYcoopkxs1RiQguEahDuMcFGWi4FwyyUgoi0XggjLJblQ+o+f1HJJLp3lkkxYP8e+o+WSTGi5AuyoKFIsVxGzXFI11u0v/yssl1Q9ieWSBuB56QcayyUNqJZLKoTvS69PaLm8KY5580tr0sqkQm65ivNzc7jlQgnuQelMYrmkcmG5EO4HUihiuX4wfdEaKfTGG3gLF9H7qEHq4zqjsVxwUWWaBU0XvU+Yru9ku/43szfY7kQ7MxkWELwXbQXvF7J70RrwfpDf8xbA7xfxe673/P5Ufh/RXsNp4+4X83uuufx+CbsXeon3S9m90C28P53dC83A+zPISfwK7rs0whr6nkj5tKGnjTbu2kUk1UO6Eq+Suc5iqmUyi5Iw0DI4ON6qwLZt50UZFkquo9vgoLRFGfXTt0MX0gB370J/Y1VVo3/Blo3TLqLbehoxCJajsef8rVunyI3tXpN74UXTNk6cexfmtkXTFgFueZHMWkbW1SSnpgR7SioT4xwalG0ZSfHJlY68pPykGoLYb0Qp75N+hthLo7BHt3i1wbu75/saKisbfPMhv5itBUjzVJblO63ZaXaPm14liN2TkZuB6wQsLjdeFLNfpMj6F7qA11GcUkPqHF+45dwZF8sPXdZzWfeSxfTE9u3nMjMpcsRGcqDERI5fXzFjs3zFJDlyUGYp3AaOl5LI/oua5LSU9qCrKiGuWL5XoFEkVJyfmJdUoyCkap/4M2yzdsQ3mVwE3o1aoWRbmVDkLxX0UlWUTO5RaVwvJYCyy3+6otdmtTbU6nAMr5i2vqR5mr+i2F1c4e9vka64+OLzu5tYpLWmbqLBkMwwwLjcXNOyNNkdK/qXSgki//kXX6zDUDDOCpuS6TiEYK5KyuifY7MnxBVUaNnaWJ8Sl1yZY0nMT3AOTcxfRTR//kn7Fx3X9flltry01HRPpcvmwqvkNA+G1WxvwLnZRQ3t21OzUtNSEhKKy/EiPTkhwVHBak9KoDOQbpTG7Vw98xyhcVyaQn9YDsAcURr3zIUzNsg/nCRHAS9blpBctMI9UJ2U1Tuz0JkQZ5fvUJFs9CYnpLnzrUk58Y4hDTY4jNhySdHJel6B96IJhCJ/esHgBT2LF0u3Rstk+/nnn3IKo3Oq/AUdlA7yWMl8hxc/X9Lk8FscnHHsWfgiqlPdzhus+evvvXd9aeGPrXkXXSR/Ad9zL8pdm1aZfu+99+5xTs8+N70uX76ObqFLwyOIefVoED5Hm5fNrJYllcda8nqU7V0ckggPI/HlzHcuuSIh0xgHMTHTF1+eYDHFGeOvHvjds/CR/Nu8XktNRy6ky1ngxOvcOYXyp3QWpiybTrB2PKMP0xJpDXJfJlaG8th9Y+uJ1BUMbPPk+jH3xyJ51ev1bDVDXM0cr29OVRy7/nhRWom/stLvTPPvZ78DDis8YnV84J1ZjhOEP3BY5VlWx9Zd5tKi0tpaPJkh9u+Vfn8lAUJUaVJCUlOBDspfGI7i6mxNihFTALwA8Ge5eCOebJhwNl0f3oFwegyxlC9dRyR8/YcWB6YpKGzw541yMV5wmPCN4Z3/BQlkMlEAAAEAAAACNgSTjcLkXw889QADA+gAAAAA29KmmgAAAADb2tDy+Tn+1ASSA/wAAAAGAAIAAAAAAAB42mNgZGBg/vPvCgMDy4afln/7WSYBRVAASwcAsEIHaHjatNUDjGtLHMfxs+fatm0bfWvbW1y03d72Ptu2bdu2bdu2zcXr+yb55WUyabNu8snvP9M5c+bYrXN88HShyRJFKIko+hq5cyfZDqFW7nfXNlovUdkT24EEMBw12GKJKENdZL6EMBtRhLEJUUtZQtoGaxOIdCIPpiawGPNbwWsp7EIzJYogkilCKcIIdlBIGUZGK+7nHm5d/HfS30HbynaYaxmpLEBUBhl1TBnsAiEskSCmIYoIQtjHMBuBJKK4EWkJRDpRFuYnkI6sVghZbsUD8BjneXfDLOwsI5GHiERlFGpUhxAz6rXwGBajCjHkSky6g3sg3qjtyhCG33pPOshBhur5CKNQGcNxhlkIyniUICbbySTUIIagMopNyESWbIN01CU4hu3REwXoof4AwtgIv6EHclBk1GF4jGvgwc7wGudzV9Ue41tQaZ33VViL+fBgsXIp5nF+bzG8gktAMjfbQO9qUmuEFyXGOtKwHTzYgiwUI4hJiCFkjI0oFyOjhWckqL6wcewx+FCHzShFBQLYiBJUokb1ubgc5+MEtU/G2bhE/dStHrcZ0zARk/ERblfeifX4Ed9pm5j+ewyzME3tWheOEx+PQ6ifwG7YKG/iHOyIM7EVp+F4KYOjej1uRz18yl9xE+bKJXKxW5fSza37d7lb1/g+rqMOgD5qJTkERXjKrWtwybMwH2+7dU3XY0/qo7Ad3qL9Egqo7yGXkFU4Sm7Ey25d89/MfTH15bgCO2N7+i7ivzeoU8jnkviGcae4df+sURuNu5FxtptAfT05FYXsvycmgXbz5xzzAdjNuEaO8CP1TcEylGEzxsLBFBRiJeZrjoWcw34atwhlqEEx5mCRzEIujscOqIdf6qRaslAsOQhgDnLEwUKswkSEsRlXYSjPbTN5MTzGvm9Hsdpz1OdBX5lt1AvUJuM3q28o+na/2ZmNieD/+J8dl8J5dAf8X5MWq1/verQ4t8bKmeLYNFYJu22P0VxyPKx2/HuANilqw2wnH/s0QC2A02D3q6/Q3ibBuDEa04AZiccnnqNlzKm0+nNAH6yx1roaZIbSOs7Ec7SKzm0rz+/TyfejeWCvzawR030yHPlYAw9qUIslMgznQO9r3iPQuDzlLKxHCcrRF4OsNf+BnhrzALgHmz/R+/sZcjJuo36bfEr4JjTR1/CGS+JTa8wUzKG/B3N9T//FgN7bxvdBjqc9iLyLrMfx+ETtBeS9QNPOzPEP9SUijK/7p5T/ftc2lzP2MNZ3LO3vafciH7HGML+2p9+Yay0KjPn/1j7v0v9zSfo4LxwPGqhr6TuHDHD+bsHtykycjVscxzkKP+ARfILLHSflGfJYOQMP4HicjXfgxedoxA94AC/gZTzrOM3Hkgcy/xH4AY/gE1yOY+UMPIDjcTZexrOJ19OataTsTf5groP5jmrD/j/RWPbvnGg4FcdaTrYca2IOn7PVWer8NzgAACcvu1cAAAB42gTBAwDgMBAAsOtq723btm3btm3btm3btm3bNhMAiAm5oChUgNrQErpAfxgFU2EBrIadcATOwy14Ch/gNxIoEiqNqqGGaBAaiw6hj+hPIIJyQc2gSTA82BTsDV5gwBpHxQlwapwNF8HlcS3cFHfAvfEwPBHPwcvxNfwQfyMpSRaSn5QiVUkD0poMIgvJGnKQnCHXySPylvyghHoakyahFWht2oMOpnPpCrqdHqJn6Q36hP5mqVkpVpU1YK3ZNLaQXWb32Ev2hQN3PAZPzNPxnLwIL89r8dl8Gd/I9/Dj/BK/y1+ITKKN6C4GiUPiqRSyoGwhO8t+cqQ8Li/JuyqTyqtKqF5qozqkbqmnOtSxdA5dWJfTNXUT3V730kP1Zr1Pn9RX9H39Sn81yOQ0RUx509qsMJvNPnPSXLFg49mUNovNb0vZqraBbW272TF2ul1k19pn9qP944SL6hK41C6bK+jKuOquqevgerthbqKb45a7TW6vNz6aT+iH+PH+iP/o/4QiLBNWDxuF08P/BMEDAKAwAADAt1VbC1Nue9u2bdu2bdu2bdu2bdu6u6tgpaoyWpmmLFTWKNuVQ8oF5bbyTPmo/FETqEBlqlQzqwPVMeoh9T5gQILMIB8oCaqA+mAQGAWmgYVgM9gHToIr4D54BX7AODA5tGBlWA+2hAPhGLgUboA74EV4Bz6Hn+A/jWvVtZ7aEG2CNltbpl3W7qHkyEIBSo9yoRKoMqqHWqIuqD8ahaaiK+g+eoW+6jH1JLquu3oLfYG+Wt9mpDCKGv2NLcZV44Hx2vhu5jALm+XMZeZGc4/5y0phpbbKWh2tZdZG67x1y3pqfbB+4/hYxRQXweVxLdwUd8C98TA8EZ/Al/E9/ItkJHlIcVKJ1CUjyDKykewhx8llco+8JF9oDIqoQ1PTbLQjnU0X05P0In1AX9M/zGepWTZWl81j+9hJdpHdYT95LJ6Iq9znqXlmnpvX4I35Ir6Kn+aP+E8b2antcnZne4593v7txHGyOS2djk4fZ4iz0rnnxnezu/ndTm4vd7P72P3k/vWSe1m8PF5xr423zjvn3fQ+eX994pfw6/pN/e5+f3+4P8Nf4K/27/nPgvgBC7IEFYJmwdBgWXA2jBmmCjOFjcMp4fxwVbg1fBCBKFvUKuoUrYw2Rjujg9Gj6FX0KfolMolcopCoJ5qJdmKkmChmioXigDghLogb4oFMIovKirKubCm7yoFyrJwpl8j18mbKpCn/0wQPUHYDAQAAa9u2Y230EXtT27Zt27Zt27Zt23Z7TzfjlGtZbkW5V0heREa6IOOQachm5DbyGC2KlkVdtB+6Fn2M/sFSYCQmYvWwOdhybBO2FzuBXcbuYS+xLziOi7iBd8Fn4rfx90QewiLqEZOIE8QdEiUbkq3IzmQfcig5jpxOLiBXkpvI3eRT8hdVlPKoBtR46gB1hS5CV6Tr08vpG0weBmciTGNmMLOPecAmY1m2OduBHc4+5LJwebjSHODinMO14IZzh7i/IBMoDEigAQhqgKagLegFhoFxYBZYBHaAc+AJeAe+81l5hJd5n2/Md+aH8fP4Pfx5/q1QSABCbWGkcEp4LKYXc4uVxfpie3GAOEacIS4Rt4rHxEtSVOog9ZFGSlOlhdJh6aP0V04r55RryC3k6/LjCBGZEbkaLRntHL0SKxGbESfibeLz46/i35UcCqVUVRoqw5Rpygplq3JSuas8Vd4mVgm1sbpR/a8p2gBthXZNz6ELehO9rT5Yn6DP0A/rd/Uvhmf0NTYYt81UZj6zmCmbrc1+5ixzq3nR/GRlt8pZwGpgtbdGWw+sP3YeW7BDu5U9wj5qv3WSOIFz2LnhFnZtt7071Z3rHnBfeRk83Kvi9fGWeGe9z34B3/Db+hv890HRgA5qBQODI8HF4H7wNvgN08LcsCRkoApDWBu2gF3hYDgRzodr4W54El6HT+HnMEWYJywbSqETJhAED8BhBAEAAGvbtm1rULv/Z9a2bdu2YzsZxrbtUWzuyk1HN7/aGrut0RhkbDCuGRbmcPOYec18ZwaYsWahWQk6gj5gAlgMNoMD4By4BZ6Dr8AR+IEkUATqYDs4EI6BM+FSuAYCuBeehw/hZ+gN42Exao1GoUVoG9qDniM7FIHyUT3uiUfj2XgNxvgwvoXf4r/YC4fgTFxNepHxZAnZRHaQo+Q6eU6+ExviSUJJIW1P+9DJdBU16C56kt6mr+h36koDaTItZx3ZMDaPrWOCnWSP2G/mw+JZCe/Nx/C5fDVnfB+/yB/yj/wfd+b+PFu0FN3EWLFCbBRKHBfXxXPxRbiIQJEiKmQnOVzOl+ullKfkY/lTuspgmSXLVAfVX01Ri9U2tUudV/fVF2Wj/FWyKtLd9Xi9QkO9T1/QL/Rv7aaTdGlzQ/AAQDcMBQBwtm3btm3btb3+9CXFbNu2bdu2bdu4o5JRtSmRItQk6jldnm5F72DSMjyzmDnJXGfeMr/YtGwhlmb7see5JFxWrgzXhDvF5+Z5fha/mb/Nf+Z/CwUFLCYUz0mFpKpST2mOtFU6KN2Sk8tF5bayJE+StyhZlIpKd2WQckiNo2ZQS6sdVFDXq7fUv1pOrYXWRWO1Ydo27ZD2RE+l59Jr6N30mD5Z36TvM+IbjvHVzGLWNjVzmZXUCq3D1lu7lN3edu3x9jb7rpPIKevUdHo7Q52pzpu+vfu+cFO5jV3XvR0rH4PYV5QDFUPlUB3UCfVCKpqAlqOt6BC6hp6gr15SL5/XxLO80JvmrfJ2eGe9x5AcskAlaA99wAAEEQyFsTAV5sJSWAtbYS8chbNwFX7jDDgfLo3r4w6YxxFejM/gm/gzSUoyk5KkPmlDdDKSTCQzyUKykmwkO8lBcpJcJDfJQ/KO/PaL+k18wZ/in/WfBXGDokH3wA9mB6fCJGHesFpIhZPDA+HnqEbUNOoZKdF//wD3P0/LAHjaY2BkYGDpZ9zBkMewhYENyEMGzAxMADsKAnx42pWRA1IFUBiFv8fsBrlhtm3bjbPtdtBq2kBYSItojNyZO/XMq/+7555rIJl7bFjsceJH+GMLteoZxirPK4bV9vL5x3YPj4NsS+cfO6m2LP9xMo2Wuz9OJdfy/MdpZFpeMGyBRMvrH1s99BTp73+cSrzVSR/HnHDLGbtss8MFhdRSjapoXsqm4qjaC3o5Y1W+I86lTXAsOhZNc6a4xybrZn4Pl4o70s6Ms1h8oXyiXitVytvsGscla1SyLuehVL9dAmmufUvCnGqAG41qjHHX3WbZFF1yIPWMWipVa5TbGKVXbfDdKgKut8imueOucRV6rBjlSr4vpLiO/kTKhbjS7HGgeCx1W+NTDDIe6gUC7rLEpotHVFc5UH+dWfMDqxz9AhVFbRMAAHjaXMEDtBAIAADB3a5ztm33s23btm3btm3btm3btvXcDIH45VsdAgD5TeBhQBwOGMg/DOyf/uXf/sM+//U//zeIQalpMJYY3BCGpBZLGW4o4hKPL3yjtqENQ3weGNZwJKCO4Y3AfiMaychGMSoHjWZ0DhnDmMYyNglJZBzeG9d4xjcBiU1oIpJw2MQc4SgfTcIxk5rM5KYgqSlJZgDJTWVq05iWm6QgpelMbwYzUpcAjpuJE2Y2i1nNZnbqmYNT5jSXuc1jXvOZ3wIWtBAjLMwylpOKJ6QmjUUsajHSWpzbfLKEJS1ladJZxrKWszzpOW0FzlDfipy1kpWtYlWrWd0a1rSWta1jXTKQ0XrWt4ENyURmHtmITTa2iU1tZnOy2IK7tiQ3DWxla9vY1na2twON7GgnO9vFrjS2Gw3tbg970pQmTLcXecjLV6GZve1DPh7aV8lPc/vZn5YOcKCDHOwQWjnUYbRwuCMc6ShHU4CCjuGDYx3neCdQyIlOojDnaO1k2tLOKU6ljdOc7gxnUsRZzqaoc5xLMec53wUu5BbFKeEiF7vEpS6jPSXp4HI6ucKVrnK1a+jsWjq6zvVucKOb3OwWt7rN7cxwB11YQSmeUpoy7nSXuynrHu7w2b3uY4D7KecBD3rIw5Snq0foTg+P0s1jHveEJz3lac941nOe94IXqUBFL3nZK16lEpV57DU2et0b3vSWt6niHe55lylM9Z73feBDH/nYJz71mc994Utf+do3vvWd7/3gRz/52S9+9TtB8GDYAAAAAGxLbdu27f+vapOvP/8ICAoJi4iKiUtISknLyMrJKygqKauoqqlraGpp6+jq6RsYGhmbmJqZW1haWdvY2tk7ODo5u7i6uXt4enn7/AiCByMHAAAAYH+Z7O3atm17jC7bxLMXr968+/Dpy7cfv/78CwgKCYuIiolLSEpJy8jKySsoKimrqKqpa2hqaevo6ukbGBoZm5iamVtYWlnbPN1t7ewdHJ2cXVzdPAiCB2whAAAAgvs223b3iPcId8m27b5t27Zt25i57R3ves/7PvChj3zsE5/6jAMc5BCHOcJRjnGcE5z0uS986Stf+8a3vvO9H/zoJz/7xa9+87s//Okvkplmhln2sYdTnCaIjfziPD/J4h672Oxv9nPJP/5lBzu5zk0uctl//jfAQPYaRCRRBnOVbHKIJoZY4gggkFTS2MR2Qww1zHAjjDTKaGOMNc54E0w0yWRTTDXNdDPMNMtsc8w1z3wLLLTIYksstcxyK6y0ymprrLXOehtstMlmW2y1zXY77LTLbnvstc9+Bxx0iA0OO+KoY9wmhS2OO8FfJ7njFG+ddsZZ55x3wUWXXHbFVdfYzRjjxHOWZ5zjDG9YJwgerAKAAgAA/rps27Zt27YbKPMxzdACzdXdfbgLP+E8fIbxcCuICO/hNbyEr/AskhAX/kSJFiNWnHgJEiVJliJVmnQZMmXJliNXnnwFChUpVqJUmXIVKlWpVqNWnXoNGjVp1qJVm3YdOnXp1qNXn34DBg0ZNmLUmHETJk2FX9NmzJozb8GiJctWrFqzbsOmLdt27Nqz78ChI8dOnDpz7sKlK9f/BMHDAcQAAACwR3Y927ZtFqs2kZKWkZWTV1BUUlZRVVPX0NTS1tHV0zcwNDI2MTUzt7C0sraxtbN3cHRydnF1c/fw9PL28fXzFwhF4oQgeDAOAAACAPZ3OXWODtZZag5R27Zt27btRL4ChYoUK1GqTLkKlapUq1GrTr0GjZo0a9GqTbsOnbp069GrT78Bg4YMGzFqzLgJk6ZMmzFrzrwFi5YsW7FqzboNm7Zs27Frz74Dh44cO4nESIisyIjcyIm8SHXqLJLiPFKcx6ALl65cu3Hrzr0Hj548e/HqzbsPn758+/Hr758geDBAAAAAABaWbdu29f9XbQKCQsKIiIqJS0hKScvIyskrKCopq6iqqWtoamnr6OrpGxgaGZuYmplbWFpZ29ja2Ts4Ojm7uLq5e3h6efv4+v0JgqfDBgAoAIDv4/aqbdu2bTOpvVgVbZI7hYoUK1GqTLkKlapUq1GrTr0GjZo0a9GqTbsOnbp069GrT78Bg4YMRzL+oyQSkYnvyMVfpOInfiMdWSNGjRk3YdKUaTNmzZm3YNGSZStWrVm3YdOWbTt27dl34NCRYydOnTl34dKVazduJSTduffg0ZNnL169effh01eejPJQbhYJgnCVwuJY9yZX5FCZsDhn608V12gPOCNQEZye/ge2Za2cP8/OmOkG2sR/qvkLV7oy16hPBQMbVEEdNAeqWhhh3gRD0AZd0AdVUFf8FUvqqlT8Kq1K/qz4lCVdyw/DJK+TbvVfwd8OwmXVsiThZUuihPXTPeqKtYSOWgkdDyEJkkMbVEEdNA/o5+XwJy7oKxRqqFCD81C4jE1yMm46PNmKEy1dPzj5vOrs9InVh6fbGXIm3dPQB13lDNvOxDZy1ubFkh+ef726YZPL8a6Qy3E/ToPZZb+TXIvWtdQyrSktU3IjrY1U0AV10ARtyApBOr/JqrpEF6KpjjoEKc7V45usK1NWd6uCda1yM1qDHOof3jQFazKh9B6QBFs2eRDP/eGLeV2DYI+KUTeePfb3lzxKf27rmPXJQvJMTdCeL7ZeKC4Yq6h9MATp8WLHywJeFuIxzRd1XqZkMT4s8lPI/rmVvf9zmfOaN3lDfqY1e+GHv7dNrDbJ77GF0hbyDR21S/6Mlz34s33zmZzLWDBwQA00QAu5pJi3wAh0QA8MQA00FAbTDElgXBhNpFwmW3VLkUsuAsnlQEJr6IAaaIDWAf8aSA8MFA4ZfCeQkbhflodgWiQVwUy/BdM4SLfBzIZgZlIw81Hvfv5vUSXF4/0FJAWgp+TYnyOi+fjU8bicw/+/RdU5ek5rzsuClcs8IYV41ws5t+GsGHJbihtasnXVtHW1zjgp5QzbU16mpJIzrIEeaIAW6EB3BMbzSsowXFEDdQTGONeOq533vtrJcHBYSRmuATnDDmmEpeZbhr15UZVpM2uH5LZycg1MBKSTk2uBzryTkgvfsYY6ACMwPu52HHQbB0huNya3E8l9FWJfpeS+fib3VST3/VtyLfIuJ9fBq2Cg9siHSO7HzjutmpoKaqAOGoIq6G3mTNBCX0Ntgw7ogh7oYz5EHYAhGIEUjAV1FdRAHdzoo6hN0AId0AZdEHrUGHUI+mCAvgf6oAVu9kSobdABXTDAHAVjnEO/j3OKeUMFNVAH4dMCvU3fBC30N+c26IAu6IE+5kPUARiCEUhB6DZVUAN1cKOPojZBC3RAG3RB6LFi1CHogwH6HuiDFrjZE6G2QQd0wQBzFIxxDv0+aurN/WKdsVnAWzY/YasVGxuGZyp03eRFVc7+9K0p7duPWf/b7Kzqf71g6zUjl2z1tGSTq25y3U1+5crNKh8CPrnNp/dZNX/I0xWbPrJOWYhLTW+zfBr237dNLtb43sG4v63KqjnCxrHYo6043e8Xoo/ri2IhDR/crHiKoWF884/jHwxtarE0jOdsNP00mE4H0/MlL1qmcFj+GCwPzXa0nA+Wn0fLxWhZXCcIJ2U3ecuVSuia1lmFDfq8Gc23vfkO5te98eRvX+bRnTqThOFJHo9zzp48s71HAUloKdJ24t5HgK7NsUD+hBzm3w90PYJqwf0W8HS9VV1d3WpAjRavhblTLOvdm6xmNlFFn2lD3KQwxglGHXGJbfeQklgdM5o00/VqZ3q1MyqR+uWny3PdwNBpO9CFHvRhCwYwhBFsw1gYycfK6cTQgz7+FgxgCCPYhvFxMVver2SzPEvHWfnwlpWTYrz8os/KbGxuJLrJf7+N0nl2vd1nMkWRIwz72C72QCpLejKi65y//O/tJZs9Cb7lk+f0DmnTc297nsssXQxuXCdow1Tsiy0xD7Zm+U7x5dl8boQrJazVa9R0PprI7ZKRz4dlOsry7Hu1KuByKb1mlSX+vSGaF1o5eX6pZGgdtRr6Ucc9zd6nw6ycT55nUoBcjSeBLCPSpufGktYjXCL89J7Nq0khmc8Qs5/e01yWalTkxezJvMuiIPyMrLpfiGAN8mBr9pVpJjgXwbr6Iq1mcjvPphPR6hbrlH2N8nT6JJAJIq0HuNGK0i/r+vRiXiBaM0fTs9ShKucf03m1SDZ/fdpoyF6oLWu+FyvV3LbK9V5viae3tMxmy+2z4WGj4nloeNh0MrLyqakpVS3irZKtOd8rR2PP/n2rqxnl2K6fbTbrZp2bdbzPxovWqCgz4/rbVldjDS/MQtvX5tRoapBrJegNK7K1qUUy77rrDzI2o/+g6hymZXNG98rdcMn3cL8N4710VlRZnk34FY76fEM7v+r+e9kc9AcDE+x0Br8ZF7Pn3/TfywKlJ0z6hp4bQ0fo+djB7mKIaTarDhZTm3ykeTYbZQfZ12ReLcRJmktci/5Od39RFV32Fs35+3CeVeJsB/t58TwZpctT6B7NouQnL2BkoRMlYvvRYZktTzqS6bg23rJyldht784n00melodvZbHwSOzv5u+jl+olrY5R6bS36PSxaC2KT8uy+Hx/k1/5ONo3tvmeRmrvGWlcfM5QYlGW+wslFGVYVC97JBwT3Y8MfadlGA0CGELxB20XetDfHc+GeTF6xQ5gCKMdvG8qKm7hHcA+7O3m33W2DkxgvFtWOk8AQxjBNoxhAjuwC3uwDwe7eTV/ScfZjnnfHb8KjbdLtX3Ya8EAfxf2YQijve+TPM/Gw+JLlMSFCeyQOYJtGMMEdnarcpI+sxGCTij2eMZIDroPI9jD70p8WQnz7/g7+APsFmzDPn4PO4AxHOBn3JCZBxFsQQd/jN2DCXTxd6EPHRgQF0L8Pn6X+jzGdfro1Ndy8WO7tR0T38NGb5EnrOsPoIe/B8kXdajHJz90BtAlrg376DHsoCfYAYzQifOJc2E0wCbOYdwWfq9mrQfYPfIFsLY9mBBfk/5hH/ZgPX8H+tCDLv27sI8eUQe6S3+nC7GjFqz1NkzQQ+wWxI4CWM8Lv9uGdbyHn/xeHYfdCtH7xIWwtl0YE1+TPCHjBV1Y+x364ffI6yawD9FbxPkR8XVcjO1hB4xLXNCBbfQO9NAH5Mf22rCub4BNXrdH/wS65JF6fa5XmDhQ/JEb/HY6mS3/+Zxno2I25tDqw3BveVs3TatMPL7j77wU7/NMLEb33bZw0IFdw05Q6z1INfwn5g18GJ2nVfOu5Tadvi3sdDZ+WrWM4y/asT3ksjb1GeZkmJb6ZHmztu0b7fqAlqnj2dZD26FRU93NHuLWaLz0GOeI+qSxLe7YjrlemfadZbPbxbjI82aqt/x9/rR8kxBMrZ0ZU3e6lsGax7EbkTdOUafoK4H+TflWy9a6bEr3lmS5LsXVOK6L2LyrvqCjvjwPtmblvsPYvOrneGRVLEkfPizJLrsxF7uWZp061+Ywj02XtS/MyugtrwStX2q93tC3WtRpr7Rjte4nRl2vyR+MzRbZHPLcuK2z1b0lWUMeGVdd2VltoVASyjZ1c1XkE1JPFKER+RfjUEfFzWkcL0LUJ+h6ZapErI3ejGvbKhZNRf6+qeq8XM9N/VLpXCBWTYVRPAFSAebm3tg6Ad2dwOa/ZI8N0Rr/jw2naqpl4wjMdLHtbymVQm8xnbmSDD+o5P7HRfxlq2vL+PJoTS0Sp+sW5Eev04WJsBtjC32nDaM982BuVEyHe+YZ3LKFr3Mg7H5L8wrNg10YwmTPVKx6t45eiuI1HRYfWh0IXQ92DsdFNczy4nMd5AUwhBGkaD+E7UMmY/44xoiMcbyalpiruenQjjY8bXS1EWojkXzM1s7XMsa5nrflHyjD9bQhlZzptVBuL9RGpA2Z+lH9VEGKWz1FNea+WQppmmWQsfQzX6OcrB/bSrB54izNYZmRYm/5NFjE5RqIeDBNR3XsjjzBMO92cUZiT4WLl6vajmrHqu3T9oiv245qx6rtn6r8ZnglOE0hbgq+CGrMpuA0hbghkGO5RftO4kAXesKOA11Y6/6v//PP7v8B5o3ePgAAALgB/4WwBI0A"},658:e=>{"use strict";e.exports="data:font/woff2;base64,"},329:e=>{"use strict";e.exports="data:font/woff;base64,"},444:e=>{"use strict";e.exports="data:font/woff2;base64,"},743:e=>{"use strict";e.exports="data:font/woff;base64,"},858:e=>{"use strict";e.exports="data:font/woff2;base64,"},915:(e,t,n)=>{"use strict";e.exports=n.p+"b68e9093dd4677f04b49.svg"},787:(e,t,n)=>{"use strict";e.exports=n.p+"80bfaba65310e841b4dc.svg"},872:(e,t,n)=>{"use strict";e.exports=n.p+"32b00813db76d1241171.svg"},148:(e,t,n)=>{"use strict";e.exports=n.p+"935e406ee258810c3c35.svg"},260:(e,t,n)=>{"use strict";e.exports=n.p+"f6cd7341ed5b88c90402.svg"},182:(e,t,n)=>{"use strict";e.exports=n.p+"09c91e77cab6fcc513ba.svg"},356:(e,t,n)=>{"use strict";e.exports=n.p+"0f551b0ca08ceee3bbc1.svg"},864:(e,t,n)=>{"use strict";e.exports=n.p+"3e711089c0e269287cec.svg"},410:()=>{},628:()=>{},601:()=>{},792:()=>{},963:()=>{},42:()=>{}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var s=t.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href;var s={};(()=>{"use strict";n.r(s);var e={};n.r(e),n.d(e,{assertParamsValid:()=>Pa,computeFlatOffset:()=>Qa,computeOutShape:()=>Va,getNormalizedAxes:()=>Ha,isSliceContinous:()=>Ja,maskToAxes:()=>Wa,parseSliceParams:()=>Ya,sliceInfo:()=>$a,startForAxis:()=>Ka,startIndicesWithElidedDims:()=>qa,stopForAxis:()=>Za,stopIndicesWithElidedDims:()=>ja,stridesForAxis:()=>Xa,stridesWithElidedDims:()=>Ba});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>zc,computeOutShape:()=>Mc,segOpComputeOptimalWindowSize:()=>Lc});var r={};n.r(r),n.d(r,{ERF_A1:()=>tc,ERF_A2:()=>nc,ERF_A3:()=>sc,ERF_A4:()=>rc,ERF_A5:()=>ac,ERF_P:()=>ec,PARALLELIZE_THRESHOLD:()=>Bu,SELU_SCALE:()=>_u,SELU_SCALEALPHA:()=>$u,applyActivation:()=>Dl,assertAndGetBroadcastShape:()=>La,assertAxesAreInnerMostDims:()=>Fo,assertParamsConsistent:()=>Wu,assignToTypedArray:()=>hc,axesAreInnerMostDims:()=>Co,calculateShapes:()=>Yu,checkEinsumDimSizes:()=>bc,checkPadOnDimRoundingMode:()=>Ri,combineLocations:()=>To,complexWithEvenIndex:()=>lc,complexWithOddIndex:()=>uc,computeConv2DInfo:()=>vi,computeConv3DInfo:()=>ki,computeDefaultPad:()=>wi,computeDilation2DInfo:()=>bi,computeOptimalWindowSize:()=>Uu,computeOutAndReduceShapes:()=>Eo,computeOutShape:()=>Vu,computePool2DInfo:()=>xi,computePool3DInfo:()=>yi,convertConv2DDataFormat:()=>Ei,decodeEinsumEquation:()=>mc,eitherStridesOrDilationsAreOne:()=>Ti,expandShapeToKeepDim:()=>Ro,exponent:()=>pc,exponents:()=>dc,fromStringArrayToUint8:()=>Wc,fromUint8ToStringArray:()=>Pc,getAxesPermutation:()=>Do,getBroadcastDims:()=>Da,getComplexWithIndex:()=>cc,getEinsumComputePath:()=>xc,getEinsumPermutation:()=>gc,getFusedBiasGradient:()=>Fl,getFusedDyActivation:()=>Rl,getImageCenter:()=>Gu,getInnerMostAxes:()=>Lo,getPermuted:()=>qu,getReductionAxes:()=>Oa,getReshaped:()=>Hu,getReshapedPermuted:()=>ju,getSliceBeginCoords:()=>Xu,getSliceSize:()=>Ku,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>wc,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Ic,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Ac,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Cc,getSparseReshapeInputOutputMismatchErrorMessage:()=>Ec,getSparseReshapeInputOutputMultipleErrorMessage:()=>Tc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Sc,getSparseReshapeNegativeOutputDimErrorMessage:()=>Nc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Oc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Rc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Fc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Dc,getUndoAxesPermutation:()=>Oo,isIdentityPermutation:()=>yc,log:()=>ws,mergeRealAndImagArrays:()=>ic,prepareAndValidate:()=>Zu,prepareSplitSize:()=>kc,segment_util:()=>t,shouldFuse:()=>Ol,slice_util:()=>e,splitRealAndImagArrays:()=>oc,tupleValuesAreOne:()=>Ci,upcastType:()=>br,validateInput:()=>Qu,validateUpdateShape:()=>Ju,warn:()=>ks});var a={};n.r(a),n.d(a,{addImpl:()=>_y,bincountImpl:()=>jv,bincountReduceImpl:()=>Xv,ceilImpl:()=>Jv,concatImpl:()=>tk,equalImpl:()=>Wk,expImpl:()=>Jk,expm1Impl:()=>ew,floorImpl:()=>bw,gatherNdImpl:()=>Sw,gatherV2Impl:()=>Cw,greaterEqualImpl:()=>Dw,greaterImpl:()=>Ew,lessEqualImpl:()=>jw,lessImpl:()=>Gw,linSpaceImpl:()=>Zw,logImpl:()=>Qw,maxImpl:()=>hI,maximumImpl:()=>fI,minimumImpl:()=>AI,multiplyImpl:()=>Rk,negImpl:()=>LI,notEqualImpl:()=>GI,prodImpl:()=>tA,rangeImpl:()=>sA,rsqrtImpl:()=>mA,sigmoidImpl:()=>By,simpleAbsImpl:()=>lv,sliceImpl:()=>Uv,sparseFillEmptyRowsImpl:()=>MA,sparseReshapeImpl:()=>PA,sparseSegmentReductionImpl:()=>VA,sqrtImpl:()=>qA,squaredDifferenceImpl:()=>ZA,stridedSliceImpl:()=>_A,stringNGramsImpl:()=>nS,stringSplitImpl:()=>aS,stringToHashBucketFastImpl:()=>oS,subImpl:()=>iw,tileImpl:()=>dS,topKImpl:()=>mS,transposeImpl:()=>mv,uniqueImpl:()=>kS});var i=n(379),o=n.n(i),l=n(795),u=n.n(l),c=n(569),h=n.n(c),d=n(565),p=n.n(d),f=n(216),m=n.n(f),g=n(589),b=n.n(g),x=n(560),y={};function v(e,t,n,s,r,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(s,r)}function k(e){return function(){var t=this,n=arguments;return new Promise((function(s,r){var a=e.apply(t,n);function i(e){v(a,s,r,i,o,"next",e)}function o(e){v(a,s,r,i,o,"throw",e)}i(void 0)}))}}y.styleTagTransform=b(),y.setAttributes=p(),y.insert=h().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=m(),o()(x.Z,y),x.Z&&x.Z.locals&&x.Z.locals;var w=n(264),I=n.n(w);class A{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class S{refCount(e){return N("refCount")}incRef(e){return N("incRef")}timerAvailable(){return!0}time(e){return N("time")}read(e){return N("read")}readSync(e){return N("readSync")}readToGPU(e,t){return N("readToGPU")}numDataIds(){return N("numDataIds")}disposeData(e,t){return N("disposeData")}write(e,t,n){return N("write")}move(e,t,n,s,r){return N("move")}memory(){return N("memory")}floatPrecision(){return N("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return N("dispose")}}function N(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function C(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,R(e,t,n)}function T(e,t,n){return Math.max(e,Math.min(t,n))}function E(e){return e%2==0?e:e+1}function R(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function F(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function D(e,t,n=""){F(z(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function O(e){F(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function L(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||K(e)&&!n)for(let s=0;s<e.length;++s)L(e[s],t,n);else t.push(e);return t}function M(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function z(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function P(e){return e%1==0}function W(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function V(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function B(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function U(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function G(e,t){const n=t.length;return F((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),F(e.every((e=>P(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function H(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:G(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function q(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function j(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function X(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function K(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Z(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function J(e){return"string"==typeof e||e instanceof String}function Q(e){return"number"==typeof e}function Y(e){return Array.isArray(e)?Y(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Q(e)?"float32":J(e)?"string":"boolean"==typeof e?"bool":"float32"}function $(e){return!!(e&&e.constructor&&e.call&&e.apply)}function _(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ee(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function te(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=te(e+t*o,i,n,s)}return r}function ne(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return te(0,e,t,n)}function se(e,t){const n=re(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ae(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ne(e,new Float32Array(n));if("int32"===t)return ne(e,new Int32Array(n));if("bool"===t)return ne(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ie(e){e.forEach((t=>{F(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function oe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function le(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function ue(e){return e&&e.then&&"function"==typeof e.then}class ce{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=he,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ue(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function he(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function de(){return fe}let pe,fe=null;function me(){if(null==pe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}pe=e}return pe}function ge(e,t){const n=function(){const e=me();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const be="Abs",xe="Acos",ye="Acosh",ve="Add",ke="AddN",we="All",Ie="Any",Ae="ArgMax",Se="ArgMin",Ne="Asin",Ce="Asinh",Te="Atan",Ee="Atanh",Re="Atan2",Fe="AvgPool",De="AvgPoolGrad",Oe="AvgPool3D",Le="AvgPool3DGrad",Me="BatchMatMul",ze="BatchToSpaceND",Pe="Bincount",We="BroadcastArgs",Ve="Cast",Be="Ceil",Ue="ClipByValue",Ge="Complex",He="ComplexAbs",qe="Concat",je="Conv2D",Xe="Conv2DBackpropFilter",Ke="Conv2DBackpropInput",Ze="Conv3D",Je="Conv3DBackpropFilterV2",Qe="Conv3DBackpropInputV2",Ye="Cos",$e="Cosh",_e="Cumprod",et="Cumsum",tt="CropAndResize",nt="DenseBincount",st="DepthToSpace",rt="DepthwiseConv2dNative",at="DepthwiseConv2dNativeBackpropFilter",it="DepthwiseConv2dNativeBackpropInput",ot="Diag",lt="Dilation2D",ut="Dilation2DBackpropInput",ct="Dilation2DBackpropFilter",ht="RealDiv",dt="Einsum",pt="Elu",ft="EluGrad",mt="Erf",gt="Equal",bt="Exp",xt="ExpandDims",yt="Expm1",vt="FFT",kt="Fill",wt="FlipLeftRight",It="Floor",At="FloorDiv",St="FusedBatchNorm",Nt="GatherV2",Ct="GatherNd",Tt="Greater",Et="GreaterEqual",Rt="Identity",Ft="IFFT",Dt="Imag",Ot="IsFinite",Lt="IsInf",Mt="IsNan",zt="LeakyRelu",Pt="Less",Wt="LessEqual",Vt="LinSpace",Bt="Log",Ut="Log1p",Gt="LogicalAnd",Ht="LogicalNot",qt="LogicalOr",jt="LRN",Xt="LRNGrad",Kt="Max",Zt="Maximum",Jt="MaxPool",Qt="MaxPoolGrad",Yt="MaxPool3D",$t="MaxPool3DGrad",_t="MaxPoolWithArgmax",en="Mean",tn="Min",nn="Minimum",sn="MirrorPad",rn="Mod",an="Multinomial",on="Multiply",ln="Neg",un="NotEqual",cn="NonMaxSuppressionV3",hn="NonMaxSuppressionV4",dn="NonMaxSuppressionV5",pn="OnesLike",fn="OneHot",mn="Pack",gn="PadV2",bn="Pow",xn="Prelu",yn="Prod",vn="Range",kn="Real",wn="Reciprocal",In="Relu",An="Reshape",Sn="ResizeNearestNeighbor",Nn="ResizeNearestNeighborGrad",Cn="ResizeBilinear",Tn="ResizeBilinearGrad",En="Relu6",Rn="Reverse",Fn="Round",Dn="Rsqrt",On="ScatterNd",Ln="Select",Mn="Selu",zn="Slice",Pn="Sin",Wn="Sinh",Vn="Sign",Bn="Sigmoid",Un="Softplus",Gn="Sqrt",Hn="Sum",qn="SpaceToBatchND",jn="SplitV",Xn="Softmax",Kn="SparseFillEmptyRows",Zn="SparseReshape",Jn="SparseSegmentMean",Qn="SparseSegmentSum",Yn="SparseToDense",$n="SquaredDifference",_n="Square",es="StridedSlice",ts="StringNGrams",ns="StringSplit",ss="StringToHashBucketFast",rs="Sub",as="Tan",is="Tanh",os="Tile",ls="TopK",us="Transform",cs="Transpose",hs="Unique",ds="Unpack",ps="UnsortedSegmentSum",fs="ZerosLike",ms="Step",gs="FromPixels",bs="RotateWithOffset",xs="_FusedMatMul",ys="FusedConv2D",vs="FusedDepthwiseConv2D";function ks(...e){de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(...e)}function ws(...e){de().getBool("IS_TEST")||de().getBool("PROD")||console.log(...e)}const Is=ge("kernelRegistry",(()=>new Map)),As=ge("gradRegistry",(()=>new Map));function Ss(e,t){const n=Rs(e,t);return Is.get(n)}function Ns(e){return As.get(e)}function Cs(e){const t=Is.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function Ts(e){const{kernelName:t,backendName:n}=e,s=Rs(t,n);Is.has(s)&&ks(`The kernel '${t}' for backend '${n}' is already registered`),Is.set(s,e)}function Es(e){const{kernelName:t}=e;As.has(t)&&de().getBool("DEBUG")&&ks(`Overriding the gradient for '${t}'`),As.set(t,e)}function Rs(e,t){return`${t}_${e}`}var Fs=n(933);const Ds=n.n(Fs)()||Fs;function Os(e){return Ds.fromString(e,!0,16)}const Ls=Os("c3a5c85c97cb3127"),Ms=Os("b492b66fbe98f273"),zs=Os("9ae16a3b2f90404f");function Ps(e){return e.xor(e.shru(47))}function Ws(e,t,n){const s=e.slice(t,t+n);return Ds.fromBytes(Array.from(s),!0,!0)}function Vs(e,t){return Ws(e,t,8)}function Bs(e,t){return Ws(e,t,4)}function Us(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gs(e,t,n=Os("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Hs(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=Us(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(Us(r,44)),[r.add(s),a.add(i)]}(Vs(e,t),Vs(e,t+8),Vs(e,t+16),Vs(e,t+24),n,s)}function qs(e,t=e.length){const n=Ds.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=zs.add(2*t),s=Vs(e,0).add(zs),r=Vs(e,t-8);return Gs(Us(r,37).mul(n).add(s),Us(s,25).add(r).mul(n),n)}if(t>=4){const n=zs.add(2*t);return Gs(Bs(e,0).shl(3).add(t),Bs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return Ps(zs.mul(n).xor(Ls.mul(s))).mul(zs)}return zs}(e,t):function(e,t=e.length){const n=zs.add(2*t),s=Vs(e,0).mul(Ms),r=Vs(e,8),a=Vs(e,t-8).mul(n),i=Vs(e,t-16).mul(zs);return Gs(Us(s.add(r),43).add(Us(a,30)).add(i),s.add(Us(r.add(zs),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=zs.add(2*t),s=Vs(e,0).mul(zs),r=Vs(e,8),a=Vs(e,t-8).mul(n),i=Vs(e,t-16).mul(zs),o=Us(s.add(r),43).add(Us(a,30)).add(i),l=Gs(o,s.add(Us(r.add(zs),18)).add(a),n),u=Vs(e,16).mul(n),c=Vs(e,24),h=o.add(Vs(e,t-32)).mul(n),d=l.add(Vs(e,t-24)).mul(n);return Gs(Us(u.add(c),43).add(Us(h,30)).add(d),u.add(Us(c.add(s),18)).add(h),n)}(e,t);let s=n,r=n.mul(Ms).add(113),a=Ps(r.mul(zs).add(113)).mul(zs),i=[Ds.UZERO,Ds.UZERO],o=[Ds.UZERO,Ds.UZERO];s=s.mul(zs).add(Vs(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Us(s.add(r).add(i[0]).add(Vs(e,l+8)),37).mul(Ms),r=Us(r.add(i[1]).add(Vs(e,l+48)),42).mul(Ms),s=s.xor(o[1]),r=r.add(i[0]).add(Vs(e,l+40)),a=Us(a.add(o[0]),33).mul(Ms),i=Hs(e,l,i[1].mul(Ms),s.add(o[0])),o=Hs(e,l+32,a.add(o[1]),r.add(Vs(e,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=Ms.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Us(s.add(r).add(i[0]).add(Vs(e,l+8)),37).mul(h),r=Us(r.add(i[1]).add(Vs(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Vs(e,l+40))),a=Us(a.add(o[0]),33).mul(h),i=Hs(e,l,i[1].mul(h),s.add(o[0])),o=Hs(e,l+32,a.add(o[1]),r.add(Vs(e,l+16))),[a,s]=[s,a],Gs(Gs(i[0],o[0],h).add(Ps(r).mul(Ls)).add(a),Gs(i[1],o[1],h).add(s),h)}function js(e,t){return"string"===t?Zs(e):Xs([e],t)}function Xs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=L(e)),de().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ks(){return de().platform.now()}function Zs(e,t="utf-8"){return t=t||"utf-8",de().platform.encode(e,t)}function Js(e,t="utf-8"){return t=t||"utf-8",de().platform.decode(e,t)}class Qs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new $s)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let a;const i=Ks();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();a=Promise.resolve({kernelMs:Ks()-i})}if(de().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{Ys(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Ys(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class $s{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?V(`${s}ms`,9):s.error,o=V(e,25),l=t.rank,u=t.size,c=V(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function _s(e,t,n,s){const r=ee(t),a=function(e,t,n,s){const r=M(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?sr(e):e;if(o>1)for(let e=0;e<r/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],er(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=nr(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function er(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:J(e)?`'${e}'`:"bool"===n?tr(e):parseFloat(e.toFixed(7)).toString(),V(s,t)}function tr(e){return 0===e?"false":"true"}function nr(e,t,n,s,r,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[er(sr(e)[0],0,n)]:"bool"===n?[tr(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(s=sr(s),a=sr(a)),["["+s.map(((e,t)=>er(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>er(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?sr(e):Array.from(e)).map(((e,t)=>er(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const s=t*h,a=s+h;d.push(...nr(e.slice(s,a),u,n,c,r,!1))}d.push("...");for(let t=o-3;t<o;t++){const s=t*h,a=s+h;d.push(...nr(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,a=s+h;d.push(...nr(e.slice(s,a),u,n,c,r,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function sr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class rr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=M(e),null!=n){const e=n.length;F(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||j(t,this.size),this.strides=ee(e)}set(e,...t){0===t.length&&(t=[0]),F(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ar().makeTensor(this.values,this.shape,this.dtype)}}let ar=null,ir=null,or=null;class lr{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=M(e),this.strides=ee(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ir.buffer(this.shape,this.dtype,e)}bufferSync(){return ir.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ne(this.shape,e,"complex64"===this.dtype)}arraySync(){return ne(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=ar().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ar().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ar().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ar().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ar().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ir.print(this,e)}clone(){return this.throwIfDisposed(),ir.clone(this)}toString(e=!1){return _s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ir.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ar().makeVariable(this,e,t,n)}}function ur(){return ge("Tensor",(()=>lr))}Object.defineProperty(lr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ur();class cr extends lr{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!z(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ar().disposeTensor(this),this.dataId=e.dataId,ar().incRef(this,null)}dispose(){ar().disposeVariable(this),this.isDisposedInternal=!0}}var hr,dr,pr,fr,mr;Object.defineProperty(cr,Symbol.hasInstance,{value:e=>e instanceof lr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(hr||(hr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(dr||(dr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(pr||(pr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(fr||(fr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(mr||(mr={}));const gr={float32:fr,int32:dr,bool:pr,complex64:mr};function br(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return gr[e][t]}function xr(e){return br(e,"int32")}function yr(e,t){if(e.dtype===t.dtype)return[e,t];const n=br(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function vr(e,t){return t.some((t=>t.id===e.id))}function kr(e){const t=[];return wr(e,t,new Set),t}function wr(e,t,n){if(null==e)return;if(e instanceof lr)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),wr(s,t,n))}}function Ir(e){return null!=e.kernelName}class Ar{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Sr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ar}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ks(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Qs(this.backendInstance),!0}setupRegisteredKernels(){Cs(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Cs(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof S||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ks(`Initialization of backend ${e} failed`),ks(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return ks(`Initialization of backend ${e} failed`),ks(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Sr.nextTensorId++}nextVariableId(){return Sr.nextVariableId++}clone(e){const t=Cr.runKernel(Rt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Cr.runKernel(Ve,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Ss(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Ir(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ir(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=Ss(t,this.backendName);F(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:s}=e;return this.makeTensorFromDataId(t,n,s)}));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Ir(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=Ns(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(F(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&J(e[0])&&(r=e.map((e=>Zs(e))));const a=s.write(r,t,n),i=new lr(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r=new lr(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new cr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Z(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof cr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Z(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Ns(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=re(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=kr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(F(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));F(r instanceof lr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=se(M(e),"float32");return Cr.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!z(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Tr);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return F($(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;F(t.every((e=>e instanceof lr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),F(n.value instanceof lr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),F($(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];F(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),F(a.every((e=>e instanceof lr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ks(),n=await this.backend.time(e);return n.wallMs=Ks()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ar;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Nr(){const e=me();if(null==e._tfengine){const t=new ce(e);e._tfengine=new Sr(t)}var t;return t=e._tfengine.ENV,fe=t,ar=()=>e._tfengine,e._tfengine}Sr.nextTensorId=0,Sr.nextVariableId=0;const Cr=Nr();function Tr(e,t){const n={a:e,b:t};return Cr.runKernel(ve,n)}function Er(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Rr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Fr=de();function Dr(e,t){let n=e;if(K(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||K(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&de().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Or(e,s,[]),s}function Or(e,t,n){if(n=n||[],!Array.isArray(e)&&!K(e))return void F(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));F(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),F(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)Or(e[t],s,n.concat(t))}function Lr(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function Mr(e,t,n,s="numeric"){if(e instanceof lr)return Lr(s,e.dtype,t,n),e;let r=Y(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Lr(s,r,t,n),null==e||!K(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=Dr(e,r);K(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?Xs(e,r):L(e,[],!0);return Cr.makeTensor(i,a,r)}function zr(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Mr(e,`${t}[${r}]`,n,s)))}function Pr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...e)=>{Cr.startScope(n);try{const t=s(...e);return ue(t)&&console.error("Cannot return a Promise inside of tidy."),Cr.endScope(t),t}catch(e){throw Cr.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}Fr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Fr.registerFlag("IS_BROWSER",(()=>Rr())),Fr.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Fr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Fr.registerFlag("PROD",(()=>!1)),Fr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Fr.getBool("DEBUG"))),Fr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Fr.registerFlag("IS_TEST",(()=>!1)),Fr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Fr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Fr.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Wr=Pr({complex_:function(e,t){const n=Mr(e,"real","complex"),s=Mr(t,"imag","complex");D(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Cr.runKernel(Ge,r)}});function Vr(e,t,n,s){if(null==s&&(s=Y(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!K(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ie(t);const e=M(t),s=M(n);F(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==M(t.slice(e));F(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return K(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?Xs(e,s):L(e,[],!0),Cr.makeTensor(e,t,s)}function Br(e,t,n){return Vr(e,t,Dr(e,n),n)}const Ur={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Gr(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Hr(await Promise.all(s)),specs:n}}function Hr(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const qr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function jr(e){return qr?Buffer.byteLength(e):new Blob([e]).size}function Xr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function Kr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Zr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:jr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:jr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Jr(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class Qr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Qr.instance&&(Qr.instance=new Qr),Qr.instance}static registerSaveRouter(e){Qr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Qr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Qr.getHandlers(e,"save")}static getLoadHandlers(e,t){return Qr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?Qr.getInstance().loadRouters:Qr.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const Yr="tensorflowjs",$r="models_store",_r="model_info_store";function ea(){if(!de().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ta(e){const t=e.result;t.createObjectStore($r,{keyPath:"modelPath"}),t.createObjectStore(_r,{keyPath:"modelPath"})}class na{constructor(e){if(this.indexedDB=ea(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(Yr,1);s.onupgradeneeded=()=>ta(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction($r,"readonly"),s=t.objectStore($r).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=Zr(t),a=r.transaction(_r,"readwrite");let i=a.objectStore(_r);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction($r,"readwrite");const o=l.objectStore($r).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(_r);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}na.URL_SCHEME="indexeddb://";const sa=e=>{return de().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(na.URL_SCHEME)?(t=e.slice(na.URL_SCHEME.length),new na(t)):null;var t};Qr.registerSaveRouter(sa),Qr.registerLoadRouter(sa);class ra{constructor(){this.indexedDB=ea()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Yr,1);n.onupgradeneeded=()=>ta(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(_r,"readonly"),a=r.objectStore(_r).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(na.URL_SCHEME)?t.slice(na.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(Yr,1);s.onupgradeneeded=()=>ta(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(_r,"readwrite"),i=a.objectStore(_r),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction($r,"readwrite");const s=l.objectStore($r).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const aa="/",ia="tensorflowjs_models",oa="info",la="model_topology",ua="weight_specs",ca="weight_data",ha="model_metadata";function da(e){return{info:[ia,e,oa].join(aa),topology:[ia,e,la].join(aa),weightSpecs:[ia,e,ua].join(aa),weightData:[ia,e,ca].join(aa),modelMetadata:[ia,e,ha].join(aa)}}function pa(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function fa(e){const t=e.split(aa);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(aa)}class ma{constructor(e){if(!de().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=da(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Zr(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(qr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw pa(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(qr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ma.URL_SCHEME="localstorage://";const ga=e=>{return de().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ma.URL_SCHEME)?(t=e.slice(ma.URL_SCHEME.length),new ma(t)):null;var t};Qr.registerSaveRouter(ga),Qr.registerLoadRouter(ga);class ba{constructor(){F(de().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),F("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ia+aa,n=aa+oa;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[fa(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=da(e=(t=e).startsWith(ma.URL_SCHEME)?t.slice(ma.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return pa(n),s}}class xa{constructor(){this.managers={}}static getInstance(){return null==xa.instance&&(xa.instance=new xa),xa.instance}static registerManager(e,t){F(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),F(e.length>0,(()=>"scheme must not be an empty string."));const n=xa.getInstance();F(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class ya{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(de().get("IS_BROWSER")){de().setPlatform("browser",new ya);try{xa.registerManager(ma.URL_SCHEME,new ba)}catch(e){}try{xa.registerManager(na.URL_SCHEME,new ra)}catch(e){}}let va;function ka(e,t="float32",n){return t=t||"float32",ie(e),new rr(e,t,n)}de().get("IS_NODE")&&!de().get("IS_BROWSER")&&de().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=de().global.fetch?de().global.fetch(e,t):(null==va&&(va=n(410)),va(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const wa=Pr({cast_:function(e,t){const n=Mr(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return Cr.runKernel(Ve,s,r)}}),Ia=Pr({clone_:function(e){const t={x:Mr(e,"x","clone","string_or_numeric")};return Cr.runKernel(Rt,t)}});function Aa(e){return new Promise((e=>setTimeout(e))).then(e)}Nr(),ir={buffer:ka,cast:wa,clone:Ia,print:function(e,t=!1){console.log(e.toString(t))}};class Sa{constructor(e){if(!de().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Sa.URL_SCHEME)&&(e=e.slice(Sa.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Kr(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Aa((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Aa((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Zr(e)}}}}function Na(e,t,n,s){!function(e){F(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){F(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),F(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),F(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function Ca(e,t){null==t&&(t={});const n=null==t.fetchFunc?de().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Na(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Na(r,t.onProgress,.5,1)}Sa.URL_SCHEME="downloads://",Qr.registerSaveRouter((e=>de().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Sa.URL_SCHEME)?function(e="model"){return new Sa(e)}(e.slice(Sa.URL_SCHEME.length)):null));class Ta{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(F("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=de().platform.fetch,F(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&F(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Kr(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Zr(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Xr(await Ca(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ea(e){return null!=e.match(Ta.URL_SCHEME_REGEX)}Ta.URL_SCHEME_REGEX=/^https?:\/\//;const Ra=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ea(e))):Ea(e),n)return Fa(e,t)}return null};function Fa(e,t){return new Ta(e,t)}function Da(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function Oa(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function La(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}let Ma;Qr.registerSaveRouter(Ra),Qr.registerLoadRouter(Ra);const za=Pr({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(r){const t=2;if(r&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Ss(gs,Cr.backendName)){const n={pixels:e},s={numChannels:t};return Cr.runKernel(gs,n,s)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)c=e.data;else if(a||r||o){if(null==Ma)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ma=new OffscreenCanvas(1,1).getContext("2d")}else Ma=document.createElement("canvas").getContext("2d");Ma.canvas.width=l,Ma.canvas.height=u,Ma.drawImage(e,0,0,l,u),c=Ma.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(O(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Dr(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Vr(e,t,s,n)}(h,[u,l,t],"int32")}});function Pa(e,t,n){const s=e.shape.length;F(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),F(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)F(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Wa(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Va(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Ba(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Ua(e,t,n){return n<=e?n:n-(t-1)}function Ga(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Ha(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=qa(i,l,u,s,e),h=ja(o,l,u,r,e),d=Ba(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Ka(i,s,a,e,t,l),h[t]=Za(o,r,a,e,t,l),d[t]=Xa(a,t,l);return{begin:c,end:h,strides:d}}function qa(e,t,n,s,r){const a=[...r],i=Ga(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=Ua(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function ja(e,t,n,s,r){const a=[...r],i=Ga(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=Ua(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=T(0,a[e],r[e])}return a}function Xa(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function Ka(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=T(0,i,l-1),i}function Za(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?T(0,i,l):T(-1,i,l-1),i}function Ja(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Qa(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Ya(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{F(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(F(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function $a(e,t,n,s,r,a,i,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),s=e[t];if(-1===s){g.push(n?1:-1);continue}const r=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?s:s-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?s+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=s)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=_a(d.begin[t],0,d.strides[t],s,r,a),d.end[t]=_a(d.end[t],1,d.strides[t],s,r,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===s;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&s>=0&&(o=d.strides[t]<0?-s:s,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(g[t]):-2===t&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function _a(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class ei{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ti{constructor(){this.classNameMap={}}static getMap(){return null==ti.instance&&(ti.instance=new ti),ti.instance}static register(e){ti.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ni(e){F(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),F("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),F(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ti.register(e)}function si(){return Cr}function ri(){return Cr.memory()}function ai(e,t){return Cr.tidy(e,t)}function ii(e){kr(e).forEach((e=>e.dispose()))}function oi(e){return Cr.keep(e)}function li(e,t,n=1){return Cr.registerBackend(e,t,n)}function ui(e){return Cr.customGrad(e)}function ci(e,t){if((K(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&K(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Vr(e,[],[],t)}or=function(e){de().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class hi extends ei{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return ii(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){F($(e),(()=>"The f passed in variableGrads(f) must be a function")),F(null==t||Array.isArray(t)&&t.every((e=>e instanceof cr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Cr.registeredVariables)t.push(Cr.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;F((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=Cr.gradients(e,t,null,!0);F(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),F(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ii(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ci(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(hi,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const di=Pr({abs_:function(e){const t=Mr(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Cr.runKernel(He,e)}{const e={x:t};return Cr.runKernel(be,e)}}}),pi=Pr({add_:function(e,t){let n=Mr(e,"a","add"),s=Mr(t,"b","add");[n,s]=yr(n,s);const r={a:n,b:s};return Cr.runKernel(ve,r)}}),fi=Pr({all_:function(e,t=null,n=!1){const s={x:Mr(e,"x","all","bool")},r={axis:t,keepDims:n};return Cr.runKernel(we,s,r)}}),mi=Pr({any_:function(e,t=null,n=!1){const s={x:Mr(e,"x","any","bool")},r={axis:t,keepDims:n};return Cr.runKernel(Ie,s,r)}}),gi=Pr({argMax_:function(e,t=0){const n={x:Mr(e,"x","argMax")},s={axis:t};return Cr.runKernel(Ae,n,s)}});function bi(e,t,n,s,r="NHWC",a){return vi(e,[...t,e[3]],n,a,s,null,null,Ei(r))}function xi(e,t,n,s,r,a,i="channelsLast"){const[o,l]=Ii(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return vi(e,u,n,s,r,a,!1,i)}function yi(e,t,n,s,r,a,i="NDHWC"){const[o,l,u]=Ai(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return ki(e,c,n,s,r,!1,h,a)}function vi(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=Ii(n),[b,x]=Ii(s),y=Si(d,b),v=Si(p,x),{padInfo:k,outHeight:w,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=wi(e,t,n));const a=e[1];return[Ni((e[0]-t+2*s)/n+1,r),Ni((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Ni((t-a+d+p)/s+1,o),h=Ni((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,y,v,a,o),A=i?f*h:f;let S;return"channelsFirst"===o?S=[l,A,w,I]:"channelsLast"===o&&(S=[l,w,I,A]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:w,outWidth:I,outChannels:A,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:S,filterShape:t}}function ki(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[b,x,y]=Ai(n),[v,k,w]=Ai(s),I=Si(p,v),A=Si(f,k),S=Si(m,w),{padInfo:N,outDepth:C,outHeight:T,outWidth:E}=function(e,t,n,s,r,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=wi(e,t,s));const i=e[1],o=e[2];return[Ni((e[0]-t+2*r)/s+1,a),Ni((i-t+2*r)/s+1,a),Ni((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/i);const e=(d-1)*r+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(e/2),b=e-g,x=Math.floor(c/2),y=c-x,v=Math.floor(m/2);h={top:x,bottom:y,left:v,right:m-v,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),p=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,b,x,y,I,A,S,o),R=a?g*d:g;let F;return"channelsFirst"===i?F=[l,R,C,T,E]:"channelsLast"===i&&(F=[l,C,T,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:A,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:k,dilationWidth:w,inShape:e,outShape:F,filterShape:t}}function wi(e,t,n,s=1){const r=Si(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Ii(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ai(e){return"number"==typeof e?[e,e,e]:e}function Si(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ni(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ci(e){const[t,n,s]=Ii(e);return 1===t&&1===n&&1===s}function Ti(e,t){return Ci(e)||Ci(t)}function Ei(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ri(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)F(P(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{F(P(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Fi=Pr({reshape_:function(e,t){const n={x:Mr(e,"x","reshape","string_or_numeric")},s={shape:t};return Cr.runKernel(An,n,s)}}),Di=Pr({avgPool_:function(e,t,n,s,r){const a=Mr(e,"x","avgPool","float32");F(Ti(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Fi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Ri("avgPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=Cr.runKernel(Fe,l,u);return c=wa(c,a.dtype),o?Fi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Oi=Pr({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=Mr(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Fi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),F("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Ri("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=Cr.runKernel(Oe,u,c);return h=wa(h,o.dtype),l?Fi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Li=Pr({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=Mr(e,"x","batchNorm"),o=Mr(t,"mean","batchNorm"),l=Mr(n,"variance","batchNorm");let u,c;null!=r&&(u=Mr(r,"scale","batchNorm")),null!=s&&(c=Mr(s,"offset","batchNorm")),F(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?Fi(e,[1,1,1,e.size]):2===e.rank?Fi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Fi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},f=Cr.runKernel(St,d,p);return Fi(f,i.shape)}}),Mi=Pr({batchNorm2d_:function(e,t,n,s,r,a){const i=Mr(e,"x","batchNorm"),o=Mr(t,"mean","batchNorm"),l=Mr(n,"variance","batchNorm");let u,c;return null!=r&&(u=Mr(r,"scale","batchNorm")),null!=s&&(c=Mr(s,"offset","batchNorm")),F(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),F(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),F(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&F(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&F(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Li(i,o,l,c,u,a)}}),zi=Pr({batchNorm3d_:function(e,t,n,s,r,a){const i=Mr(e,"x","batchNorm"),o=Mr(t,"mean","batchNorm"),l=Mr(n,"variance","batchNorm");let u,c;return null!=r&&(u=Mr(r,"scale","batchNorm")),null!=s&&(c=Mr(s,"offset","batchNorm")),F(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),F(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),F(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&F(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&F(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Li(i,o,l,c,u,a)}}),Pi=Pr({batchNorm4d_:function(e,t,n,s,r,a){const i=Mr(e,"x","batchNorm"),o=Mr(t,"mean","batchNorm"),l=Mr(n,"variance","batchNorm");let u,c;return null!=r&&(u=Mr(r,"scale","batchNorm")),null!=s&&(c=Mr(s,"offset","batchNorm")),F(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),F(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),F(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&F(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&F(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Li(i,o,l,c,u,a)}}),Wi=Pr({clipByValue_:function(e,t,n){const s=Mr(e,"x","clipByValue");F(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const r={x:s},a={clipValueMin:t,clipValueMax:n};return Cr.runKernel(Ue,r,a)}}),Vi=Pr({concat_:function(e,t=0){F(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=zr(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ia(n[0]);const s=n,r={axis:t};return Cr.runKernel(qe,s,r)}}),Bi=Pr({concat1d_:function(e){return Vi(e,0)}}),Ui=Pr({concat2d_:function(e,t){return Vi(e,t)}}),Gi=Pr({concat3d_:function(e,t){return Vi(e,t)}}),Hi=Pr({concat4d_:function(e,t){return Vi(e,t)}}),qi=Pr({conv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Mr(e,"x","conv2d","float32"),l=Mr(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Fi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),F(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Ri("conv2d",s,i);const h="NHWC"===r?u.shape[3]:u.shape[1];F(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),F(Ti(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=Cr.runKernel(je,d,p);return c?Fi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ji=Pr({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const o=Mr(e,"x","conv1d"),l=Mr(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Fi(o,[1,o.shape[0],o.shape[1]])),F(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),F(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Ri("conv1d",s,i),F(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),F(Ti(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),F("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Fi(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Fi(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=qi(d,h,[1,n],s,"NHWC",[1,a],i);return Fi(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Xi=Pr({conv2DBackpropInput_:function(e,t,n,s,r,a="NHWC",i){F(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Fi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),F(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),F(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),F(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];F(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),F(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Ri("conv2dDerInput",r,i);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Cr.runKernel(Ke,d,p);return u?Fi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ki=Pr({conv2dTranspose_:function(e,t,n,s,r,a){const i=Mr(e,"x","conv2dTranspose"),o=Mr(t,"filter","conv2dTranspose");return Xi(n,i,o,s,r,"NHWC",a)}}),Zi=Pr({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=Mr(e,"x","conv3d"),o=Mr(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Fi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),F(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),F(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),F(Ti(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),F("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},d=Cr.runKernel(Ze,c,h);return u?Fi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ji=Pr({conv3DBackpropInput_:function(e,t,n,s,r){F(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Fi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];F(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),F(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),F(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),F(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),F(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},d=Cr.runKernel(Qe,c,h);return o?Fi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Qi=Pr({conv3dTranspose_:function(e,t,n,s,r){const a=Mr(e,"x","conv3dTranspose"),i=Mr(t,"filter","conv3dTranspose");return Ji(n,a,i,s,r)}}),Yi=Pr({depthwiseConv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Mr(e,"x","depthwiseConv2d","float32"),l=Mr(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Fi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),F(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),F(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Ri("depthwiseConv2d",s,i);const h={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},p=Cr.runKernel(rt,h,d);return c?Fi(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),$i=Pr({floorDiv_:function(e,t){let n=Mr(e,"a","floorDiv"),s=Mr(t,"b","floorDiv");[n,s]=yr(n,s);const r={a:n,b:s};return Cr.runKernel(At,r)}}),_i=Pr({div_:function(e,t){let n=Mr(e,"a","div"),s=Mr(t,"b","div");if([n,s]=yr(n,s),"int32"===n.dtype&&"int32"===s.dtype)return $i(n,s);const r={a:n,b:s};return Cr.runKernel(ht,r,{})}}),eo=Pr({elu_:function(e){const t={x:Mr(e,"x","elu","float32")};return Cr.runKernel(pt,t)}}),to=Pr({equal_:function(e,t){let n=Mr(e,"a","equal","string_or_numeric"),s=Mr(t,"b","equal","string_or_numeric");[n,s]=yr(n,s),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(gt,r)}}),no=Pr({exp_:function(e){const t={x:Mr(e,"x","exp")};return Cr.runKernel(bt,t)}}),so=Pr({expandDims_:function(e,t=0){const n=Mr(e,"x","expandDims","string_or_numeric");F(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return Cr.runKernel(xt,s,r)}}),ro=Pr({tile_:function(e,t){const n=Mr(e,"x","tile","string_or_numeric");F(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return Cr.runKernel(os,s,r)}}),ao=Pr({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=ka([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=Fi(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return ro(so(i,0),[n[0],1,1]);if(2===n.length)return ro(so(so(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ro(so(so(so(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function io(e,t,n){const s={shape:e,value:t,dtype:n};return Cr.runKernel(kt,{},s)}const oo=Pr({floor_:function(e){const t={x:Mr(e,"x","floor","float32")};return Cr.runKernel(It,t)}}),lo=Pr({gather_:function(e,t,n=0,s=0){const r={x:Mr(e,"x","gather"),indices:Mr(t,"indices","gather","int32")},a={axis:n,batchDims:s};return Cr.runKernel(Nt,r,a)}}),uo=Pr({greater_:function(e,t){let n=Mr(e,"a","greater","string_or_numeric"),s=Mr(t,"b","greater","string_or_numeric");[n,s]=yr(n,s),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(Tt,r)}}),co=Pr({greaterEqual_:function(e,t){let n=Mr(e,"a","greaterEqual","string_or_numeric"),s=Mr(t,"b","greaterEqual","string_or_numeric");[n,s]=yr(n,s),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(Et,r)}}),ho=Pr({leakyRelu_:function(e,t=.2){const n={x:Mr(e,"x","leakyRelu")},s={alpha:t};return Cr.runKernel(zt,n,s)}}),po=Pr({log_:function(e){const t={x:Mr(e,"x","log","float32")};return Cr.runKernel(Bt,t)}}),fo=Pr({log1p_:function(e){const t={x:Mr(e,"x","log1p")};return Cr.runKernel(Ut,t)}}),mo=Pr({max_:function(e,t=null,n=!1){const s={x:Mr(e,"x","max")},r={reductionIndices:t,keepDims:n};return Cr.runKernel(Kt,s,r)}}),go=Pr({mul_:function(e,t){let n=Mr(e,"a","mul"),s=Mr(t,"b","mul");[n,s]=yr(n,s);const r={a:n,b:s};return Cr.runKernel(on,r)}}),bo=Pr({sub_:function(e,t){let n=Mr(e,"a","sub"),s=Mr(t,"b","sub");[n,s]=yr(n,s);const r={a:n,b:s};return Cr.runKernel(rs,r)}}),xo=Pr({sum_:function(e,t=null,n=!1){let s=Mr(e,"x","sum");"bool"===s.dtype&&(s=wa(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return Cr.runKernel(Hn,r,a)}}),yo=Pr({logSoftmax_:function(e,t=-1){const n=Mr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=ui(((e,n)=>{const s=mo(e,t,!0),r=bo(e,s),a=bo(wa(r,"float32"),po(xo(no(r),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[s]=n,r=no(s);return bo(e,go(xo(e,t,!0),r))}}}));return s(n)}}),vo=Pr({logicalAnd_:function(e,t){const n=Mr(e,"a","logicalAnd","bool"),s=Mr(t,"b","logicalAnd","bool");La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(Gt,r)}}),ko=Pr({matMul_:function(e,t,n=!1,s=!1){let r=Mr(e,"a","matMul"),a=Mr(t,"b","matMul");[r,a]=yr(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return Cr.runKernel(Me,i,o)}}),wo=Pr({maxPool_:function(e,t,n,s,r){const a=Mr(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Fi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),F(Ti(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Ri("maxPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=Cr.runKernel(Jt,l,u);return o?Fi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Io=Pr({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=Mr(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Fi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),F("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Ri("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=Cr.runKernel(Yt,u,c);return l?Fi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ao=Pr({maximum_:function(e,t){let n=Mr(e,"a","maximum"),s=Mr(t,"b","maximum");[n,s]=yr(n,s),"bool"===n.dtype&&(n=wa(n,"int32"),s=wa(s,"int32")),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(Zt,r)}}),So=Pr({mean_:function(e,t=null,n=!1){const s={x:Mr(e,"x","mean")},r={axis:t,keepDims:n};return Cr.runKernel(en,s,r)}}),No=Pr({minimum_:function(e,t){let n=Mr(e,"a","minimum"),s=Mr(t,"b","minimum");[n,s]=yr(n,s),"bool"===n.dtype&&(n=wa(n,"int32"),s=wa(s,"int32")),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(nn,r)}});function Co(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function To(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function Eo(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Ro(e,t){return To(e,t.map((e=>1)),t)}function Fo(e,t,n){F(Co(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Do(e,t){if(Co(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function Oo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Lo(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const Mo=Pr({square_:function(e){const t=Mr(e,"x","square");return Cr.runKernel("Square",{x:t},{})}}),zo=Pr({moments_:function(e,t=null,n=!1){const s=G(t,(e=Mr(e,"x","moments")).shape),r=So(e,s,n);let a=r.shape;n||(a=Ro(r.shape,s));const i=Mo(bo(wa(e,"float32"),Fi(r,a)));return{mean:r,variance:So(i,s,n)}}}),Po=Pr({neg_:function(e){const t={x:Mr(e,"x","neg")};return Cr.runKernel(ln,t)}}),Wo=Pr({notEqual_:function(e,t){let n=Mr(e,"a","notEqual","string_or_numeric"),s=Mr(t,"b","notEqual","string_or_numeric");[n,s]=yr(n,s),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(un,r)}}),Vo=Pr({oneHot_:function(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:Mr(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:s};return Cr.runKernel(fn,r,a)}});function Bo(e,t="float32"){if("complex64"===t){const t=Bo(e,"float32"),n=Bo(e,"float32");return Wr(t,n)}const n=re(M(e),t);return Cr.makeTensor(n,e,t)}function Uo(e,t="float32"){if("complex64"===t){const t=Uo(e,"float32"),n=Bo(e,"float32");return Wr(t,n)}const n=se(M(e),t);return Cr.makeTensor(n,e,t)}const Go=Pr({onesLike_:function(e){const t={x:Mr(e,"x","onesLike")};return Cr.runKernel(pn,t)}}),Ho=Pr({pad_:function(e,t,n=0){const s=Mr(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return Cr.runKernel(gn,a,r)}}),qo=Pr({prelu_:function(e,t){const n={x:Mr(e,"x","prelu"),alpha:Mr(t,"alpha","prelu")};return Cr.runKernel(xn,n)}});var jo=n(600);class Xo{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=jo.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ko{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=jo.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Zo=Pr({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Xo(t,n,s,!1,r),i=ka(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Jo=Pr({randomUniform_:function(e,t=0,n=1,s="float32",r){const a=ka(e,s),i=new Ko(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Qo=Pr({relu_:function(e){const t={x:Mr(e,"x","relu")};return Cr.runKernel(In,t)}}),Yo=Pr({reverse_:function(e,t){const n={x:Mr(e,"x","reverse")},s={dims:t};return Cr.runKernel(Rn,n,s)}}),$o=Pr({selu_:function(e){const t={x:Mr(e,"x","selu")};return Cr.runKernel(Mn,t)}}),_o=Pr({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const o=Mr(e,"x","separableConv2d"),l=Mr(t,"depthwiseFilter","separableConv2d"),u=Mr(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Fi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),F(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),F(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),F(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),F(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];F(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Yi(c,l,s,r,i,a),m=qi(f,u,1,"valid",i);return h?Fi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),el=Pr({sigmoid_:function(e){const t={x:Mr(e,"x","sigmoid","float32")};return Cr.runKernel(Bn,t)}}),tl=Pr({slice_:function(e,t,n){const s=Mr(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return Cr.runKernel(zn,r,a)}}),nl=Pr({slice1d_:function(e,t,n){const s=Mr(e,"x","slice1d");return F(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),tl(s,[t],[n])}}),sl=Pr({slice2d_:function(e,t,n){const s=Mr(e,"x","slice2d");return F(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),tl(s,t,n)}}),rl=Pr({slice3d_:function(e,t,n){const s=Mr(e,"x","slice3d");return F(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),tl(s,t,n)}}),al=Pr({slice4d_:function(e,t,n){const s=Mr(e,"x","slice4d");return F(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),tl(s,t,n)}}),il=Pr({softmax_:function(e,t=-1){const n=Mr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return Cr.runKernel(Xn,s,r)}}),ol=Pr({softplus_:function(e){const t={x:Mr(e,"x","softplus")};return Cr.runKernel(Un,t)}}),ll=Pr({split_:function(e,t,n=0){const s={x:Mr(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Cr.runKernel(jn,s,r)}}),ul=Pr({sqrt_:function(e){const t={x:Mr(e,"x","sqrt","float32")};return Cr.runKernel(Gn,t)}}),cl=Pr({squeeze_:function(e,t){const n=Mr(e,"x","squeeze");return Fi(n,H(n.shape,t).newShape)}}),hl=Pr({stack_:function(e,t=0){const n=zr(e,"tensors","stack","string_or_numeric");F(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&F(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return Cr.runKernel(mn,s,r)}}),dl=Pr({tanh_:function(e){const t={x:Mr(e,"x","tanh","float32")};return Cr.runKernel(is,t)}});function pl(e,t){O(e);const n=Dr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Vr(e,null,n,t)}const fl=Pr({truncatedNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Xo(t,n,s,!0,r),i=ka(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),ml=Pr({unstack_:function(e,t=0){const n=Mr(e,"x","unstack","string_or_numeric");F(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return Cr.runKernel(ds,s,r)}}),gl=Pr({broadcastTo_:function(e,t){let n=Mr(e,"broadcastTo","x");const s=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Fi(n,e)}const r=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ia(n);const i={x:n},o={reps:a};return Cr.runKernel(os,i,o)}}),bl=Pr({where_:function(e,t,n){const s=Mr(t,"a","where"),r=Mr(n,"b","where"),a=Mr(e,"condition","where","bool"),i=La(La(a.shape,s.shape),r.shape),o={condition:gl(a,i),t:gl(s,i),e:gl(r,i)};return Cr.runKernel(Ln,o)}}),xl=Pr({zerosLike_:function(e){const t={x:Mr(e,"x","zerosLike")};return Cr.runKernel(fs,t)}}),yl=Pr({transpose_:function(e,t){const n=Mr(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),F(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{F(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:t};return Cr.runKernel(cs,s,r)}}),vl=Pr({dropout_:function(e,t,n,s){const r=Mr(e,"x","dropout");if(F("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),F(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof lr?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(z(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=_i(oo(pi(Jo(a,0,1,"float32",s),i)),i);return go(r,o)}}),kl=Pr({imag_:function(e){const t={input:Mr(e,"input","imag")};return Cr.runKernel(Dt,t)}}),wl=Pr({real_:function(e){const t={input:Mr(e,"input","real")};return Cr.runKernel(kn,t)}}),Il=Pr({fft_:function(e){F("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Cr.runKernel(vt,t)}}),Al=Pr({rfft_:function(e,t){F("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=tl(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=Vi([e,Bo(s)],e.shape.length-1),n=t}else r=e;const a=xl(r),i=Fi(Wr(r,a),[s,n]),o=Il(i),l=Math.floor(n/2)+1,u=wl(o),c=kl(o),h=ll(u,[l,n-l],u.shape.length-1),d=ll(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,Fi(Wr(h[0],d[0]),p)}}),Sl=Pr({ifft_:function(e){F("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Cr.runKernel(Ft,t)}}),Nl=Pr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=Fi(e,[n,t]);s=Sl(r)}else{const r=[n,2*(t-1)],a=Fi(wl(e),[n,t]),i=Fi(kl(e),[n,t]),o=Yo(tl(a,[0,1],[n,t-2]),1),l=go(Yo(tl(i,[0,1],[n,t-2]),1),ci(-1)),u=Vi([a,o],1),c=Vi([i,l],1),h=Fi(Wr(u,c),[r[0],r[1]]);s=Sl(h)}if(s=wl(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=Fi(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}}),Cl=Pr({conv2DBackpropFilter_:function(e,t,n,s,r,a="NHWC",i){let o=e;3===e.rank&&(o=Fi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Fi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),F(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),F(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];F(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),F(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Ri("conv2dDerFilter",r,i);const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return Cr.runKernel(Xe,h,d)}}),Tl=Pr({relu6_:function(e){const t={x:Mr(e,"x","relu6")};return Cr.runKernel(En,t)}}),El=Pr({step_:function(e,t=0){const n={x:Mr(e,"x","step")},s={alpha:t};return Cr.runKernel(ms,n,s)}});function Rl(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return go(e,El(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Fl(e,t){let n=t;const s=Oa(e.shape,t.shape);return s.length>0&&(n=xo(n,s)),Fi(n,e.shape)}function Dl(e,t,n,s){if("linear"===t)return e;if("relu"===t)return Qo(e);if("elu"===t)return eo(e);if("relu6"===t)return Tl(e);if("prelu"===t)return qo(e,n);if("leakyrelu"===t)return ho(e,s);if("sigmoid"===t)return el(e);throw new Error(`Unknown fused activation ${t}.`)}const Ol=(e,t)=>!(e>0)||"linear"===t,Ll=Pr({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Ol(Cr.state.gradientDepth,l)){let h=qi(e,t,n,s,r,a,i);return null!=o&&(h=pi(h,o)),Dl(h,l,u,c)}const h=Mr(e,"x","conv2d","float32"),d=Mr(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Fi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),F(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Ri("fused conv2d",s,i),F(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),F(Ti(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),F("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=vi(p.shape,d.shape,n,a,s,i);let g,b;null!=o&&(g=Mr(o,"bias","fused conv2d"),[g]=yr(g,h),La(m.outShape,g.shape)),null!=u&&(b=Mr(u,"prelu weights","fused conv2d"));const x=(e,t)=>{const[r,i,o,u]=t,c=Rl(e,o,l);F(Ci(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Xi(i.shape,c,r,n,s),Cl(i,c,r.shape,n,s)];if(null!=u){const e=Fl(u,c);h.push(e)}return h},y={x:p,filter:d,bias:g,preluActivationWeights:b},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=ui(((e,t,n)=>{let s=Cr.runKernel(ys,y,v);return n([t,e,s]),f&&(s=Fi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,d)}{const e=ui(((e,t,n,s)=>{let r=Cr.runKernel(ys,y,v);return s([t,e,r,n]),f&&(r=Fi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,d,g)}}}),Ml=Pr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,a=[1,1],i){let o=e;3===e.rank&&(o=Fi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Fi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return Cr.runKernel(at,u,c)}}),zl=Pr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Fi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=Cr.runKernel(it,u,c);return l?Fi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Pr({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Ol(Cr.state.gradientDepth,l)){let h=Yi(e,t,n,s,r,a,i);return null!=o&&(h=pi(h,o)),Dl(h,l,u,c)}const h=Mr(e,"x","depthwiseConv2d","float32"),d=Mr(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Fi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),F(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),F(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),F(Ti(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Ri("fused depthwiseConv2d",s,i);const m=vi(p.shape,d.shape,n,a,s,i,!0);let g,b;null!=o&&(g=Mr(o,"bias","fused conv2d"),[g]=yr(g,h),La(m.outShape,g.shape)),null!=u&&(b=Mr(u,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{F(Ci(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,c]=t,h=Rl(e,u,l),d=zl(o.shape,h,r,n,s,a,i),p=Ml(o,h,r.shape,n,s,a,i);return null!=c?[d,p,Fl(g,h)]:[d,p]},y={x:p,filter:d,bias:g,preluActivationWeights:b},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=ui(((e,t,n)=>{let s=Cr.runKernel(vs,y,v);return n([t,e,s]),f&&(s=Fi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,d)}{const e=ui(((e,t,n,s)=>{let r=Cr.runKernel(vs,y,v);return s([t,e,r,n]),f&&(r=Fi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,d,g)}}});const Pl=Pr({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Ol(Cr.state.gradientDepth,a)){let l=ko(e,t,n,s);return null!=r&&(l=pi(l,r)),Dl(l,a,i,o)}let l=Mr(e,"a","fused matMul"),u=Mr(t,"b","fused matMul");[l,u]=yr(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=M(f),b=M(m);F(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const x=La(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),y=Fi(l,n?[g,c,d]:[g,d,c]),v=Fi(u,s?[b,p,h]:[b,h,p]);let k,w;null!=r&&(k=Mr(r,"bias","fused matMul"),[k]=yr(k,l),La(x,k.shape)),null!=i&&(w=Mr(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=Rl(Fi(e,l.shape),l,a);let h,d;return n||s?!n&&s?(h=ko(c,o,!1,!1),d=ko(c,i,!0,!1)):n&&!s?(h=ko(o,c,!1,!0),d=ko(i,c,!1,!1)):(h=ko(o,c,!0,!0),d=ko(c,i,!0,!0)):(h=ko(c,o,!1,!0),d=ko(i,c,!0,!1)),null!=r?[h,d,Fl(u,c)]:[h,d]},A={a:y,b:v,bias:k,preluActivationWeights:w},S={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};if(null==r){const e=ui(((e,t,n)=>{const s=Cr.runKernel(xs,A,S);return n([e,t,s]),{value:Fi(s,x),gradFunc:I}}));return e(y,v)}{const e=ui(((e,t,n,s)=>{const r=Cr.runKernel(xs,A,S);return s([e,t,r,n]),{value:Fi(r,x),gradFunc:I}}));return e(y,v,k)}}});function Wl(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return pl(r,"float32")}Pr({hammingWindow_:function(e){return Wl(e,.54,.46)}});const Vl=Pr({hannWindow_:function(e){return Wl(e,.5,.5)}});function Bl(e,t,n){if(O(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Dr(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Vr(e,t,s,n)}const Ul=Pr({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(tl(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=Vi([tl(e,a,t-s),io([s],r)]);i.push(o),a+=n}return 0===i.length?Bl([],[0,t]):Fi(Vi(i),[i.length,t])}});Pr({stft_:function(e,t,n,s,r=Vl){var a;null==s&&(a=t,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Ul(e,t,n),o=go(i,r(t));return Al(o,s)}});const Gl=Pr({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=Mr(e,"image","cropAndResize"),o=Mr(t,"boxes","cropAndResize","float32"),l=Mr(n,"boxInd","cropAndResize","int32"),u=o.shape[0];F(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),F(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),F(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),F(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),F(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),F("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return Cr.runKernel(tt,c,h)}}),Hl=Pr({flipLeftRight_:function(e){const t=Mr(e,"image","flipLeftRight","float32");F(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Cr.runKernel(wt,n,{})}}),ql=Pr({grayscaleToRGB_:function(e){const t=Mr(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];F(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),F(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,ro(t,r)}}),jl=Pr({rotateWithOffset_:function(e,t,n=0,s=.5){const r=Mr(e,"image","rotateWithOffset","float32");F(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return Cr.runKernel(bs,a,i)}});function Xl(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),F(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),F(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),F(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),F(1===t.rank,(()=>"scores must be a 1D tensor")),F(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),F(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const Kl=Pr({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Mr(e,"boxes","nonMaxSuppression","float32"),i=Mr(t,"scores","nonMaxSuppression","float32"),o=Xl(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Cr.runKernel(cn,{boxes:a,scores:i},l)}});function Zl(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||Jl)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Jl(e,t){return e>t?1:e<t?-1:0}function Ql(e,t,n,s,r){return _l(e,t,n,s,r,0)}function Yl(e,t,n,s,r,a){return _l(e,t,n,s,r,0,!1,a,!0)}function $l(e,t,n,s,r,a){return _l(e,t,n,s,r,a,!0)}function _l(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(nu);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=eu(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*tu(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>r&&Zl(u,t,nu))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function eu(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),b=Math.min(o,h),x=Math.min(l,d),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function tu(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function nu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const su=Pr({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Mr(e,"boxes","nonMaxSuppression"),o=Mr(t,"scores","nonMaxSuppression"),l=Xl(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Cr.runKernel(dn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),ru=Pr({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Mr(e,"boxes","nonMaxSuppression"),o=Mr(t,"scores","nonMaxSuppression"),l=Xl(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Cr.runKernel(hn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),au=Pr({resizeBilinear_:function(e,t,n=!1,s=!1){const r=Mr(e,"images","resizeBilinear");F(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),F(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),F(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Fi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=Cr.runKernel(Cn,o,l);return i?Fi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),iu=Pr({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=Mr(e,"images","resizeNearestNeighbor");F(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),F(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),F("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),F(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Fi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=Cr.runKernel(Sn,o,l);return i?Fi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),ou=Pr({bincount_:function(e,t,n){const s=Mr(e,"x","bincount"),r=Mr(t,"weights","bincount");F("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),F(n>=0,(()=>`size must be non-negative, but got ${n}.`)),F(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return Cr.runKernel(Pe,a,i)}}),lu=Pr({lessEqual_:function(e,t){let n=Mr(e,"a","lessEqual","string_or_numeric"),s=Mr(t,"b","lessEqual","string_or_numeric");[n,s]=yr(n,s),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(Wt,r)}}),uu=Pr({round_:function(e){const t={x:Mr(e,"x","round")};return Cr.runKernel(Fn,t)}});function cu(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return Cr.runKernel(vn,{},r)}const hu=Pr({threshold_:function(e,t="binary",n=!1,s=.5){const r=Mr(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,o,l,u,c=go(pl([s]),255);if(F(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),F(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),F("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),F("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=ll(r,[1,1,1],-1);const e=go(i,.2989),t=go(o,.587),n=go(l,.114);u=pi(pi(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,s,r,a,i,o,l=pl([-1]),u=pl([0]),c=pl([0]);for(let h=0;h<e.size-1;h++){n=tl(e,0,h+1),s=tl(e,h+1),i=_i(xo(n),t),o=_i(xo(s),t);const d=xo(go(n,cu(0,n.size)));r=_i(d,xo(n));const p=io(s.shape,n.size),f=pi(cu(0,s.size),p),m=go(s,f);a=_i(xo(m),xo(s));const g=bo(r,a),b=bo(r,a),x=go(i,o);c=go(go(x,g),b);const y=uo(c,u);u=bl(y,c,u),l=bl(y,pl([h]),l)}return l}(ou(wa(uu(u),"int32"),Br([]),256),a));const h=n?lu(u,c):uo(u,c);return wa(go(h,255),"int32")}}),du=Pr({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=Mr(e,"image","transform","float32"),o=Mr(t,"transforms","transform","float32");F(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),F(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),F(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return Cr.runKernel(us,l,u)}}),pu=Pr({bandPart_:function(e,t,n){F(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),F(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Mr(e,"a","bandPart");F(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Fi(cu(0,a,1,"int32"),[-1,1]),l=cu(0,i,1,"int32"),u=bo(o,l),c=vo(lu(u,ci(+t,"int32")),co(u,ci(-n,"int32"))),h=Bo([a,i],s.dtype);return Fi(hl(ml(Fi(s,[-1,a,i])).map((e=>bl(c,e,h)))),r)}}),fu=Pr({min_:function(e,t=null,n=!1){const s={x:Mr(e,"x","min")},r={axis:t,keepDims:n};return Cr.runKernel(tn,s,r)}}),mu=Pr({pow_:function(e,t){let n=Mr(e,"base","pow"),s=Mr(t,"exp","pow");[n,s]=yr(n,s);const r={a:n,b:s};return Cr.runKernel(bn,r)}});function gu(e,t,n=null){if(0===e.rank)return di(e);if(1!==e.rank&&null===n)return gu(Fi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return xo(di(e),n);if(t===1/0)return mo(di(e),n);if(t===-1/0)return fu(di(e),n);if("euclidean"===t||2===t)return ul(xo(mu(di(e),ci(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return mo(xo(di(e),n[0]),n[1]-1);if(t===1/0)return mo(xo(di(e),n[1]),n[0]);if(t===-1/0)return fu(xo(di(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ul(xo(Mo(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const bu=Pr({norm_:function(e,t="euclidean",n=null,s=!1){const r=gu(e=Mr(e,"x","norm"),t,n);let a=r.shape;if(s){const t=G(n,e.shape);a=Ro(r.shape,t)}return Fi(r,a)}}),xu=Pr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,F(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)F(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=ll(e,e.shape[0],0).map((e=>cl(e,[0])));F(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(Cr.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=go(xo(go(n[s],e)),n[s]);e=bo(e,t)}return _i(e,bu(e,"euclidean"))})));return t?hl(n,0):n}});function yu(e,t=!1){return Cr.tidy((()=>{F(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=ao(n),a=Ia(e);const i=Bl([[1]],[1,1]);let o=Ia(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=Cr.tidy((()=>{const t=tl(a,[e,e],[n-e,1]),l=bu(t),u=tl(a,[e,e],[1,1]),c=bl(uo(u,0),Bl([[-1]]),Bl([[1]])),h=bo(u,go(c,l)),d=_i(t,h);o=1===d.shape[0]?Ia(i):Vi([i,tl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Po(_i(ko(c,h),l)),f=tl(a,[e,0],[n-e,s]),m=go(p,o),g=yl(o);if(0===e)a=bo(f,ko(m,ko(g,f)));else{const t=bo(f,ko(m,ko(g,f)));a=Vi([tl(a,[0,0],[e,s]),t],0)}const b=yl(m),x=tl(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=bo(x,ko(ko(x,o),b));else{const t=bo(x,ko(ko(x,o),b));r=Vi([tl(r,[0,0],[n,e]),t],1)}return[o,a,r]})),ii([t,l,u])}return!t&&n>s&&(r=tl(r,[0,0],[n,s]),a=tl(a,[0,0],[s,s])),[r,a]}))}const vu=Pr({qr_:function(e,t=!1){if(F(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return yu(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=ml(Fi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=yu(e,t);r.push(n),a.push(s)})),[Fi(hl(r,0),e.shape),Fi(hl(a,0),e.shape)]}}});var ku;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ku||(ku={}));const wu=Pr({computeWeightedLoss_:function(e,t,n=ku.SUM_BY_NONZERO_WEIGHTS){const s=Mr(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=Mr(t,"weights","computeWeightedLoss"));const a=null==r?s:go(s,r);if(n===ku.NONE)return a;if(n===ku.SUM)return xo(a);if(n===ku.MEAN){if(null==r)return So(a);{const e=s.size/r.size,t=_i(xo(a),xo(r));return e>1?_i(t,ci(e)):t}}if(n===ku.SUM_BY_NONZERO_WEIGHTS){if(null==r)return _i(xo(a),ci(s.size));{const e=go(r,Uo(s.shape)),t=wa(xo(Wo(e,ci(0))),"float32");return _i(xo(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Pr({absoluteDifference_:function(e,t,n,s=ku.SUM_BY_NONZERO_WEIGHTS){const r=Mr(e,"labels","absoluteDifference"),a=Mr(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Mr(n,"weights","absoluteDifference")),D(r.shape,a.shape,"Error in absoluteDifference: ");const o=di(bo(r,a));return wu(o,i,s)}}),Pr({cosineDistance_:function(e,t,n,s,r=ku.SUM_BY_NONZERO_WEIGHTS){const a=Mr(e,"labels","cosineDistance"),i=Mr(t,"predictions","cosineDistance");let o=null;null!=s&&(o=Mr(s,"weights","cosineDistance")),D(a.shape,i.shape,"Error in cosineDistance: ");const l=ci(1),u=bo(l,xo(go(a,i),n,!0));return wu(u,o,r)}}),Pr({hingeLoss_:function(e,t,n,s=ku.SUM_BY_NONZERO_WEIGHTS){let r=Mr(e,"labels","hingeLoss");const a=Mr(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Mr(n,"weights","hingeLoss")),D(r.shape,a.shape,"Error in hingeLoss: ");const o=ci(1);r=bo(go(ci(2),r),o);const l=Qo(bo(o,go(r,a)));return wu(l,i,s)}}),Pr({huberLoss_:function(e,t,n,s=1,r=ku.SUM_BY_NONZERO_WEIGHTS){const a=Mr(e,"labels","huberLoss"),i=Mr(t,"predictions","huberLoss");let o=null;null!=n&&(o=Mr(n,"weights","huberLoss")),D(a.shape,i.shape,"Error in huberLoss: ");const l=ci(s),u=di(bo(i,a)),c=No(u,l),h=bo(u,c),d=pi(go(ci(.5),Mo(c)),go(l,h));return wu(d,o,r)}}),Pr({logLoss_:function(e,t,n,s=1e-7,r=ku.SUM_BY_NONZERO_WEIGHTS){const a=Mr(e,"labels","logLoss"),i=Mr(t,"predictions","logLoss");let o=null;null!=n&&(o=Mr(n,"weights","logLoss")),D(a.shape,i.shape,"Error in logLoss: ");const l=ci(1),u=ci(s),c=Po(go(a,po(pi(i,u)))),h=go(bo(l,a),po(pi(bo(l,i),u))),d=bo(c,h);return wu(d,o,r)}});const Iu=Pr({squaredDifference_:function(e,t){let n=Mr(e,"a","squaredDifference"),s=Mr(t,"b","squaredDifference");[n,s]=yr(n,s),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel($n,r,{})}});Pr({meanSquaredError_:function(e,t,n,s=ku.SUM_BY_NONZERO_WEIGHTS){const r=Mr(e,"labels","meanSquaredError"),a=Mr(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Mr(n,"weights","meanSquaredError")),D(r.shape,a.shape,"Error in meanSquaredError: ");const o=Iu(r,a);return wu(o,i,s)}}),Pr({sigmoidCrossEntropy_:function(e,t,n,s=0,r=ku.SUM_BY_NONZERO_WEIGHTS){let a=Mr(e,"multiClassLabels","sigmoidCrossEntropy");const i=Mr(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Mr(n,"weights","sigmoidCrossEntropy")),D(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=ci(s),t=ci(1),n=ci(.5);a=pi(go(a,bo(t,e)),go(n,e))}const l=function(e,t){const n=Mr(e,"labels","sigmoidCrossEntropyWithLogits"),s=Mr(t,"logits","sigmoidCrossEntropyWithLogits");D(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Qo(s),a=go(s,n),i=fo(no(Po(di(s))));return pi(bo(r,a),i)}(a,i);return wu(l,o,r)}});const Au=Pr({logSumExp_:function(e,t=null,n=!1){const s=Mr(e,"x","logSumExp"),r=G(t,s.shape),a=mo(s,r,!0),i=bo(s,a),o=no(i),l=xo(o,r),u=po(l),c=pi(Fi(a,u.shape),u);if(n){const e=Ro(c.shape,r);return Fi(c,e)}return c}});Pr({softmaxCrossEntropy_:function(e,t,n,s=0,r=ku.SUM_BY_NONZERO_WEIGHTS){let a=Mr(e,"onehotLabels","softmaxCrossEntropy");const i=Mr(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Mr(n,"weights","softmaxCrossEntropy")),D(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=ci(s),t=ci(1),n=ci(a.shape[1]);a=pi(go(a,bo(t,e)),_i(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=ui(((e,t,s)=>{const r=Au(t,[n],!0),a=bo(wa(t,"float32"),r);s([e,a]);const i=Po(go(a,e));return{value:xo(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=Ro(e.shape,[n]);return[go(Fi(e,a),bo(wa(s,"float32"),no(r))),go(Fi(e,a),bo(no(r),wa(s,"float32")))]}}}));return s(e,t)}(a,i);return wu(l,o,r)}}),Pr({sparseFillEmptyRows_:function(e,t,n,s){const r=Mr(e,"indices","sparseFillEmptyRows","int32"),a=Mr(t,"values","sparseFillEmptyRows"),i=Mr(n,"denseShape","sparseFillEmptyRows","int32"),o=Mr(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:a,denseShape:i,defaultValue:o},u=Cr.runKernel(Kn,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Pr({sparseReshape_:function(e,t,n){const s=Mr(e,"inputIndices","sparseReshape","int32"),r=Mr(t,"inputShape","sparseReshape","int32"),a=Mr(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=Cr.runKernel(Zn,i);return{outputIndices:o[0],outputShape:o[1]}}}),Pr({sparseSegmentMean_:function(e,t,n){const s=Mr(e,"data","sparseSegmentMean"),r=Mr(t,"indices","sparseSegmentMean","int32"),a=Mr(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return Cr.runKernel(Jn,i)}}),Pr({sparseSegmentSum_:function(e,t,n){const s=Mr(e,"data","sparseSegmentSum"),r=Mr(t,"indices","sparseSegmentSum","int32"),a=Mr(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return Cr.runKernel(Qn,i)}}),Pr({stringNGrams_:function(e,t,n,s,r,a,i,o){const l=Mr(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Mr(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=Cr.runKernel(ts,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Pr({stringSplit_:function(e,t,n=!0){const s=Mr(e,"input","stringSplit","string"),r=Mr(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=Cr.runKernel(ns,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Pr({stringToHashBucketFast_:function(e,t){const n=Mr(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Cr.runKernel(ss,r,s)}});const Su={flipLeftRight:Hl,grayscaleToRGB:ql,resizeNearestNeighbor:iu,resizeBilinear:au,rotateWithOffset:jl,cropAndResize:Gl,nonMaxSuppression:Kl,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Mr(e,"boxes","nonMaxSuppressionAsync"),i=Mr(t,"scores","nonMaxSuppressionAsync"),o=Xl(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Ql(u,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),pl(h,"int32")},nonMaxSuppressionWithScore:su,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Mr(e,"boxes","nonMaxSuppressionAsync"),o=Mr(t,"scores","nonMaxSuppressionAsync"),l=Xl(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=$l(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:pl(d,"int32"),selectedScores:pl(p)}},nonMaxSuppressionPadded:ru,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Mr(e,"boxes","nonMaxSuppressionAsync"),o=Mr(t,"scores","nonMaxSuppressionAsync"),l=Xl(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Yl(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:pl(f,"int32"),validOutputs:ci(m,"int32")}},threshold:hu,transform:du},Nu={bandPart:pu,gramSchmidt:xu,qr:vu};class Cu extends hi{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Cr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Cr.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ai((()=>xl(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ai((()=>xl(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ai((()=>{const e=pi(go(a,this.rho),go(Mo(r),1-this.rho)),t=go(_i(ul(pi(i,this.epsilon)),ul(pi(a,this.epsilon))),r),n=pi(go(i,this.rho),go(Mo(t),1-this.rho));a.assign(e),i.assign(n);const o=pi(go(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ii(this.accumulatedGrads.map((e=>e.variable))),ii(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Cu.className="Adadelta",ni(Cu);class Tu extends hi{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Cr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ai((()=>io(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;ai((()=>{const e=pi(a,Mo(r));a.assign(e);const t=pi(go(_i(r,ul(pi(e,Cr.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ii(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Tu.className="Adagrad",ni(Tu);class Eu extends hi{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ai((()=>{this.accBeta1=ci(t).variable(),this.accBeta2=ci(n).variable()})),null==s&&(this.epsilon=Cr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ai((()=>{const n=bo(1,this.accBeta1),s=bo(1,this.accBeta2);t.forEach(((t,r)=>{const a=Cr.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:ai((()=>xl(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:ai((()=>xl(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=pi(go(o,this.beta1),go(i,1-this.beta1)),c=pi(go(l,this.beta2),go(Mo(i),1-this.beta2)),h=_i(u,n),d=_i(c,s);o.assign(u),l.assign(c);const p=pi(go(_i(h,pi(ul(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(go(this.accBeta1,this.beta1)),this.accBeta2.assign(go(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ii(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ii(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ai((()=>{this.accBeta1.assign(mu(this.beta1,this.iterations_+1)),this.accBeta2.assign(mu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Eu.className="Adam",ni(Eu);class Ru extends hi{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ai((()=>{this.iteration=ci(0).variable(),this.accBeta1=ci(t).variable()})),null==s&&(this.epsilon=Cr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ai((()=>{const n=bo(1,this.accBeta1),s=_i(-this.learningRate,pi(go(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=Cr.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:xl(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:xl(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=pi(go(o,this.beta1),go(i,1-this.beta1)),c=go(l,this.beta2),h=di(i),d=Ao(c,h);o.assign(u),l.assign(d);const p=pi(go(_i(s,n),_i(u,pi(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(pi(this.iteration,1)),this.accBeta1.assign(go(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ii(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ii(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ru.className="Adamax",ni(Ru);class Fu extends hi{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=Cr.registeredVariables[t];ai((()=>{const e=pi(go(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=oi(ci(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Fu.className="SGD",ni(Fu);class Du extends Fu{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ci(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Cr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:ai((()=>xl(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&ai((()=>{let e;const t=pi(go(this.m,r),a);e=this.useNesterov?pi(go(this.c,pi(a,go(t,this.m))),s):pi(go(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ii(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Du.className="Momentum",ni(Du);class Ou extends hi{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=Cr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Cr.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ai((()=>xl(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ai((()=>xl(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ai((()=>xl(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ai((()=>{const e=pi(go(i,this.decay),go(Mo(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=pi(go(t,this.decay),go(a,1-this.decay)),l=_i(go(a,this.learningRate),ul(bo(e,pi(Mo(r),this.epsilon)))),u=pi(go(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=bo(s,u);s.assign(c)}else{const e=pi(go(i,this.decay),go(Mo(a),1-this.decay)),t=pi(go(o,this.momentum),_i(go(a,this.learningRate),ul(pi(e,this.epsilon))));i.assign(e),o.assign(t);const n=bo(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ii(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ii(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ii(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Ou.className="RMSProp",ni(Ou);class Lu{static sgd(e){return new Fu(e)}static momentum(e,t,n=!1){return new Du(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Ou(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Eu(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Cu(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Ru(e,t,n,s,r)}static adagrad(e,t=.1){return new Tu(e,t)}}const Mu={sgd:Lu.sgd,momentum:Lu.momentum,adadelta:Lu.adadelta,adagrad:Lu.adagrad,rmsprop:Lu.rmsprop,adamax:Lu.adamax,adam:Lu.adam},zu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Pu(){return new Promise((e=>zu((()=>e()))))}function Wu(e,t){const n=e[0].length;e.forEach(((e,t)=>{F(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),F(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)F(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Vu(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}const Bu=30;function Uu(e){return e<=Bu?e:_(e,Math.floor(Math.sqrt(e)))}function Gu(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Hu(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function qu(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function ju(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Xu(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Ku(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function Zu(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===M(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...ee(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Ju(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function Qu(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Ju(n,t,e)}function Yu(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:M(t.shape)/o,sliceSize:i,strides:[...ee(n.slice(0,r)),1],outputSize:M(n)}}const $u=1.7580993408473768,_u=1.0507009873554805,ec=.3275911,tc=.254829592,nc=-.284496736,sc=1.421413741,rc=-1.453152027,ac=1.061405429;function ic(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function oc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function lc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function uc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function cc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function hc(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function dc(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function pc(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const fc=/->/g;function mc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(fc,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=e.split("->");F(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=s.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=r.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function gc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function bc(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:F(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function xc(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=vc(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function yc(e){return e.every(((e,t)=>e===t))}function vc(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function kc(e,t,n=0){let s=[];if("number"==typeof t)F(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);F(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}F(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function wc(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Ic(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Ac(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Sc(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Nc(e,t){return`size ${e} must be non-negative, not ${t}`}function Cc(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Tc(e,t){return`Input to reshape is a SparseTensor with ${M(e)}\n  dense values, but the requested shape requires a multiple of ${M(t)}. inputShape=${e} outputShape= ${t}`}function Ec(e,t){return`Input to reshape is a tensor with ${M(e)} dense values, but the requested shape has ${M(t)}. inputShape=${e} outputShape=${t}`}function Rc(){return"segment ids must be >= 0"}function Fc(){return"segment ids are not increasing"}function Dc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Oc(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Lc(e,t){let n,s=!1;for(e<=Bu?(n=e,s=!0):n=_(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=_(e,n+1);return n}function Mc(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function zc(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Pc(e){try{return e.map((e=>Js(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Wc(e){return e.map((e=>Zs(e)))}function Vc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=ka(e,"int32"),r=ka([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}const Bc={kernelName:be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(e,El(wa(n,"float32"),-1))}}},Uc={kernelName:xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Mo(wa(n,"float32")),s=ul(bo(ci(1),t));return Po(_i(e,s))}}}},Gc={kernelName:ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ul(bo(Mo(wa(n,"float32")),1));return _i(e,t)}}}},Hc={kernelName:ve,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=La(n.shape,s.shape);return{a:()=>{let t=e;const s=Oa(n.shape,r);return s.length>0&&(t=xo(t,s)),Fi(t,n.shape)},b:()=>{let t=e;const n=Oa(s.shape,r);return n.length>0&&(t=xo(t,n)),Fi(t,s.shape)}}}},qc={kernelName:ke,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},jc={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xl(n)}}},Xc={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xl(n)}}},Kc={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,ul(bo(ci(1),Mo(wa(n,"float32")))))}}},Zc={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ul(pi(ci(1),Mo(wa(n,"float32"))));return _i(e,t)}}}},Jc={kernelName:Re,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=La(n.shape,s.shape);return{a:()=>{const t=pi(Mo(n),Mo(s));let a=go(e,_i(s,t));const i=Oa(n.shape,r);return i.length>0&&(a=xo(a,i)),Fi(a,n.shape)},b:()=>{const t=pi(Mo(n),Mo(s));let a=Po(go(e,_i(n,t)));const i=Oa(s.shape,r);return i.length>0&&(a=xo(a,i)),Fi(a,s.shape)}}}},Qc={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,pi(Mo(wa(n,"float32")),1))}}},Yc={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,bo(ci(1),Mo(wa(n,"float32"))))}}},$c=Pr({avgPool3dGrad_:function(e,t,n,s,r,a){const i=Mr(e,"dy","avgPool3dGrad"),o=Mr(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Fi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Fi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),F(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Ri("avgPool3dGrad",r,a);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},p=Cr.runKernel(Le,h,d);return c?Fi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),_c={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>$c(e,s,r,a,i,o)}}},eh=Pr({avgPoolGrad_:function(e,t,n,s,r){const a=Mr(e,"dy","avgPoolGrad"),i=Mr(t,"input","avgPoolGrad");F(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Fi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Fi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),F(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=Cr.runKernel(De,c,h);return u?Fi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),th={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>eh(e,s,r,a,i)}}},nh={kernelName:Me,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>ko(e,r,!1,!1),b:()=>ko(e,s,!0,!1)}:a&&!i?{a:()=>ko(r,e,!1,!0),b:()=>ko(s,e,!1,!1)}:{a:()=>ko(r,e,!0,!0),b:()=>ko(e,s,!0,!0)}:{a:()=>ko(e,r,!1,!0),b:()=>ko(s,e,!0,!1)}}},sh=Pr({spaceToBatchND_:function(e,t,n){const s=Mr(e,"x","spaceToBatchND");F(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),F(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),F(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return Cr.runKernel(qn,r,a)}}),rh={kernelName:ze,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>sh(e,s,r)}}},ah={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>xo(e,o,!0)}}},ih={kernelName:Ve,gradFunc:e=>({x:()=>e.clone()})},oh={kernelName:Be,gradFunc:e=>({x:()=>xl(e)})},lh={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>bl(vo(co(s,r),lu(s,a)),e,xl(e))}}},uh={kernelName:He,inputsToSave:["x"],gradFunc:Bc.gradFunc},ch={kernelName:qe,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=G(r,t[0].shape)[0],i=s.map((e=>e[a]));return ll(e,i,a).map((e=>()=>e))}},hh={kernelName:je,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return F(Ci(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Xi(s.shape,e,r,i,o,l),filter:()=>Cl(s,e,r.shape,i,o,l)}}},dh={kernelName:Ke,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>qi(e,r,a,i,o,1,l),filter:()=>Cl(e,s,r.shape,a,i,o,l)}}},ph=Pr({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=Fi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Fi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),F(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),F(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),F(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),F(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return Cr.runKernel(Je,o,l)}}),fh={kernelName:Ze,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;F(Ci(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>Ji(i.shape,e,o,r,a),filter:()=>ph(i,e,o.shape,r,a)}}},mh=Pr({sin_:function(e){const t={x:Mr(e,"x","sin","float32")};return Cr.runKernel(Pn,t)}}),gh={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(Po(mh(wa(n,"float32"))),e)}}},bh=Pr({sinh_:function(e){const t={x:Mr(e,"x","sinh")};return Cr.runKernel(Wn,t)}}),xh={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(bh(wa(n,"float32")),e)}}},yh=Pr({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:Mr(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return Cr.runKernel(et,r,a)}}),vh={kernelName:et,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=Do([r],s.rank);let n=yh(e,r,a,!i);return null!=t&&(n=yl(n,t)),n}}}},kh={kernelName:rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;F(Ci(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return F(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),F(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),F(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),F(Ti(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),Ri("depthwiseConv2d",a,i),{x:()=>zl(l.shape,e,u,r,a,o,i),filter:()=>Ml(l,e,u.shape,r,a,o,i)}}},wh={kernelName:lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>Cr.runKernel(ut,a,n),filter:()=>Cr.runKernel(ct,i,n)}}},Ih={kernelName:pt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>Cr.runKernel(ft,s)}}},Ah={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=go(no(Po(Mo(n))),2/Math.sqrt(Math.PI));return{x:()=>go(e,s)}}},Sh={kernelName:bt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(e,n)}}},Nh={kernelName:xt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Fi(e,n.shape)}}},Ch={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(e,no(n))}}},Th={kernelName:It,gradFunc:e=>({x:()=>xl(e)})},Eh={kernelName:At,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=La(n.shape,s.shape);return{a:()=>{const t=_i(e,wa(s,"float32")),a=Oa(n.shape,r);return a.length>0?Fi(xo(t,a),n.shape):t},b:()=>{let t=go(e,wa(n,"float32"));const a=Oa(s.shape,r);a.length>0&&(t=Fi(xo(t,a),s.shape));const i=Mo(s);return Po(_i(t,wa(i,"float32")))}}}},Rh=Pr({rsqrt_:function(e){const t={x:Mr(e,"x","rsqrt","float32")};return Cr.runKernel(Dn,t)}}),Fh={kernelName:St,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?ci(1):o,u=Oa(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=bo(r,a),d=go(e,l),p=Rh(pi(i,ci(s))),f=go(go(go(p,p),p),ci(-.5));return{x:()=>1===a.rank?Fi(go(go(e,ro(Fi(p,[1,1,1,a.shape[0]]),c)),l),r.shape):Fi(go(go(e,p),l),r.shape),mean:()=>{let e=go(go(p,ci(-1)),d);return 1===a.rank&&(e=xo(e,u)),Fi(e,a.shape)},variance:()=>{let e=go(go(f,h),d);return 1===a.rank&&(e=xo(e,u)),Fi(e,a.shape)},scale:()=>{const t=go(h,p);let n=go(e,t);return 1===a.rank&&(n=xo(n,u)),Fi(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=xo(t,u)),Fi(t,a.shape)}}}},Dh=Pr({unsortedSegmentSum_:function(e,t,n){const s=Mr(e,"x","unsortedSegmentSum"),r=Mr(t,"segmentIds","unsortedSegmentSum","int32");F(P(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return Cr.runKernel(ps,a,i)}}),Oh={kernelName:Nt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=G(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=Lh(0,l),d=Lh(l+1,l+1+c),p=Mh([o,[n],u]),f=Fi(e,p),m=Fi(r,[n]),g=Mh([[l],h,d]),b=yl(f,g);let x=Dh(b,m,s.shape[i]);const y=Oo(g);return x=yl(x,y),x},indices:()=>r}}};function Lh(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Mh(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const zh={kernelName:Et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>xl(n),b:()=>xl(s)}}},Ph={kernelName:Rt,gradFunc:e=>({x:()=>wa(e,"float32")})},Wh={kernelName:Ot,gradFunc:e=>({x:()=>xl(e)})},Vh={kernelName:Lt,gradFunc:e=>({x:()=>xl(e)})},Bh={kernelName:Mt,gradFunc:e=>({x:()=>xl(e)})},Uh={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=uo(s,0);return{x:()=>bl(a,e,go(e,r))}}},Gh={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,pi(n,1))}}},Hh={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,wa(n,"float32"))}}},qh={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=no(s);return bo(e,go(xo(e,r,!0),t))}}}},jh=Pr({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return Cr.runKernel(Xt,o,l)}}),Xh={kernelName:jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>jh(s,r,e,a,i,o,l)}}};function Kh(e,t,n,s){return t.rank<n.rank&&(t=Fi(t,Ro(t.shape,s))),e.rank<n.rank&&(e=Fi(e,Ro(e.shape,s))),{x:()=>go(e,wa(to(n,t),e.dtype))}}const Zh={kernelName:Kt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=Kh(e,t[1],a,G(r,a.shape));return{x:()=>i.x()}}},Jh=Pr({less_:function(e,t){let n=Mr(e,"a","less","string_or_numeric"),s=Mr(t,"b","less","string_or_numeric");[n,s]=yr(n,s),La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(Pt,r)}}),Qh={kernelName:Zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>go(e,wa(co(n,s),"float32")),b:()=>go(e,wa(Jh(n,s),"float32"))}}},Yh=Pr({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=Mr(e,"dy","maxPool3dGrad"),l=Mr(t,"input","maxPool3dGrad"),u=Mr(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Fi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Fi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Fi(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),F(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),F(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Ri("maxPool3dGrad",a,i);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=Cr.runKernel($t,f,m);return p?Fi(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),$h={kernelName:Yt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Yh(e,s,r,a,i,o,l)}}},_h=Pr({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=Mr(e,"dy","maxPoolGrad"),l=Mr(t,"input","maxPoolGrad"),u=Mr(n,"output","maxPoolGrad");F(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),F(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),F(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Ri("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return Cr.runKernel(Qt,c,h)}}),ed={kernelName:Jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>_h(e,s,r,a,i,o)}}},td={kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=G(r,s.shape),i=M(Eo(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=Fi(e,t);return _i(go(n,Uo(s.shape,"float32")),i)}}}},nd={kernelName:tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=Kh(e,i,a,G(r,a.shape));return{x:()=>o.x()}}},sd={kernelName:nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>go(e,wa(lu(n,s),"float32")),b:()=>go(e,wa(uo(n,s),"float32"))}}},rd={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>tl(e,a,s.shape)}}},ad={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=La(n.shape,s.shape);return{a:()=>{const t=Oa(n.shape,r);return t.length>0?Fi(xo(e,t),n.shape):e},b:()=>{const t=go(e,Po(oo(_i(n,s)))),a=Oa(s.shape,r);return a.length>0?Fi(xo(t,a),s.shape):t}}}},id={kernelName:on,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=La(n.shape,s.shape);return{a:()=>{const t=go(e,wa(s,"float32")),a=Oa(n.shape,r);return a.length>0?Fi(xo(t,a),n.shape):t},b:()=>{const t=go(e,wa(n,"float32")),a=Oa(s.shape,r);return a.length>0?Fi(xo(t,a),s.shape):t}}}},od={kernelName:ln,gradFunc:e=>({x:()=>Po(e)})},ld={kernelName:fn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Bo(n.shape,"float32")}}},ud={kernelName:pn,gradFunc:e=>({x:()=>xl(e)})},cd={kernelName:mn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return ml(e,s).map((e=>()=>e))}},hd={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>tl(e,a,s.shape)}}},dd={kernelName:bn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=La(a.shape,i.shape);return{a:()=>{const t=wa(i,"float32");let n=go(e,go(t,mu(a,bo(t,ci(1)))));const s=Oa(a.shape,o);return s.length>0&&(n=xo(n,s)),Fi(n,a.shape)},b:()=>{const t=uo(a,0),n=bl(t,po(a),xl(a));let s=go(e,go(r,n));const l=Oa(i.shape,o);return l.length>0&&(s=xo(s,l)),Fi(s,i.shape)}}}},pd={kernelName:xn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=uo(n,0);return{x:()=>bl(r,e,go(e,s)),alpha:()=>{let t=bl(r,xl(e),go(e,n));const a=Oa(s.shape,e.shape);return a.length>0&&(t=xo(t,a)),Fi(t,s.shape)}}}},fd=Pr({cumprod_:function(e,t=0,n=!1,s=!1){const r={x:Mr(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:s};return Cr.runKernel(_e,r,a)}});const md={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let a=[];return a=null==r?s.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>function(e,t,n){const s=e.shape.length,r=s-n.length,a=Do(n,s);let i=e;null!=a&&(i=yl(e,a));const o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=Fi(t,s),a=fd(e,n,!0,!1),i=fd(e,n,!0,!0),o=go(a,i);return go(r,o)}(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=a){const e=Oo(a);u=yl(u,e)}return u}(s,e,a)}}},gd={kernelName:ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=La(n.shape,s.shape);return{a:()=>{const t=_i(e,wa(s,"float32")),a=Oa(n.shape,r);return a.length>0?Fi(xo(t,a),n.shape):t},b:()=>{let t=go(e,wa(n,"float32"));const a=Oa(s.shape,r);a.length>0&&(t=Fi(xo(t,a),s.shape));const i=Mo(s);return Po(_i(t,wa(i,"float32")))}}}},bd={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Po(Mo(n)))}}},xd={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=go(lu(n,6),El(n));return{x:()=>go(e,wa(s,"float32"))}}},yd={kernelName:In,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(e,wa(El(n),"float32"))}}},vd={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fi(e,n.shape)}}},kd={kernelName:Cn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Cr.runKernel(Tn,r,n)}}},wd={kernelName:Sn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Cr.runKernel(Nn,r,n)}}},Id={kernelName:Rn,gradFunc:(e,t,n)=>{const{dims:s}=n,r=G(s,e.shape);return{x:()=>Yo(e,r)}}},Ad={kernelName:Fn,gradFunc:e=>({x:()=>xl(e)})},Sd={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Po(_i(e,go(mu(n,1.5),2)))}}},Nd=Pr({logicalNot_:function(e){const t={x:Mr(e,"x","logicalNot","bool")};return Cr.runKernel(Ht,t)}}),Cd={kernelName:Ln,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>wa(xl(n),"float32"),t:()=>go(e,wa(n,e.dtype)),e:()=>go(e,wa(Nd(n),e.dtype))}}},Td={kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=uo(n,ci(0)),s=ci($u),r=ci(_u),a=go(e,r),i=go(go(e,s),no(wa(n,"float32")));return bl(t,a,i)}}}},Ed={kernelName:Bn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(e,go(n,bo(ci(1),n)))}}},Rd={kernelName:Vn,gradFunc:e=>({x:()=>xl(e)})},Fd=Pr({cos_:function(e){const t={x:Mr(e,"x","cos","float32")};return Cr.runKernel(Ye,t)}}),Dd={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(Fd(wa(n,"float32")),e)}}},Od=Pr({cosh_:function(e){const t={x:Mr(e,"x","cosh","float32")};return Cr.runKernel($e,t)}}),Ld={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(Od(wa(n,"float32")),e)}}},Md={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=Ya(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Ho(e,u)}}},zd={kernelName:Xn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=go(e,s);return{logits:()=>bo(a,go(xo(a,[r],!0),s))}}},Pd={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(e,el(n))}}},Wd=Pr({batchToSpaceND_:function(e,t,n){const s=Mr(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));F(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),F(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),F(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return Cr.runKernel(ze,a,i)}}),Vd={kernelName:qn,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Wd(e,s,r)}}},Bd={kernelName:jn,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>Vi(e,s)}}},Ud=[Bc,Uc,Gc,Hc,qc,jc,Xc,Kc,Zc,Jc,Qc,Yc,_c,th,nh,rh,ah,ih,oh,lh,uh,ch,dh,hh,fh,gh,xh,vh,kh,wh,gd,Ih,Ah,Sh,Nh,Ch,Eh,Th,Fh,Oh,zh,Ph,Wh,Vh,Bh,Uh,Gh,Hh,qh,Xh,Zh,Zh,Qh,$h,ed,td,nd,sd,rd,ad,id,od,ld,ud,cd,hd,hd,dd,pd,md,bd,xd,yd,vd,kd,wd,Id,Ad,Sd,Cd,Td,Ed,Rd,Dd,Ld,Md,zd,Pd,Vd,Vd,Bd,Bd,{kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,go(ul(wa(n,"float32")),2))}}},{kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ci(2);return{a:()=>go(e,go(r,bo(n,s))),b:()=>go(e,go(r,bo(s,n)))}}},{kernelName:_n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(e,go(wa(n,"float32"),2))}}},{kernelName:ms,gradFunc:e=>({x:()=>xl(e)})},{kernelName:rs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=La(n.shape,s.shape);return{a:()=>{let t=e;const s=Oa(n.shape,r);return s.length>0&&(t=xo(t,s)),Fi(t,n.shape)},b:()=>{let t=e;const n=Oa(s.shape,r);return n.length>0&&(t=xo(t,n)),Fi(Po(t),s.shape)}}}},{kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;G(a,s.shape).forEach((e=>{r[e]=1}));const i=Fi(e,r),o=go(i,Uo(s.shape,"float32"));return{x:()=>o}}},{kernelName:as,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_i(e,Mo(Fd(n)))}}},{kernelName:is,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>go(bo(ci(1),Mo(n)),e)}}},{kernelName:os,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=xl(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=pi(t,tl(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=pi(t,tl(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=pi(t,tl(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=pi(t,tl(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:cs,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Oo(r);return{x:()=>yl(e,a)}}},{kernelName:ds,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>hl(e,r)}}},{kernelName:ps,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ao(t,xl(t)),s=lo(e,n);let r=co(t,ci(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=so(r,e+1);r=vo(r,Uo(s.shape,"bool"));const i=xl(s);return bl(r,s,i)}(e,n)}}},{kernelName:fs,gradFunc:e=>({x:()=>xl(e)})}];for(const e of Ud)Es(e);ur().prototype.abs=function(){return this.throwIfDisposed(),di(this)};const Gd=Pr({acos_:function(e){const t={x:Mr(e,"x","acos")};return Cr.runKernel(xe,t)}});ur().prototype.acos=function(){return this.throwIfDisposed(),Gd(this)};const Hd=Pr({acosh_:function(e){const t={x:Mr(e,"x","acosh")};return Cr.runKernel(ye,t)}});ur().prototype.acosh=function(){return this.throwIfDisposed(),Hd(this)},ur().prototype.add=function(e){return this.throwIfDisposed(),pi(this,e)},ur().prototype.all=function(e,t){return this.throwIfDisposed(),fi(this,e,t)},ur().prototype.any=function(e,t){return this.throwIfDisposed(),mi(this,e,t)},ur().prototype.argMax=function(e){return this.throwIfDisposed(),gi(this,e)};const qd=Pr({argMin_:function(e,t=0){const n={x:Mr(e,"x","argMin")},s={axis:t};return Cr.runKernel(Se,n,s)}});ur().prototype.argMin=function(e){return this.throwIfDisposed(),qd(this,e)},ur().prototype.asScalar=function(){return this.throwIfDisposed(),F(1===this.size,(()=>"The array must have only 1 element.")),Fi(this,[])},ur().prototype.asType=function(e){return this.throwIfDisposed(),wa(this,e)},ur().prototype.as1D=function(){return this.throwIfDisposed(),Fi(this,[this.size])},ur().prototype.as2D=function(e,t){return this.throwIfDisposed(),Fi(this,[e,t])},ur().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Fi(this,[e,t,n])},ur().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),Fi(this,[e,t,n,s])},ur().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),Fi(this,[e,t,n,s,r])};const jd=Pr({asin_:function(e){const t={x:Mr(e,"x","asin")};return Cr.runKernel(Ne,t)}});ur().prototype.asin=function(){return this.throwIfDisposed(),jd(this)};const Xd=Pr({asinh_:function(e){const t={x:Mr(e,"x","asinh")};return Cr.runKernel(Ce,t)}});ur().prototype.asinh=function(){return this.throwIfDisposed(),Xd(this)};const Kd=Pr({atan_:function(e){const t={x:Mr(e,"x","atan")};return Cr.runKernel(Te,t)}});ur().prototype.atan=function(){return this.throwIfDisposed(),Kd(this)};const Zd=Pr({atan2_:function(e,t){let n=Mr(e,"a","atan2"),s=Mr(t,"b","atan2");[n,s]=yr(n,s);const r={a:n,b:s};return Cr.runKernel(Re,r)}});ur().prototype.atan2=function(e){return this.throwIfDisposed(),Zd(this,e)};const Jd=Pr({atanh_:function(e){const t={x:Mr(e,"x","atanh")};return Cr.runKernel(Ee,t)}});ur().prototype.atanh=function(){return this.throwIfDisposed(),Jd(this)},ur().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Di(this,e,t,n,s)},ur().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Wd(this,e,t)},ur().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),Li(this,e,t,n,s,r)},ur().prototype.broadcastTo=function(e){return this.throwIfDisposed(),gl(this,e)},ur().prototype.cast=function(e){return this.throwIfDisposed(),wa(this,e)};const Qd=Pr({ceil_:function(e){const t={x:Mr(e,"x","ceil","float32")};return Cr.runKernel(Be,t)}});ur().prototype.ceil=function(){return this.throwIfDisposed(),Qd(this)},ur().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Wi(this,e,t)},ur().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof lr&&(e=[e]),Vi([this,...e],t)},ur().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ji(this,e,t,n,s,r,a)},ur().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),Ki(this,e,t,n,s,r)},ur().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),qi(this,e,t,n,s,r,a)},ur().prototype.cos=function(){return this.throwIfDisposed(),Fd(this)},ur().prototype.cosh=function(){return this.throwIfDisposed(),Od(this)},ur().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),fd(this,e,t,n)},ur().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),yh(this,e,t,n)};const Yd=Pr({depthToSpace_:function(e,t,n="NHWC"){const s=Mr(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];F(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),F(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),F(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),F(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return Cr.runKernel(st,o,l)}});ur().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Yd(this,e,t)},ur().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Yi(this,e,t,n,s,r,a)};const $d=Pr({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=Mr(e,"x","dilation2d"),o=Mr(t,"filter","dilation2d");F(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),F(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),F("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Fi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=Cr.runKernel(lt,c,h);return u?Fi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});ur().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),$d(this,e,t,n,s,r)};const _d=Pr({divNoNan_:function(e,t){let n=Mr(e,"a","div"),s=Mr(t,"b","div");[n,s]=yr(n,s);const r=_i(n,s),a=xl(r),i=to(s,a);return bl(i,a,r)}});ur().prototype.divNoNan=function(e){return this.throwIfDisposed(),_d(this,e)},ur().prototype.div=function(e){return this.throwIfDisposed(),_i(this,e)};const ep=Pr({dot_:function(e,t){const n=Mr(e,"t1","dot"),s=Mr(t,"t2","dot");F(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(F(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=Fi(n,[1,-1]),t=Fi(s,[-1,1]),r=ko(e,t);return Fi(r,[])}if(1===n.rank&&2===s.rank){const e=Fi(n,[1,-1]),t=Fi(s,[s.shape[0],s.shape[1]]),r=ko(e,t);return Fi(r,[r.size])}if(2===n.rank&&1===s.rank){const e=Fi(s,[-1,1]),t=ko(n,e);return Fi(t,[t.size])}{const e=Fi(s,[s.shape[0],s.shape[1]]);return ko(n,e)}}});ur().prototype.dot=function(e){return this.throwIfDisposed(),ep(this,e)},ur().prototype.elu=function(){return this.throwIfDisposed(),eo(this)},ur().prototype.equal=function(e){return this.throwIfDisposed(),to(this,e)};const tp=Pr({erf_:function(e){let t=Mr(e,"x","erf");F("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=wa(t,"float32"));const n={x:t};return Cr.runKernel(mt,n)}});ur().prototype.erf=function(){return this.throwIfDisposed(),tp(this)},ur().prototype.exp=function(){return this.throwIfDisposed(),no(this)},ur().prototype.expandDims=function(e){return this.throwIfDisposed(),so(this,e)};const np=Pr({expm1_:function(e){const t={x:Mr(e,"x","expm1")};return Cr.runKernel(yt,t)}});ur().prototype.expm1=function(){return this.throwIfDisposed(),np(this)},ur().prototype.fft=function(){return this.throwIfDisposed(),Il(this)},ur().prototype.flatten=function(){return this.throwIfDisposed(),Fi(this,[this.size])},ur().prototype.floor=function(){return this.throwIfDisposed(),oo(this)},ur().prototype.floorDiv=function(e){return this.throwIfDisposed(),$i(this,e)},ur().prototype.gather=function(e,t){return this.throwIfDisposed(),lo(this,e,t)},ur().prototype.greaterEqual=function(e){return this.throwIfDisposed(),co(this,e)},ur().prototype.greater=function(e){return this.throwIfDisposed(),uo(this,e)},ur().prototype.ifft=function(){return this.throwIfDisposed(),Sl(this)},ur().prototype.irfft=function(){return this.throwIfDisposed(),Nl(this)};const sp=Pr({isFinite_:function(e){const t={x:Mr(e,"x","isFinite")};return Cr.runKernel(Ot,t)}});ur().prototype.isFinite=function(){return this.throwIfDisposed(),sp(this)};const rp=Pr({isInf_:function(e){const t={x:Mr(e,"x","isInf")};return Cr.runKernel(Lt,t)}});ur().prototype.isInf=function(){return this.throwIfDisposed(),rp(this)};const ap=Pr({isNaN_:function(e){const t={x:Mr(e,"x","isNaN")};return Cr.runKernel(Mt,t)}});ur().prototype.isNaN=function(){return this.throwIfDisposed(),ap(this)},ur().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ho(this,e)},ur().prototype.lessEqual=function(e){return this.throwIfDisposed(),lu(this,e)},ur().prototype.less=function(e){return this.throwIfDisposed(),Jh(this,e)};const ip=Pr({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=Mr(e,"x","localResponseNormalization");F(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),F(P(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Fi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=Cr.runKernel(jt,l,u);return o?Fi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});ur().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),ip(this,e,t,n,s)};const op=Pr({logSigmoid_:function(e){const t=Mr(e,"x","logSigmoid"),n=ui((e=>({value:Po(ol(Po(e))),gradFunc:t=>go(t,el(Po(e)))})));return n(t)}});ur().prototype.logSigmoid=function(){return this.throwIfDisposed(),op(this)},ur().prototype.logSoftmax=function(e){return this.throwIfDisposed(),yo(this,e)},ur().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Au(this,e,t)},ur().prototype.log=function(){return this.throwIfDisposed(),po(this)},ur().prototype.log1p=function(){return this.throwIfDisposed(),fo(this)},ur().prototype.logicalAnd=function(e){return this.throwIfDisposed(),vo(this,e)},ur().prototype.logicalNot=function(){return this.throwIfDisposed(),Nd(this)};const lp=Pr({logicalOr_:function(e,t){const n=Mr(e,"a","logicalOr","bool"),s=Mr(t,"b","logicalOr","bool");La(n.shape,s.shape);const r={a:n,b:s};return Cr.runKernel(qt,r)}});ur().prototype.logicalOr=function(e){return this.throwIfDisposed(),lp(this,e)};const up=Pr({logicalXor_:function(e,t){const n=Mr(e,"a","logicalXor","bool"),s=Mr(t,"b","logicalXor","bool");return La(n.shape,s.shape),vo(lp(e,t),Nd(vo(e,t)))}});ur().prototype.logicalXor=function(e){return this.throwIfDisposed(),up(this,e)},ur().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ko(this,e,t,n)},ur().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),wo(this,e,t,n,s)},ur().prototype.max=function(e,t){return this.throwIfDisposed(),mo(this,e,t)},ur().prototype.maximum=function(e){return this.throwIfDisposed(),Ao(this,e)},ur().prototype.mean=function(e,t){return this.throwIfDisposed(),So(this,e,t)},ur().prototype.min=function(e,t){return this.throwIfDisposed(),fu(this,e,t)},ur().prototype.minimum=function(e){return this.throwIfDisposed(),No(this,e)};const cp=Pr({mirrorPad_:function(e,t,n){F("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Mr(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)F(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),F(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return Cr.runKernel(sn,i,a)}});ur().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),cp(this,e,t)};const hp=Pr({mod_:function(e,t){let n=Mr(e,"a","mod"),s=Mr(t,"b","mod");[n,s]=yr(n,s);const r={a:n,b:s};return Cr.runKernel(rn,r)}});ur().prototype.mod=function(e){return this.throwIfDisposed(),hp(this,e)},ur().prototype.mul=function(e){return this.throwIfDisposed(),go(this,e)},ur().prototype.neg=function(){return this.throwIfDisposed(),Po(this)},ur().prototype.norm=function(e,t,n){return this.throwIfDisposed(),bu(this,e,t,n)},ur().prototype.notEqual=function(e){return this.throwIfDisposed(),Wo(this,e)},ur().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Vo(this,e,t,n)},ur().prototype.onesLike=function(){return this.throwIfDisposed(),Go(this)},ur().prototype.pad=function(e,t){return this.throwIfDisposed(),Ho(this,e,t)};const dp=Pr({pool_:function(e,t,n,s,r,a,i){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const o=Mr(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Fi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(Ti(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const c=xi(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,d),g=p?s:"valid",b=p?l:sh(l,h,f),x=("avg"===n?()=>Di(b,t,a,g,i):()=>wo(b,t,a,g,i))(),y=p?x:Wd(x,h,m);return u?Fi(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});ur().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),dp(this,e,t,n,s,r,a)},ur().prototype.pow=function(e){return this.throwIfDisposed(),mu(this,e)},ur().prototype.prelu=function(e){return this.throwIfDisposed(),qo(this,e)};const pp=Pr({prod_:function(e,t=null,n=!1){let s=Mr(e,"x","prod");"bool"===s.dtype&&(s=wa(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return Cr.runKernel(yn,r,a)}});ur().prototype.prod=function(e,t){return this.throwIfDisposed(),pp(this,e,t)};const fp=Pr({reciprocal_:function(e){const t={x:Mr(e,"x","reciprocal")};return Cr.runKernel(wn,t)}});ur().prototype.reciprocal=function(){return this.throwIfDisposed(),fp(this)},ur().prototype.relu=function(){return this.throwIfDisposed(),Qo(this)},ur().prototype.relu6=function(){return this.throwIfDisposed(),Tl(this)},ur().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Fi(this,e.shape)},ur().prototype.reshape=function(e){return this.throwIfDisposed(),Fi(this,e)},ur().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),au(this,e,t,n)},ur().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),iu(this,e,t,n)},ur().prototype.reverse=function(e){return this.throwIfDisposed(),Yo(this,e)},ur().prototype.rfft=function(){return this.throwIfDisposed(),Al(this)},ur().prototype.round=function(){return this.throwIfDisposed(),uu(this)},ur().prototype.rsqrt=function(){return this.throwIfDisposed(),Rh(this)},ur().prototype.selu=function(){return this.throwIfDisposed(),$o(this)},ur().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),_o(this,e,t,n,s,r,a)},ur().prototype.sigmoid=function(){return this.throwIfDisposed(),el(this)};const mp=Pr({sign_:function(e){const t={x:Mr(e,"x","sign")};return Cr.runKernel(Vn,t)}});ur().prototype.sign=function(){return this.throwIfDisposed(),mp(this)},ur().prototype.sin=function(){return this.throwIfDisposed(),mh(this)},ur().prototype.sinh=function(){return this.throwIfDisposed(),bh(this)},ur().prototype.slice=function(e,t){return this.throwIfDisposed(),tl(this,e,t)},ur().prototype.softmax=function(e){return this.throwIfDisposed(),il(this,e)},ur().prototype.softplus=function(){return this.throwIfDisposed(),ol(this)},ur().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),sh(this,e,t)},ur().prototype.split=function(e,t){return this.throwIfDisposed(),ll(this,e,t)},ur().prototype.sqrt=function(){return this.throwIfDisposed(),ul(this)},ur().prototype.square=function(){return this.throwIfDisposed(),Mo(this)},ur().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Iu(this,e)},ur().prototype.squeeze=function(e){return this.throwIfDisposed(),cl(this,e)},ur().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof lr?[this,e]:[this,...e];return hl(n,t)},ur().prototype.step=function(e){return this.throwIfDisposed(),El(this,e)};const gp=Pr({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:Mr(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Cr.runKernel(es,u,c)}});ur().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),gp(this,e,t,n,s,r,a,i,o)},ur().prototype.sub=function(e){return this.throwIfDisposed(),bo(this,e)},ur().prototype.sum=function(e,t){return this.throwIfDisposed(),xo(this,e,t)};const bp=Pr({tan_:function(e){const t={x:Mr(e,"x","tan","float32")};return Cr.runKernel(as,t)}});ur().prototype.tan=function(){return this.throwIfDisposed(),bp(this)},ur().prototype.tanh=function(){return this.throwIfDisposed(),dl(this)},ur().prototype.tile=function(e){return this.throwIfDisposed(),ro(this,e)},ur().prototype.toBool=function(){return this.throwIfDisposed(),wa(this,"bool")},ur().prototype.toFloat=function(){return this.throwIfDisposed(),wa(this,"float32")},ur().prototype.toInt=function(){return this.throwIfDisposed(),wa(this,"int32")};const xp=Pr({topk_:function(e,t=1,n=!0){const s=Mr(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=Cr.runKernel(ls,a,i);return{values:o,indices:l}}});ur().prototype.topk=function(e,t){return this.throwIfDisposed(),xp(this,e,t)},ur().prototype.transpose=function(e){return this.throwIfDisposed(),yl(this,e)};const yp=Pr({unique_:function(e,t=0){const n=Mr(e,"x","unique","string_or_numeric");F(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=Cr.runKernel(hs,s,r);return{values:a,indices:i}}});ur().prototype.unique=function(e){return this.throwIfDisposed(),yp(this,e)},ur().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Dh(this,e,t)},ur().prototype.unstack=function(e){return this.throwIfDisposed(),ml(this,e)},ur().prototype.where=function(e,t){return this.throwIfDisposed(),bl(e,this,t)},ur().prototype.zerosLike=function(){return this.throwIfDisposed(),xl(this)};class vp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vp.prototype)}}class kp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kp.prototype)}}class wp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wp.prototype)}}class Ip extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ip.prototype)}}class Ap extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ap.prototype)}}Error;class Sp{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Np(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Cp(e,t){if(!e)throw new Ap(t)}function Tp(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Ep(e){return 1===e.length?e[0]:e}function Rp(e){return Array.isArray(e)?e:[e]}function Fp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Dp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Op={};function Lp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Mp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Mp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Mp(t):e[n]=t.value)}}}function zp(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in Op)a=Op[r];else if(a=t[r],null==a)throw new wp(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new wp(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Op?[o,l]=Op.className:i in t&&([o,l]=t[i]),null==o)throw new wp(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Op))e[t]=Op[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Op);for(const e of Object.keys(n))Op[e]=n[e];Mp(a.config);const s=l(o,a.config,n,r);return Op=Object.assign({},t),s}{const e=Object.assign({},Op);for(const e of Object.keys(n))Op[e]=n[e];const t=new o(a.config);return Op=Object.assign({},e),t}}}function Pp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Wp(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Vp(e){if(null==e)throw new wp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Bp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new wp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Up(e,t,n=0,s=1/0){return Cp(n>=0),Cp(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Gp(e,t){Array.isArray(e)?(F(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Gp(e,`element ${n+1} of ${t}`)))):F(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Hp(e)}.`))}function Hp(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Hp(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function qp(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let jp=0;function Xp(){return jp++}const Kp={};function Zp(e=""){return e in Kp||(Kp[e]=0),Kp[e]+=1,e+Kp[e].toString()}const Jp=["channelsFirst","channelsLast"],Qp=["nearest","bilinear"],Yp=["valid","same","causal"],$p=["max","avg"],_p=["sum","mul","concat","ave"],ef=new Map;function tf(e){Bp(Jp,"DataFormat",e)}function nf(e){Bp(Yp,"PaddingMode",e)}function sf(e){Bp($p,"PoolMode",e)}const rf=[];function af(e,t){rf.push(e);try{const e=t();return rf.pop(),e}catch(e){throw rf.pop(),e}}function of(e){if(!cf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===rf.length?"":rf.join("/")+"/")+e}function lf(e){if(!cf(e))throw new Error("Not a valid tensor name: '"+e+"'");ef.has(e)||ef.set(e,0);const t=ef.get(e);if(ef.set(e,ef.get(e)+1),t>0){const n=`${e}_${t}`;return ef.set(n,1),n}return e}const uf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function cf(e){return!!e.match(uf)}function hf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function df(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function pf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function ff(e,t){if(t<e)throw new wp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let mf;function gf(){return null==mf&&(mf=Cr.backend.epsilon()),mf}function bf(e,t){return wa(e,t)}function xf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Fi(e,n)}function yf(e,t,n){return ai((()=>{switch(e.rank){case 1:return nl(e,t,n);case 2:return sl(e,[t,0],[n,e.shape[1]]);case 3:return rl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return al(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return tl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return tl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new wp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function vf(e,t,n){return ai((()=>{switch(e.rank){case 1:return nl(e,t,n);case 2:return sl(e,[0,t],[e.shape[0],n]);case 3:return rl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return al(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new wp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function kf(e,t,n,s){return ai((()=>{switch(e.rank){case 1:return nl(e,t,n);case 2:switch(s){case 1:return yf(e,t,n);case 2:return vf(e,t,n);default:throw new wp(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return yf(e,t,n);case 2:return rl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return vf(e,t,n);default:throw new wp(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return yf(e,t,n);case 2:return al(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return al(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return vf(e,t,n);default:throw new wp(`The axis is not within the rank of the tensor ${s}`)}default:throw new wp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function wf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Vi(e,t)}function If(e,t){switch(e.rank){case 1:return Bi([e,t]);case 2:return Ui([e,t],0);case 3:return Gi([e,t],0);case 4:return Hi([e,t],0);default:throw new wp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Af(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new wp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ro(e,t)}function Sf(e,t=0,n=1,s,r){return Zo(e,t,n,s,r)}function Nf(e,t,n,s){if(e.rank<2||t.rank<2)throw new Ip(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Ip(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Pl({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?Ef(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),a=r.pop();e=Fi(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Fi(yl(t,c),[l,-1]);const h=[...r,...u];return Fi(Pl({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?Ef(e.rank,s,"channelsLast"):null,activation:n}),h)}}function Cf(e,t,n){return ai((()=>(t=Array.isArray(t)?pl(t,"int32"):wa(t,"int32"),lo(e,t,n))))}function Tf(e){return go(e,e)}function Ef(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new wp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?Fi(t,[1,s[0],1,1,1]):Fi(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?Fi(t,[1,1,1,1,s[0]]):Fi(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?Fi(t,[1,s[0],1,1]):Fi(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?Fi(t,[1,1,1,s[0]]):Fi(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?Fi(t,[1,s[0],1]):Fi(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?Fi(t,[1,1,s[0]]):Fi(t,[1].concat(s))}else if(e<3)return t;throw new wp(`Unsupported input rank by biasAdd: ${t.rank}`)}function Rf(e,t,n){return ai((()=>(null==n&&(n="channelsLast"),tf(n),pi(e,Ef(e.rank,t,n)))))}function Ff(e,t,n,s){return ai((()=>vl(e,t,n,s)))}function Df(e,t,n=!1){return n?e():t()}const Of=["fanIn","fanOut","fanAvg"],Lf=["normal","uniform","truncatedNormal"];class Mf extends ei{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class zf extends Mf{apply(e,t){return Bo(e,t)}}zf.className="Zeros",ni(zf);class Pf extends Mf{apply(e,t){return Uo(e,t)}}Pf.className="Ones",ni(Pf);class Wf extends Mf{constructor(e){if(super(),"object"!=typeof e)throw new wp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new wp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ai((()=>go(ci(this.value),Uo(e,t))))}getConfig(){return{value:this.value}}}Wf.className="Constant",ni(Wf);class Vf extends Mf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Jo(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Vf.className="RandomUniform",ni(Vf);class Bf extends Mf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ip(`randomNormal does not support dType ${t}.`);return Sf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Bf.className="RandomNormal",ni(Bf);class Uf extends Mf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ip(`truncatedNormal does not support dType ${t}.`);return fl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Uf.className="TruncatedNormal",ni(Uf);class Gf extends Mf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ai((()=>{if(2!==e.length||e[0]!==e[1])throw new wp("Identity matrix initializer can only be used for 2D square matrices.");return go(this.gain,ao(e[0]))}))}getConfig(){return{gain:this.gain}}}Gf.className="Identity",ni(Gf);class Hf extends Mf{constructor(e){if(super(),e.scale<0)throw new wp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Bp(Of,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Bp(Lf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(tf(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=hf(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=hf(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=hf(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ip(`${this.getClassName()} does not support dType ${t}.`);return fl(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Jo(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Hf.className="VarianceScaling",ni(Hf);class qf extends Hf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hf.className}}qf.className="GlorotUniform",ni(qf);class jf extends Hf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hf.className}}jf.className="GlorotNormal",ni(jf);class Xf extends Hf{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hf.className}}Xf.className="HeNormal",ni(Xf);class Kf extends Hf{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hf.className}}Kf.className="HeUniform",ni(Kf);class Zf extends Hf{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hf.className}}Zf.className="LeCunNormal",ni(Zf);class Jf extends Hf{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hf.className}}Jf.className="LeCunNormal",ni(Jf);class Qf extends Mf{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Ip("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return ai((()=>{if(e.length<2)throw new Ip("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Sf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Nu.gramSchmidt(t);return e[0]>e[1]&&(n=yl(n)),go(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Qf.className="Orthogonal",ni(Qf);const Yf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function $f(e,t={}){return zp(e,ti.getMap().classNameMap,t,"initializer")}function _f(e){return Lp(e)}function em(e){if("string"==typeof e){const t=e in Yf?Yf[e]:e;if("GlorotNormal"===t)return new jf;if("GlorotUniform"===t)return new qf;if("HeNormal"===t)return new Xf;if("HeUniform"===t)return new Kf;if("LeCunNormal"===t)return new Zf;if("LeCunUniform"===t)return new Jf;{const e={};return e.className=t,e.config={},$f(e)}}return e instanceof Mf?e:$f(e)}function tm(e){return Array.isArray(e)&&Array.isArray(e[0])}function nm(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function sm(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new wp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function rm(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new wp(`Expected exactly 1 Shape; got ${e.length}`)}return e}function am(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class im{constructor(e,t="float32",n="Variable",s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Xp(),n=null==n?"Variable":n,this.originalName=of(n),this.name=lf(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(e,t=!0,n,s){return Cr.makeVariable(e,t,n,s)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function om(e){return e.map((e=>e.read()))}function lm(e){e.forEach((e=>{e[0].write(e[1])}))}class um{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class cm{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Xp(),null!=a&&(this.originalName=of(a),this.name=lf(this.originalName)),this.rank=t.length}}let hm=0;class dm{constructor(e,t){this.callArgs=t,this.id=hm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let pm=0;class fm extends ei{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=pm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Fp(e)+"_"+Zp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new kp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new wp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Ep(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ep(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new vp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new vp(`Layer ${this.name} is not connected, no input to return.`);return Ep(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new vp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new vp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ep(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Rp(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Rp(this.inputSpec);if(e.length!==t.length)throw new wp(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new wp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new wp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new wp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new wp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new wp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new wp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Rp(e);let s=!0;for(const e of n)if(!(e instanceof cm)){s=!1;break}let r=!0;for(const e of n)if(e instanceof cm){r=!1;break}if(s===r)throw new wp("Arguments to apply() must be all SymbolicTensors or all Tensors");return af(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Rp(e))t.push(n.shape);this.build(Ep(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=Rp(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=Ep(a),null!=this.activityRegularizer)throw new Ip("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=Rp(e);const t=[];for(const n of e)t.push(n.shape);return Ep(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new cm(a,n,this,Rp(e),t,this.name,s))):new cm(a,s,this,Rp(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new Ip("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new vp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new vp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new kp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return am(this.weights)}build(e){this.built=!0}getWeights(e=!1){return om(e?this.trainableWeights:this.weights)}setWeights(e){ai((()=>{const t=this.weights;if(t.length!==e.length)throw new wp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=om(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!z(a.shape,o.shape))throw new wp(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}lm(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new wp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():em("zeros"));const l=s.apply(t,n),u=new im(l,n,e,a,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Rp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=Rp(e);t=Rp(t),n=Rp(n),s=Rp(s),r=nm(r),a=nm(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new dm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function mm(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=mm(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class gm extends fm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Zp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new wp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new wp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new wp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new cm(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new wp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}gm.className="InputLayer",ni(gm);class bm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof bm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new wp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return wa(t,e.dtype)}catch(n){throw new wp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof cm){if(null==this.id2Value[e.id])throw new wp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new wp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof cm){if(null==this.id2Value[e.id])throw new wp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new wp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ii(this.id2Mask)}}const xm=new Sp,ym=new Sp;function vm(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d=xm.get(c);if(null==d){const e=function(e,t){F(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=wm(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=wm(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:km(s)}}(i,t);d=e.sorted,h=e.recipientCounts,xm.put(c,d),ym.put(c,h)}h={},r||Object.assign(h,ym.get(c));const p=new bm(t);for(let e=0;e<d.length;++e){if(null!=s){const e=ri().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof gm)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=p.getValue(e),s=p.getMask(e);u.push(n),c.push(s),null!=s&&(m=!0),r||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Rp(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const x=Im(a),y=Array.isArray(x)?x:[x];for(let e=0;e<y.length;++e){p.hasKey(y[e])||p.add(y[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(y[e].name);-1!==t&&(l[t]=g[e])}r||ii(f)}return p.disposeMasks(),a?l:l[0]}function km(e){const t={};for(const n in e)t[n]=e[n].size;return t}function wm(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Im(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Am(e,t){return ai((()=>ul(xo(go(e,e),t,!0))))}de().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=xm&&xm.setMaxEntries(e),null!=ym&&ym.setMaxEntries(e)}));class Sm extends ei{getConfig(){return{}}}class Nm extends Sm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ai((()=>{const t=Am(e,this.axis),n=Wi(t,0,this.maxValue);return go(e,_i(n,pi(gf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Nm.className="MaxNorm",ni(Nm);class Cm extends Sm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ai((()=>_i(e,pi(gf(),Am(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Cm.className="UnitNorm",ni(Cm);class Tm extends Sm{apply(e){return Qo(e)}}Tm.className="NonNeg",ni(Tm);class Em extends Sm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ai((()=>{const t=Am(e,this.axis),n=pi(go(this.rate,Wi(t,this.minValue,this.maxValue)),go(1-this.rate,t));return go(e,_i(n,pi(gf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Em.className="MinMaxNorm",ni(Em);const Rm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Fm(e){return Lp(e)}function Dm(e,t={}){return zp(e,ti.getMap().classNameMap,t,"constraint")}function Om(e){return null==e?null:"string"==typeof e?Dm({className:e in Rm?Rm[e]:e,config:{}}):e instanceof Sm?e:Dm(e)}async function Lm(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];ii(s)}}function Mm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var zm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(zm||(zm={}));class Pm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Wm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Vm extends Pm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=ai((()=>pi(this.totals[e],go(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ai((()=>{const n=go(_i(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),oi(t[e])})))}}class Bm extends Pm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Um extends Pm{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Pu,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Q(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():Ks();return(...a)=>{const i=null!=n?n():Ks();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await Lm(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Lm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Lm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Lm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Lm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Q(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Lm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Lm(e),await this.trainEnd(e))}}function Gm(e,t){return null==e&&(e={}),e instanceof Pm?[e]:Array.isArray(e)&&e[0]instanceof Pm?e:Rp(e).map((e=>new Um(e,t)))}class Hm{constructor(){}static registerCallbackConstructor(e,t){F(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Hm.checkForDuplicate(t),null==Hm.constructors[e]&&(Hm.constructors[e]=[]),Hm.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Hm.constructors)Hm.constructors[+t].forEach((t=>{if(t===e)throw new wp("Duplicate callback constructor.")}))}static clear(){Hm.constructors={}}static createCallbacks(e){const t=[];for(const n in Hm.constructors){const s=+n;e>=s&&t.push(...Hm.constructors[s])}return t.map((e=>new e))}}function qm(e,t,n,s,r,a,i,o,l){const u=new Bm,c=[new Vm,...Hm.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Wm(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function jm(e,t={},n=!1){return zp(e,ti.getMap().classNameMap,t,"layer",n)}function Xm(e,t){return ai((()=>{"float32"!==e.dtype&&(e=wa(e,"float32"));const n=xo(Tf(e),t,!0),s=io(n.shape,gf()),r=ul(Ao(n,s));return _i(e,r)}))}function Km(e,t){return ai((()=>So(Tf(bo(t,e)),-1)))}function Zm(e,t){return ai((()=>So(di(bo(t,e)),-1)))}function Jm(e,t){return ai((()=>{const n=bo(e,t),s=Wi(di(e),gf(),Number.MAX_VALUE),r=di(_i(n,s));return go(100,So(r,-1))}))}function Qm(e,t,n=!1){return ai((()=>{if(n)t=il(t);else{const e=xo(t,t.shape.length-1,!0);t=_i(t,e)}return t=Wi(t,gf(),1-gf()),Po(xo(go(wa(e,"float32"),po(t)),t.shape.length-1))}))}function Ym(e,t,n=!1){return ai((()=>{const s=wa(oo(function(e){const t=[hf(e.shape)];return Fi(e,t)}(e)),"int32"),r=(t=Wi(t,gf(),1-gf())).shape;return Qm(Fi(Vo(s,r[r.length-1]),r),t,n)}))}function $m(e,t){return ai((()=>{let n;return n=Wi(t,gf(),1-gf()),n=po(_i(n,bo(1,n))),So(function(e,t){if(!z(e.shape,t.shape))throw new wp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ai((()=>{const n=Qo(t),s=Po(di(t));return pi(bo(n,go(t,e)),fo(no(s)))}))}(e,n),-1)}))}function _m(e,t){return ai((()=>{const n=Xm(e,-1),s=Xm(t,-1),r=go(n,s);return Po(xo(r,-1))}))}Hm.constructors={};const eg={meanSquaredError:Km,meanAbsoluteError:Zm,meanAbsolutePercentageError:Jm,meanSquaredLogarithmicError:function(e,t){return ai((()=>{const n=Wi(t,gf(),Number.MAX_VALUE),s=po(pi(1,n)),r=Wi(e,gf(),Number.MAX_VALUE),a=po(pi(1,r));return So(Tf(bo(s,a)),-1)}))},squaredHinge:function(e,t){return ai((()=>{const n=Ao(0,bo(1,go(e,t)));return So(Tf(n),-1)}))},hinge:function(e,t){return ai((()=>{const n=Ao(0,bo(1,go(e,t)));return So(n,-1)}))},categoricalHinge:function(e,t){return ai((()=>{const n=xo(go(e,t),-1),s=mo(go(bo(1,e),t),-1);return Ao(0,pi(1,bo(s,n)))}))},logcosh:function(e,t){return ai((()=>{const n=Math.log(2),s=bo(t,e),r=bo(pi(s,ol(go(-2,s))),n);return So(r,-1)}))},categoricalCrossentropy:Qm,sparseCategoricalCrossentropy:Ym,binaryCrossentropy:$m,kullbackLeiblerDivergence:function(e,t){return ai((()=>{const n=Wi(e,gf(),1),s=Wi(t,gf(),1);return xo(go(e,po(_i(n,s))),-1)}))},poisson:function(e,t){return ai((()=>{const n=po(pi(gf(),t));return So(bo(t,go(e,n)),-1)}))},cosineProximity:_m};function tg(e){if("string"==typeof e){if(e in eg)return eg[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new wp(t)}return e}function ng(e,t){return ai((()=>{const n=go(.5,Go(t)),s=bf(uo(t,n),e.dtype);return So(to(e,s),-1)}))}function sg(e,t){return ai((()=>bf(to(gi(e,-1),gi(t,-1)),"float32")))}function rg(e,t){return $m(e,t)}function ag(e,t){return e.rank===t.rank&&(e=cl(e,[e.rank-1])),(t=gi(t,-1)).dtype!==e.dtype&&(t=wa(t,e.dtype)),wa(to(e,t),"float32")}const ig=Qm,og=Ym,lg={binaryAccuracy:ng,categoricalAccuracy:sg,precision:function(e,t){return ai((()=>{const n=function(e,t){return ai((()=>wa(xo(vo(to(e,1),to(t,1))),"float32")))}(e,t),s=function(e,t){return ai((()=>wa(xo(vo(to(e,0),to(t,1))),"float32")))}(e,t),r=pi(n,s);return wa(bl(uo(r,0),_i(n,r),0),"float32")}))},categoricalCrossentropy:ig,sparseCategoricalCrossentropy:og,mse:Km,MSE:Km,mae:Zm,MAE:Zm,mape:Jm,MAPE:Jm,cosine:_m};function ug(e){if("string"==typeof e&&e in lg)return lg[e];if("string"!=typeof e&&null!=e)return e;throw new wp(`Unknown metric ${e}`)}function cg(e){if(Cp(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(eg))if(eg[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(lg))if(lg[n]===e){t=n;break}return void 0!==t?t:e.name}}function hg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!dg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function dg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!dg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!dg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function pg(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function fg(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}pg([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function mg(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${s}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];pg([`${o} (${l})`,a,r,e.countParams().toString(),u],t,s);for(let e=1;e<i.length;++e)pg(["","","","",i[e]],t,s)}function gg(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function bg(e,t){if(null===e)return null;if("string"==typeof e)return Dp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];gg(t,r,s)?n.push(s):n.push(bg(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=Dp(n);t[e]=bg(s,e)}}return t}}function xg(e,t){if(null==e)return null;if("string"==typeof e)return Fp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];gg(t,r,s)?n.push(s):n.push(xg(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[Fp(n)]="name"!==n&&"className"!==n||"string"!=typeof s?xg(s,n):s}return t}}class yg extends fm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Zp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Wp(this.inputs).length!==this.inputs.length)throw new wp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Wp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;Cp(0===n,"input layer has >1 nodes"),Cp(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof gm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new kp(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(yg.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const d={};for(const e in s){const t=s[e];t in d||(d[t]=[]),d[t].push(r[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Pp);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof yg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Pp);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new kp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new kp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new wp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new wp(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new wp(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new wp(`${e.length} of ${s} weights are not set: ${e}`)}lm(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.16.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=xg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ai((()=>{e=Rp(e);const n=new bm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return vm(this.outputs,n,t)}))}computeMask(e,t){return ai((()=>{let n;return e=Rp(e),n=null==t?Np(null,e.length):Rp(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=nm(e);if(t.length!==this.inputLayers.length)throw new wp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Pp);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=nm(t.computeOutputShape(Ep(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];Cp(t in n),r.push(n[t])}return Ep(r)}runInternalGraph(e,t){null==t&&(t=Np(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Pp);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Rp(t.call(e,u)),l=Rp(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Rp(t.call(s,u)),l=Rp(t.computeMask(s,i));if(t.activityRegularizer)throw new Ip("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){Cp(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof yg?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=yg.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new wp(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new wp("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new wp(`No such layer: ${e}`)}calculateLosses(){return ai((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=yg.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=yg.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[yg.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=yg.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=yg.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Ep(n),s)}function l(e){const n=e.name,a=jm(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new wp(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Vp(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],s=e[2];Cp(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];Cp(t in r);const a=r[t].inboundNodes[n].outputTensors;d.push(a[s])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new wp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ai((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function vg(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function kg(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ai((()=>{if(1===e.shape.length)return Ia(e);if(2===e.shape.length){if(e.shape[1]>1)return gi(e,1);if(1===e.shape[1])return Fi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());ii(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),pl(r,"float32")}return null}function wg(e,t){return go(e,t)}function Ig(e,t){let n,s;const r=t;n=r.xs,s=r.ys,F(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Ag("input",e.inputNames,n),i=Ag("output",e.outputNames,s),o=a[0].shape[0];F(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),F(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)F(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)F(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Ag(e,t,n){if(n instanceof lr)return[n];if(Array.isArray(n))return F(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new wp(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Sg(e){return"function"==typeof e.iterator}function Ng(e){F(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Cg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>yf(e,t,n-t))):yf(e,t,n-t)}function Tg(e,t){return ai((()=>null==e?null:Array.isArray(e)?e.map((e=>Tg(e,t))):Cf(e,"int32"===t.dtype?t:wa(t,"int32"))))}function Eg(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Rg(e){const t=[];e instanceof lr&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(xf(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Fg(e,t){if(null==e)return;const n=[];if(t instanceof lr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof lr)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function Dg(e){return Array.isArray(e)}function Og(e){return!function(e){return e instanceof lr}(e)&&!Dg(e)}function Lg(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Dg(e)&&e.length>0)t=!0;else if(Og(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new wp(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Og(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new wp(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Dg(e)){if((e=e).length!==t.length)throw new wp(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new wp(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Rg(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new wp(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new wp(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Mg(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new wp(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new wp(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new wp(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new wp(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class zg extends yg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new wp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),pg(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?fg(o[e],n,s):mg(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?am(e.collectedTrainableWeights):am(e.trainableWeights),t}(e),u=am(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Mu.adagrad(.01),Adadelta:()=>Mu.adadelta(1,.95,gf()),Adam:()=>Mu.adam(.001,.9,.999,gf()),Adamax:()=>Mu.adamax(.002,.9,.999,gf(),0),RMSProp:()=>Mu.rmsprop(.001,.9,0,gf()),SGD:()=>Mu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new wp(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof hi))throw new wp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new wp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>tg(e)))}else{const n=tg(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new wp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(tg(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],af("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};af("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===$m?-1!==["accuracy","acc"].indexOf(i)?s=ng:-1!==["crossentropy","ce"].indexOf(i)&&(s=rg):this.lossFunctions[e]===Ym?-1!==["accuracy","acc"].indexOf(i)?s=ag:-1!==["crossentropy","ce"].indexOf(i)&&(s=og):-1!==["accuracy","acc"].indexOf(i)?s=sg:-1!==["crossentropy","ce"].indexOf(i)&&(s=ig),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=ug(i);a=e,n=""+cg(i)}let t;af(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Ng(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return Ep(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Fg(r[0],e),Fg(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new Ip("Verbose mode is not implemented yet.");F(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=ai((()=>{if(t.value){const{xs:n,ys:s}=Ig(e,t.value),i=n.concat(s),u=ai((()=>r(i)));if(ii(i),0===l)for(let e=0;e<u.length;++e)a.push(ci(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=ai((()=>pi(a[e],go(c,t)))),l>0&&ii(n)}ii(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=_i(a[e],o),ii(t)}return Ep(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new wp(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new wp(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new wp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new bm;if(e instanceof lr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new wp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new wp(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=vm(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Np(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new wp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return ai((()=>{const s=this.checkNumSamples(e);if(n)throw new Ip("Verbose predictLoop() is not implemented yet.");const r=Eg(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)ai((()=>{const n=r[t][0],s=r[t][1],a=Cg(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new bm(i);return vm(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Ep(a.map((e=>Vi(e,0))))}))}predict(e,t={}){const n=Rg(e);Mg(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return Ng(s),this.predictLoop(n,s)}finally{Fg(n,e)}}predictOnBatch(e){Mg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new kp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Ym?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=Wp(e.map((e=>e.shape[0])));s.sort();const r=Wp(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new wp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new wp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!z(s,r))throw new wp(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Lg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Lg(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[Km,$m,Qm];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===Qm&&1===a.shape[a.shape.length-1])throw new wp(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new wp(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new wp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=vg(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await kg(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return ai((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Ip("Verbose mode is not implemented yet.");if(null!=r)throw new Ip("steps mode in testLoop() is not implemented yet");{const s=Eg(a,n),r=pl(ff(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=yf(r,a,o-a),u=Tg(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(ci(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=pi(i[e],go(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=_i(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;Tp(e,s)>1&&(r+=`_${Tp(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new bm(e),o=vm(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=wg(n,r[e]));const a=So(n);t.push(a),l=0===e?n:pi(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=So(t(s[r],o[r]))}oi(n),a.push(n)}return l=So(l),this.calculateLosses().forEach((e=>{l=pi(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ai((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new bm(a),o=vm(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=So(s(r[e],o[e]));n=0===e?a:pi(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=So(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,l,u,c,h,d;e.isTraining=!0;try{const p=null==s.batchSize?32:s.batchSize;Ng(p);const f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,p);r=m[0],a=m[1],d=m[2];let g,b=!1;if(null!=s.validationData&&s.validationData.length>0){if(b=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Ip("validationData including sample weights is not supported yet."):new wp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);l=s.validationData[0],u=s.validationData[1];const t=!0,n=await e.standardizeUserData(l,u,null,null,t,p);c=n[0],h=n[1],g=c.concat(h)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){b=!0;const e=Math.floor(r[0].shape[0]*(1-s.validationSplit)),t=r[0].shape[0];c=Cg(r,e,t),i=r,r=Cg(r,0,e),h=Cg(a,e,t),o=a,a=Cg(a,0,e),g=c.concat(h)}else null!=s.validationSteps&&(b=!0);const x=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let k,w;b?(e.makeTestFunction(),k=e.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(k=null,g=[],w=v.slice());const I=Gm(s.callbacks,s.yieldEvery),A=await async function(e,t,n,s,r,a,i,o,l,u,c,h,d,p,f){null==r&&(r=32),null==a&&(a=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,r,p,"steps_per_epoch");let b;null!=g&&(b=ff(0,g)),null==i&&(i=1);const{callbackList:x,history:y}=qm(o,i,a,d,g,p,r,m,h);x.setModel(e),e.history=y,await x.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<a;++i){await x.onEpochBegin(i);const a={};{if("batch"===c)throw new Ip("batch shuffling is not implemneted yet");c&&C(b);const i=pl(b),o=Eg(g,r);for(let c=0;c<o.length;++c){const h={};if(await x.onBatchBegin(c,h),ai((()=>{const d=o[c][0],p=o[c][1],f=yf(i,d,p-d);h.batch=c,h.size=p-d;const g=Tg(n,f),b=t(g);for(let e=0;e<s.length;++e){const t=s[e],n=b[e];h[t]=n,oi(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,r);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];oi(r),a["val_"+n]=r}}})),await x.onBatchEnd(c,h),Mm(h),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(i,a),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,y,x,v,p,s.epochs,s.verbose,I,k,g,s.shuffle,w,s.initialEpoch,null);return A}finally{e.isTraining=!1,Fg(r,t),Fg(a,n),Fg(i,t),Fg(o,n),Fg(c,l),Fg(h,u),null!=d&&ii(d)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(F(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),F(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),F(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),F(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),F(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Sg(n.validationData))F(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Ip("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Gm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=qm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=Ig(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=vg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await kg(r[e],null,t[e]))}const u=s.concat(r).concat(i),p=o(u);ii(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,oi(n)}await d.onBatchEnd(h,a),Mm(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Sg(n.validationData)?Rp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Rp(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return ii(a),Fg(n[0],e),Fg(n[1],t),Ep(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ri().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ri().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Fp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Fp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=Fp(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Fp(cg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Fp(cg(e))));{const e={};for(const t in this.metrics)e[t]=Fp(cg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=jm(bg(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=Dp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Dp(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Dp(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>Dp(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=Dp(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Qr.getSaveHandlers(n));if(0===t.length)throw new wp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new wp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new wp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Gr(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.16.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Gr(await this.optimizer.getWeights(),e);s.specs.push(...n),s.data=Xr([s.data,t])}if(null!=this.userDefinedMetadata){const e=!0;hg(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,e.save(r)}setUserDefinedMetadata(e){hg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}zg.className="Model",ni(zg);class Pg extends zg{}async function Wg(e,t){if(null==t&&(t={}),"string"==typeof e){const r=(n=e,s=t,Qr.getLoadHandlers(n,s));if(0===r.length)r.push(function(e,t){return Fa(e,t)}(e,t));else if(r.length>1)throw new wp(`Found more than one (${r.length}) load handlers for URL '${e}'`);e=r[0]}var n,s;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new wp("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=jm(bg(r),void 0,i),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new wp("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=M(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ur[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=Jr()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=M(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=Ur[i],a=e.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=Br(e,o,"float32"),i=Br(s,o,"float32");n[t]=Wr(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[t]=Br(u,o,i))}return n}(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),ii(e),ii(t.map((e=>e.tensor)))}return o}(e,0,t)}Pg.className="Functional",ni(Pg);class Vg extends zg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Zp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new wp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Vg||e instanceof zg;let n;if(t){if(n=e,1!==n.outputs.length)throw new wp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new wp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new wp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new wp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new gm({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new wp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new wp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=mm(this.outputs[0])}this.inboundNodes=[],new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Np(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(rm(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new kp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new kp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new kp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new kp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new wp("Legacy serialization format not supported yet.");r=t}else F(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Vg))throw new Ip(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=jm(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new wp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new wp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Bg(e,t){return null==t&&(t={}),Wg(e,t)}Vg.className="Sequential",ni(Vg);class Ug extends ei{getConfig(){return{}}}class Gg extends Ug{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Ip(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return eo(e)}(e,t)}}Gg.className="elu",ni(Gg);class Hg extends Ug{apply(e){return $o(e)}}Hg.className="selu",ni(Hg);class qg extends Ug{apply(e){return Qo(e)}}qg.className="relu",ni(qg);class jg extends Ug{apply(e){return ai((()=>No(6,Qo(e))))}}jg.className="relu6",ni(jg);class Xg extends Ug{apply(e){return e}}Xg.className="linear",ni(Xg);class Kg extends Ug{apply(e){return el(e)}}Kg.className="sigmoid",ni(Kg);class Zg extends Ug{apply(e){return function(e){return ai((()=>{const t=pi(.5,go(.2,e));return Wi(t,0,1)}))}(e)}}Zg.className="hardSigmoid",ni(Zg);class Jg extends Ug{apply(e){return ol(e)}}Jg.className="softplus",ni(Jg);class Qg extends Ug{apply(e){return function(e){return ai((()=>_i(e,pi(di(e),1))))}(e)}}Qg.className="softsign",ni(Qg);class Yg extends Ug{apply(e){return dl(e)}}Yg.className="tanh",ni(Yg);class $g extends Ug{apply(e,t=-1){return il(e,t)}}$g.className="softmax",ni($g);class _g extends Ug{apply(e,t=-1){return yo(e,t)}}_g.className="logSoftmax",ni(_g);class eb extends Ug{apply(e,t=1){return ai((()=>go(el(go(e,t)),e)))}}eb.className="swish",ni(eb);class tb extends Ug{apply(e){return ai((()=>go(e,dl(ol(e)))))}}function nb(e){return e.getClassName()}function sb(e,t={}){return zp(e,ti.getMap().classNameMap,t,"activation")}function rb(e){if(null==e){return sb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},sb(t)}return e instanceof Ug?e:sb(e)}tb.className="mish",ni(tb);class ab extends ei{}class ib extends ab{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ai((()=>{let t=Bo([1]);return this.hasL1&&(t=pi(t,xo(go(this.l1,di(e))))),this.hasL2&&(t=pi(t,xo(go(this.l2,Tf(e))))),Fi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}ib.className="L1L2",ni(ib);const ob={l1l2:"L1L2"};function lb(e){return Lp(e)}function ub(e,t={}){return zp(e,ti.getMap().classNameMap,t,"regularizer")}function cb(e){return null==e?null:"string"==typeof e?ub({className:e in ob?ob[e]:e,config:{}}):e instanceof ab?e:ub(e)}class hb extends fm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=sm(e);let n=Qo(e);return null!=this.maxValue&&(n=Wi(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}hb.className="ReLU",ni(hb);class db extends fm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=sm(e);return ho(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}db.className="LeakyReLU",ni(db);class pb extends fm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=em(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=cb(e.alphaRegularizer),this.alphaConstraint=Om(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new wp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=rm(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new um({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=sm(e),qo(e,this.alpha.read())}getConfig(){const e={alphaInitializer:_f(this.alphaInitializer),alphaRegularizer:lb(this.alphaRegularizer),alphaConstraint:Fm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}pb.className="PReLU",ni(pb);class fb extends fm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Ip(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=sm(e);return eo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}fb.className="ELU",ni(fb);class mb extends fm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=sm(e);return go(n,wa(uo(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}mb.className="ThresholdedReLU",ni(mb);class gb extends fm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new $g).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=sm(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function bb(e,t,n){if("number"==typeof e)return Np(e,t);if(e.length!==t)throw new wp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new wp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function xb(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function yb(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+pf([n-t,0]);else{if("same"!==s)throw new wp(`Unsupport padding mode: ${s}.`);e*=t}return e}function vb(e,t){return ai((()=>(tf(t),"channelsFirst"===t?yl(e,[0,2,3,1]):e)))}function kb(e,t){return ai((()=>(tf(t),"channelsFirst"===t?yl(e,[0,2,3,4,1]):e)))}function wb(e,t,n,s=[1,1],r="valid",a,i,o=null){return ai((()=>{if(null==a&&(a="channelsLast"),tf(a),3!==e.rank&&4!==e.rank)throw new wp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new wp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=vb(e,a);if("causal"===r)throw new Ip("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ll({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=yl(l,[0,3,1,2])),l}))}gb.className="Softmax",ni(gb);class Ib extends fm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ib.verifyArgs(t),this.rank=e,Gp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ip(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=bb(t.kernelSize,e,"kernelSize"),this.strides=bb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,nf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tf(this.dataFormat),this.activation=rb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=em(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Om(t.biasConstraint),this.biasRegularizer=cb(t.biasRegularizer),this.activityRegularizer=cb(t.activityRegularizer),this.dilationRate=bb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new wp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new wp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new wp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Cp("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Up(e.kernelSize,"number",1,3))throw new wp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:nb(this.activation),useBias:this.useBias,biasInitializer:_f(this.biasInitializer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),biasConstraint:Fm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ab extends Ib{constructor(e,t){super(e,t),this.kernel=null,Ab.verifyArgs(t),this.filters=t.filters,Gp(this.filters,"filters"),this.kernelInitializer=em(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Om(t.kernelConstraint),this.kernelRegularizer=cb(t.kernelRegularizer)}build(e){e=rm(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wp(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ai((()=>{let t;e=sm(e);const n=null==this.bias?null:this.bias.read(),s=qp(this.activation.getClassName());if(null!=s&&2===this.rank)t=wb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return ai((()=>{if(null==a&&(a="channelsLast"),tf(a),3!==e.shape.length)throw new wp(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new wp(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new wp(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=yl(e,[0,2,1])),"causal"===r)throw new Ip("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ji(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Rf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=wb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ip("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return ai((()=>{if(null==a&&(a="channelsLast"),tf(a),4!==e.rank&&5!==e.rank)throw new wp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new wp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=kb(e,a);if("causal"===r)throw new Ip("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Zi(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Rf(o,n)),"channelsFirst"===a&&(o=yl(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=rm(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=xb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:_f(this.kernelInitializer),kernelRegularizer:lb(this.kernelRegularizer),kernelConstraint:Fm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new wp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Sb extends Ab{constructor(e){super(2,e),Sb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Up(e.kernelSize,"number",1,2))throw new wp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Sb.className="Conv2D",ni(Sb);class Nb extends Ab{constructor(e){super(3,e),Nb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new wp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Nb.className="Conv3D",ni(Nb);class Cb extends Sb{constructor(e){if(super(e),this.inputSpec=[new um({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new wp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=rm(e)).length)throw new wp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new um({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ai((()=>{let t=sm(e);if(4!==t.shape.length)throw new wp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,yb(i,c,l,this.padding),yb(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=yl(t,[0,2,3,1]));let p=Ki(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=yl(p,[0,3,1,2])),null!=this.bias&&(p=Rf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=rm(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=yb(t[s],o,a,this.padding),t[r]=yb(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Cb.className="Conv2DTranspose",ni(Cb);class Tb extends Nb{constructor(e){if(super(e),this.inputSpec=[new um({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new wp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=rm(e)).length)throw new wp("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new um({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ai((()=>{let t=sm(e);if(5!==t.shape.length)throw new wp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],l=n[r],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,yb(o,p,c,this.padding),yb(l,f,h,this.padding),yb(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=yl(t,[0,2,3,4,1]));let b=Qi(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=yl(b,[0,4,1,2,3])),null!==this.bias&&(b=Rf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=rm(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=yb(t[s],u,i,this.padding),t[r]=yb(t[r],c,o,this.padding),t[a]=yb(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Tb.className="Conv3DTranspose",ni(Tb);class Eb extends Ab{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new wp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new wp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new wp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=em(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=cb(t.depthwiseRegularizer),this.depthwiseConstraint=Om(t.depthwiseConstraint),this.pointwiseInitializer=em(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=cb(t.pointwiseRegularizer),this.pointwiseConstraint=Om(t.pointwiseConstraint)}build(e){if((e=rm(e)).length<this.rank+2)throw new wp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new wp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new um({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ai((()=>{let t;if(e=sm(e),1===this.rank)throw new Ip("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=yl(e,[0,2,3,1])),t=_o(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Rf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=yl(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=_f(this.depthwiseInitializer),e.pointwiseInitializer=_f(this.pointwiseInitializer),e.depthwiseRegularizer=lb(this.depthwiseRegularizer),e.pointwiseRegularizer=lb(this.pointwiseRegularizer),e.depthwiseConstraint=Fm(this.depthwiseConstraint),e.pointwiseConstraint=Fm(this.pointwiseConstraint),e}}Eb.className="SeparableConv";class Rb extends Eb{constructor(e){super(2,e)}}Rb.className="SeparableConv2D",ni(Rb);class Fb extends Ab{constructor(e){super(1,e),Fb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Up(e.kernelSize,"number",1,1))throw new wp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Fb.className="Conv1D",ni(Fb);class Db extends fm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ai((()=>{if(e=sm(e),"channelsLast"===this.dataFormat){const t=kf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return kf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=kf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return kf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Db.className="Cropping2D",ni(Db);class Ob extends fm{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Bp(Qp,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ai((()=>{let t=sm(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=yl(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?Su.resizeNearestNeighbor(t,[e,s]):Su.resizeBilinear(t,[e,s]);return yl(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?Su.resizeNearestNeighbor(t,[e,s]):Su.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ob.className="UpSampling2D",ni(Ob);class Lb extends Ib{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=em(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Om(e.depthwiseConstraint),this.depthwiseRegularizer=cb(e.depthwiseRegularizer)}build(e){if((e=rm(e)).length<4)throw new wp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new wp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ai((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return ai((()=>{null==r&&(r="channelsLast"),tf(r);let i=vb(e,r);if(4!==e.rank)throw new wp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new wp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Yi(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=yl(i,[0,3,1,2])),i}))}(e=sm(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Rf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=rm(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=xb(t,this.kernelSize[0],this.padding,this.strides[0]),a=xb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=_f(this.depthwiseInitializer),e.depthwiseRegularizer=lb(this.depthwiseRegularizer),e.depthwiseConstraint=Fm(this.depthwiseRegularizer),e}}function Mb(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new wp("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function zb(e,t,n,s=!1,r,a,i=!1,o=!1){return ai((()=>{const l=t.shape.length;if(l<3)throw new wp(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(ff(2,l));if(t=yl(t,u),null!=a)throw new Ip("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=wa(wa(r,"bool"),"float32")).rank===l-1&&(r=so(r,-1)),r=yl(r,u)),s&&(t=Yo(t,0),null!=r&&(r=Yo(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=ml(t);let m,g;null!=r&&(m=ml(r));for(let t=0;t<p;++t){const n=f[t],s=ai((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=ai((()=>{const e=m[t],n=bo(Go(e),e);return{output:pi(go(s[0],e),go(d[0],n)),newStates:d.map(((t,r)=>pi(go(s[1][r],e),go(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=hl(c,1)),[h,g,d]}))}Lb.className="DepthwiseConv2D",ni(Lb);class Pb extends fm{constructor(e){let t;if(super(e),null==e.cell)throw new wp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new jb({cells:e.cell}):e.cell,null==t.stateSize)throw new wp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new um({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ff(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){tm(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return ai((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Ip("Constants support is not implemented in RNN yet.");tm(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new um({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!z(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new wp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new um({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){ai((()=>{if(!this.stateful)throw new vp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new wp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Bo([n,e]))):this.states_=[Bo([n,this.cell.stateSize])];else if(null==e)ii(this.states_),null!=this.keptStates&&(ii(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Bo([n,e]))):this.states_[0]=Bo([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new wp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ii(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!z(s.shape,a))throw new wp(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>oi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Mb(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new um({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof cm){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return ai((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=sm(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new wp(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=zb(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return ai((()=>{let t=Bo(e.shape);return t=xo(t,[1,2]),t=xf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Af(t,[1,e]):t)):this.cell.stateSize>1?[Af(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Pb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=jm(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Pb.className="RNN",ni(Pb);class Wb extends fm{}class Vb extends Wb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gp(this.units,"units"),this.activation=rb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=em(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=em(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=em(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cb(e.kernelRegularizer),this.recurrentRegularizer=cb(e.recurrentRegularizer),this.biasRegularizer=cb(e.biasRegularizer),this.kernelConstraint=Om(e.kernelConstraint),this.recurrentConstraint=Om(e.recurrentConstraint),this.biasConstraint=Om(e.biasConstraint),this.dropout=df([1,pf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=df([1,pf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=rm(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ai((()=>{if(2!==(e=e).length)throw new wp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xb({ones:()=>Go(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xb({ones:()=>Go(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=Nf(null!=a?go(e,a):e,this.kernel.read()),null!=this.bias&&(r=Rf(r,this.bias.read())),null!=i&&(n=go(n,i));let o=pi(r,Nf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nb(this.activation),useBias:this.useBias,kernelInitializer:_f(this.kernelInitializer),recurrentInitializer:_f(this.recurrentInitializer),biasInitializer:_f(this.biasInitializer),kernelRegularizer:lb(this.kernelRegularizer),recurrentRegularizer:lb(this.recurrentRegularizer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),kernelConstraint:Fm(this.kernelConstraint),recurrentConstraint:Fm(this.recurrentConstraint),biasConstraint:Fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Vb.className="SimpleRNNCell",ni(Vb);class Bb extends Pb{constructor(e){e.cell=new Vb(e),super(e)}call(e,t){return ai((()=>{null!=this.cell.dropoutMask&&(ii(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ii(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Bb.className="SimpleRNN",ni(Bb);class Ub extends Wb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new wp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Gp(this.units,"units"),this.activation=rb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=rb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=em(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=em(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=em(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cb(e.kernelRegularizer),this.recurrentRegularizer=cb(e.recurrentRegularizer),this.biasRegularizer=cb(e.biasRegularizer),this.kernelConstraint=Om(e.kernelConstraint),this.recurrentConstraint=Om(e.recurrentConstraint),this.biasConstraint=Om(e.biasConstraint),this.dropout=df([1,pf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=df([1,pf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=rm(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ai((()=>{if(2!==(e=e).length)throw new wp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xb({ones:()=>Go(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xb({ones:()=>Go(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=go(e,r[0]));let u=Nf(e,this.kernel.read());this.useBias&&(u=Rf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=go(s,a[0]));const c=this.recurrentKernel.read(),[h,d]=ll(c,[2*this.units,this.units],c.rank-1),p=Nf(s,h),[f,m,g]=ll(u,3,u.rank-1),[b,x]=ll(p,2,p.rank-1);i=this.recurrentActivation.apply(pi(f,b)),o=this.recurrentActivation.apply(pi(m,x));const y=Nf(go(o,s),d);l=this.activation.apply(pi(g,y));const v=pi(go(i,s),go(pi(1,Po(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nb(this.activation),recurrentActivation:nb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_f(this.kernelInitializer),recurrentInitializer:_f(this.recurrentInitializer),biasInitializer:_f(this.biasInitializer),kernelRegularizer:lb(this.kernelRegularizer),recurrentRegularizer:lb(this.recurrentRegularizer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),kernelConstraint:Fm(this.kernelConstraint),recurrentConstraint:Fm(this.recurrentConstraint),biasConstraint:Fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Ub.className="GRUCell",ni(Ub);class Gb extends Pb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ub(e),super(e)}call(e,t){return ai((()=>{null!=this.cell.dropoutMask&&(ii(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ii(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Gb.className="GRU",ni(Gb);class Hb extends Wb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gp(this.units,"units"),this.activation=rb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=rb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=em(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=em(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=em(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=cb(e.kernelRegularizer),this.recurrentRegularizer=cb(e.recurrentRegularizer),this.biasRegularizer=cb(e.biasRegularizer),this.kernelConstraint=Om(e.kernelConstraint),this.recurrentConstraint=Om(e.recurrentConstraint),this.biasConstraint=Om(e.biasConstraint),this.dropout=df([1,pf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=df([1,pf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=rm(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends Mf{apply(t,s){const r=e.apply([n]),a=(new Pf).apply([n]),i=e.apply([2*n]);return If(If(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ai((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new wp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xb({ones:()=>Go(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xb({ones:()=>Go(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=go(e,a[0]));let h=Nf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=go(s,i[0])),h=pi(h,Nf(s,this.recurrentKernel.read())),this.useBias&&(h=Rf(h,this.bias.read()));const[d,p,f,m]=ll(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=pi(go(l,r),go(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=go(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nb(this.activation),recurrentActivation:nb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_f(this.kernelInitializer),recurrentInitializer:_f(this.recurrentInitializer),biasInitializer:_f(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lb(this.kernelRegularizer),recurrentRegularizer:lb(this.recurrentRegularizer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),kernelConstraint:Fm(this.kernelConstraint),recurrentConstraint:Fm(this.recurrentConstraint),biasConstraint:Fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Hb.className="LSTMCell",ni(Hb);class qb extends Pb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hb(e),super(e)}call(e,t){return ai((()=>{null!=this.cell.dropoutMask&&(ii(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ii(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}qb.className="LSTM",ni(qb);class jb extends Wb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ai((()=>{let n=(e=e).slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;tm(e)&&(e=e[0]),e=e,this.cells.forEach(((n,s)=>{af(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(jm(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return om(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}lm(t)}}function Xb(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Ff(t(),n),o=()=>Df(i,t,s);return!r||r<=1?oi(o().clone()):Array(r).fill(void 0).map(o).map((e=>oi(e.clone())))}jb.className="StackedRNNCells",ni(jb);var Kb,Zb,Jb,Qb;class Yb extends Pb{constructor(e){if(e.unroll)throw new Ip("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ip("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new um({ndim:5})]}call(e,t){return ai((()=>{if(null!=this.cell.dropoutMask&&(ii(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ii(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new wp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ai((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=Bo([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){ai((()=>{if(!this.stateful)throw new vp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new wp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Bo(r))):this.states_=[Bo(r)];else if(null==e)ii(this.states_),null!=this.keptStates&&(ii(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Bo(r))):this.states_[0]=Bo(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new wp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ii(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!z(n.shape,s))throw new wp(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>oi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=xb(l,s[0],r,a[0],i[0]),h=xb(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Yb.className="ConvRNN2D";class $b extends Hb{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Gp(this.filters,"filters"),this.kernelSize=bb(n,2,"kernelSize"),this.kernelSize.forEach((e=>Gp(e,"kernelSize"))),this.strides=bb(s||1,2,"strides"),this.strides.forEach((e=>Gp(e,"strides"))),this.padding=r||"valid",nf(this.padding),this.dataFormat=a||"channelsLast",tf(this.dataFormat),this.dilationRate=bb(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Gp(e,"dilationRate")))}build(e){var t;e=rm(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new wp(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends Mf{apply(e,t){return wf([n.apply([s]),Uo([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ai((()=>{if(3!==e.length)throw new wp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xb({ones:()=>Go(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?go(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xb({ones:()=>Go(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[b,x,y,v]=ll(this.kernel.read(),4,3),[k,w,I,A]=this.useBias?ll(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,x,w,this.padding),c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,v,A,this.padding);const[S,N,C,T]=ll(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,N),m=this.recurrentConv(m,C),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(pi(l,p)),R=this.recurrentActivation.apply(pi(u,f)),F=pi(go(R,a),go(E,this.activation.apply(pi(c,m)))),D=go(this.recurrentActivation.apply(pi(h,g)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const r=qi(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Rf(r,n,this.dataFormat):r}recurrentConv(e,t){return qi(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}$b.className="ConvLSTM2DCell",ni($b);class _b extends Yb{constructor(e){const t=new $b(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}_b.className="ConvLSTM2D",ni(_b);class ex extends fm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ai((()=>{this.invokeCallHook(e,t);const n=sm(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return Df((()=>Ff(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ex.className="Dropout",ni(ex);class tx extends ex{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}tx.className="SpatialDropout1D",ni(tx);class nx extends fm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Gp(this.units,"units"),this.activation=rb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=em(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=em(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Om(e.kernelConstraint),this.biasConstraint=Om(e.biasConstraint),this.kernelRegularizer=cb(e.kernelRegularizer),this.biasRegularizer=cb(e.biasRegularizer),this.activityRegularizer=cb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=rm(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=rm(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ai((()=>{this.invokeCallHook(e,t);const n=sm(e),s=qp(this.activation.getClassName());let r;return null!=s?r=Nf(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Nf(n,this.kernel.read()),null!=this.bias&&(r=Rf(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:nb(this.activation),useBias:this.useBias,kernelInitializer:_f(this.kernelInitializer),biasInitializer:_f(this.biasInitializer),kernelRegularizer:lb(this.kernelRegularizer),biasRegularizer:lb(this.biasRegularizer),activityRegularizer:lb(this.activityRegularizer),kernelConstraint:Fm(this.kernelConstraint),biasConstraint:Fm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}nx.className="Dense",ni(nx);class sx extends fm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=rm(e);for(const t of e.slice(1))if(null==t)throw new wp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],hf(e,1)]}call(e,t){return ai((()=>{this.invokeCallHook(e,t);let n=sm(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=yl(n,e)}return function(e){if(e.rank<=1)throw new wp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],hf(e.shape,1)];return Fi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}sx.className="Flatten",ni(sx);class rx extends fm{constructor(e){super(e),this.supportsMasking=!0,this.activation=rb(e.activation)}call(e,t){return ai((()=>{this.invokeCallHook(e,t);const n=sm(e);return this.activation.apply(n)}))}getConfig(){const e={activation:nb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}rx.className="Activation",ni(rx);class ax extends fm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ai((()=>{return e=sm(e),t=e,n=this.n,ai((()=>{if(2!==t.shape.length)throw new wp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Af(xf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ax.className="RepeatVector",ni(ax);class ix extends fm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new wp("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=hf(e);if(null!==a){if(0===r||i%r!=0)throw new wp(n);s[a]=i/r}else if(i!==r)throw new wp(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ai((()=>{this.invokeCallHook(e,t);const n=sm(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return Fi(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ix.className="Reshape",ni(ix);class ox extends fm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ff(1,e.dims.length+1);if(!z(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new um({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=rm(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return yl(sm(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ox.className="Permute",ni(ox);class lx extends fm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=sm(e);return mi(Wo(n,this.maskValue),-1)}call(e,t){return ai((()=>{this.invokeCallHook(e,t);const n=sm(e),s=mi(Wo(n,this.maskValue),-1,!0);return go(n,wa(s,n.dtype))}))}}lx.className="Masking",ni(lx);class ux extends fm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Rp(e.inputLength))}this.inputDim=e.inputDim,Gp(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Gp(this.outputDim,"outputDim"),this.embeddingsInitializer=em(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=cb(e.embeddingsRegularizer),this.activityRegularizer=cb(e.activityRegularizer),this.embeddingsConstraint=Om(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ai((()=>this.maskZero?(e=sm(e),Wo(e,xl(e))):null))}computeOutputShape(e){if(e=rm(e),null==this.inputLength)return[...e,this.outputDim];const t=Rp(this.inputLength);if(t.length!==e.length-1)throw new wp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new wp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ai((()=>{this.invokeCallHook(e,t);let n=sm(e);"int32"!==n.dtype&&(n=bf(n,"int32"));const s=Cf(this.embeddings.read(),Fi(n,[n.size]));return Fi(s,rm(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:_f(this.embeddingsInitializer),embeddingsRegularizer:lb(this.embeddingsRegularizer),activityRegularizer:lb(this.activityRegularizer),embeddingsConstraint:Fm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ux.className="Embedding",ni(ux);class cx extends fm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ip}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new wp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[rm(e)]),(e=e).length<2)throw new wp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Wp(t),t.length>1)throw new wp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Wp(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ai((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=pf(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=xf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=Fi(s,[r].concat(hf(e.slice(1))));i=yl(i,[1,0]),i=Fi(i,a),t.push(i),n=!0}else if(e>1){const r=ff(1,e).concat([0]);t.push(yl(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=Fi(yl(Fi(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(ff(0,r-1));s=yl(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Wp(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ai((()=>{if(null==t)return null;if(!Array.isArray(t))throw new wp("`mask` should be an Array");if(!Array.isArray(e))throw new wp("`inputs` should be an Array");if(t.length!==e.length)throw new wp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:so(e,0))))[0];for(let e=1;e<t.length-1;++e)n=vo(n,t[e]);return n}))}}class hx extends cx{constructor(e){super(e)}mergeFunction(e){return ai((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pi(t,e[n]);return t}))}}hx.className="Add",ni(hx);class dx extends cx{constructor(e){super(e)}mergeFunction(e){return ai((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=go(t,e[n]);return t}))}}dx.className="Multiply",ni(dx);class px extends cx{constructor(e){super(e)}mergeFunction(e){return ai((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pi(t,e[n]);return go(1/e.length,t)}))}}px.className="Average",ni(px);class fx extends cx{constructor(e){super(e)}mergeFunction(e){return ai((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ao(t,e[n]);return t}))}}fx.className="Maximum",ni(fx);class mx extends cx{constructor(e){super(e)}mergeFunction(e){return ai((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=No(t,e[n]);return t}))}}mx.className="Minimum",ni(mx);class gx extends cx{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new wp("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(z(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new wp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ai((()=>wf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new wp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new wp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new wp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new wp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ai((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(wa(Go(e[n]),"bool")):t[n].rank<e[n].rank?s.push(so(t[n],-1)):s.push(t[n]);const r=Vi(s,this.axis);return fi(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function bx(e,t){for(;e<0;)e+=t;return e}gx.className="Concatenate",ni(gx);class xx extends cx{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){F(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Ip("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new wp(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new wp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>bx(t,e[n].shape.length))):[bx(this.axes,n.shape.length),bx(this.axes,s.shape.length)],this.normalize&&(n=Xm(n,t[0]),s=Xm(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Ip("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),F(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Ip("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return ai((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Fi(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=Fi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?xo(go(e,t),a[0]):xo(go(yl(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=ko(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=cl(i,t)}return 1===i.shape.length&&(i=so(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[bx(this.axes,e.length),bx(this.axes,t.length)],n}computeOutputShape(e){F(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Ip("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}xx.className="Dot",ni(xx);class yx extends fm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ai((()=>{this.invokeCallHook(e,t);const n=sm(e);return Df((()=>pi(Sf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}yx.className="GaussianNoise",ni(yx);class vx extends fm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ai((()=>{this.invokeCallHook(e,t);const n=sm(e);return this.rate>0&&this.rate<1?Df((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return go(n,Sf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}vx.className="GaussianDropout",ni(vx);class kx extends fm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||sm(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ai((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Df((()=>{const t=sm(e),s=-1.7580993408473766;let r=co(Jo(n),this.rate);r=bf(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=pi(go(t,r),go(pi(r,-1),s));return pi(go(o,a),i)}),(()=>sm(e)),t.training||!1)}return e}))}}function wx(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=Mi(e,t,n,s,r,a);else if(3===e.rank)i=zi(e,t,n,s,r,a);else{if(4!==e.rank)throw new Ip(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Pi(e,t,n,s,r,a)}return i}kx.className="AlphaDropout",ni(kx);class Ix extends fm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=em(e.betaInitializer||"zeros"),this.gammaInitializer=em(e.gammaInitializer||"ones"),this.movingMeanInitializer=em(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=em(e.movingVarianceInitializer||"ones"),this.betaConstraint=Om(e.betaConstraint),this.gammaConstraint=Om(e.gammaConstraint),this.betaRegularizer=cb(e.betaRegularizer),this.gammaRegularizer=cb(e.gammaRegularizer)}build(e){e=rm(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new wp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new um({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ai((()=>{const n=null!=t.training&&t.training,s=sm(e),r=s.shape,a=r.length,i=ff(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Np(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!z(u,ff(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Fi(this.movingMean.read(),l),t=Fi(this.movingVariance.read(),l),n=this.center?Fi(this.beta.read(),l):null,r=this.scale?Fi(this.gamma.read(),l):null;return wx(s,e,t,n,r,this.epsilon)}return wx(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,s,r=.001){return z(s.slice().sort(),ff(0,e.rank-1))?function(e,t,n,s,r=.001){return ai((()=>{const a=zo(e,s),i=a.mean,o=a.variance;return[wx(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return ai((()=>{const a=zo(e,s),i=a.mean,o=a.variance,l=[];for(const t of ff(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Fi(i,l),c=Fi(o,l),h=null==t?null:Fi(t,l),d=null==n?null:Fi(n,l);return[wx(e,u,c,d,h,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ai((()=>{const s=1-n,r=e.read(),a=go(bo(r,t),s);e.write(bo(r,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_f(this.betaInitializer),gammaInitializer:_f(this.gammaInitializer),movingMeanInitializer:_f(this.movingMeanInitializer),movingVarianceInitializer:_f(this.movingVarianceInitializer),betaRegularizer:lb(this.betaRegularizer),gammaRegularizer:lb(this.gammaRegularizer),betaConstraint:Fm(this.betaConstraint),gammaConstraint:Fm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ix.className="BatchNormalization",ni(Ix);class Ax extends fm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=em(e.betaInitializer||"zeros"),this.gammaInitializer=em(e.gammaInitializer||"ones"),this.betaRegularizer=cb(e.betaRegularizer),this.gammaRegularizer=cb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=rm(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Wp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=sm(e),s=n.shape,r=s.length;return ai((()=>{let{mean:e,variance:t}=zo(n,this.axis,!0);const a=Np(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r?Fi(e,a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=ro(e,u),t=ro(t,u),o=ro(o,c),l=ro(l,c),wx(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_f(this.betaInitializer),gammaInitializer:_f(this.gammaInitializer),betaRegularizer:lb(this.betaRegularizer),gammaRegularizer:lb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ax.className="LayerNormalization",ni(Ax);class Sx extends fm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new wp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new wp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new wp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new um({ndim:4})]}computeOutputShape(e){let t,n;return e=rm(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ai((()=>{return t=sm(e),n=this.padding,s=this.dataFormat,ai((()=>{if(4!==t.rank)throw new wp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new wp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new wp(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ho(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Nx(e,t,n,s,r,a){return ai((()=>{let i;tf(r),sf(a),nf(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=vb(e,r);const o="same"===s?"same":"valid";return i="max"===a?wo(e,t,n,o):Di(e,t,n,o),"channelsFirst"===r&&(i=yl(i,[0,3,1,2])),i}))}function Cx(e,t,n,s,r,a){return ai((()=>{let i;tf(r),sf(a),nf(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=kb(e,r);const o="same"===s?"same":"valid";return i="max"===a?Io(e,t,n,o):Oi(e,t,n,o),"channelsFirst"===r&&(i=yl(i,[0,4,1,2,3])),i}))}Sx.className="ZeroPadding2D",ni(Sx);class Tx extends fm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new wp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Gp(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new wp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Gp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,nf(this.padding),this.inputSpec=[new um({ndim:3})]}computeOutputShape(e){const t=xb((e=rm(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ai((()=>{this.invokeCallHook(e,t),e=xf(sm(e),2);const n=this.poolingFunction(sm(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return cl(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Ex extends Tx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tf(r),nf(s),Nx(e,t,n,s,r,"max")}}Ex.className="MaxPooling1D",ni(Ex);class Rx extends Tx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tf(r),nf(s),Nx(e,t,n,s,r,"avg")}}Rx.className="AveragePooling1D",ni(Rx);class Fx extends fm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new wp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Gp(this.poolSize,"poolSize"),Gp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tf(this.dataFormat),nf(this.padding),this.inputSpec=[new um({ndim:4})]}computeOutputShape(e){e=rm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=xb(t,this.poolSize[0],this.padding,this.strides[0]),n=xb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ai((()=>(this.invokeCallHook(e,t),this.poolingFunction(sm(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Dx extends Fx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tf(r),nf(s),Nx(e,t,n,s,r,"max")}}Dx.className="MaxPooling2D",ni(Dx);class Ox extends Fx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tf(r),nf(s),Nx(e,t,n,s,r,"avg")}}Ox.className="AveragePooling2D",ni(Ox);class Lx extends fm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new wp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Gp(this.poolSize,"poolSize"),Gp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tf(this.dataFormat),nf(this.padding),this.inputSpec=[new um({ndim:5})]}computeOutputShape(e){e=rm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=xb(t,this.poolSize[0],this.padding,this.strides[0]),n=xb(n,this.poolSize[1],this.padding,this.strides[1]),s=xb(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return ai((()=>(this.invokeCallHook(e,t),this.poolingFunction(sm(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Mx extends Lx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tf(r),nf(s),Cx(e,t,n,s,r,"max")}}Mx.className="MaxPooling3D",ni(Mx);class zx extends Lx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return tf(r),nf(s),Cx(e,t,n,s,r,"avg")}}zx.className="AveragePooling3D",ni(zx);class Px extends fm{constructor(e){super(e),this.inputSpec=[new um({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ip}}class Wx extends Px{constructor(e){super(e||{})}call(e,t){return ai((()=>{const t=sm(e);return So(t,1)}))}}Wx.className="GlobalAveragePooling1D",ni(Wx);class Vx extends Px{constructor(e){super(e||{})}call(e,t){return ai((()=>{const t=sm(e);return mo(t,1)}))}}Vx.className="GlobalMaxPooling1D",ni(Vx);class Bx extends fm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tf(this.dataFormat),this.inputSpec=[new um({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ip}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ux extends Bx{call(e,t){return ai((()=>{const t=sm(e);return"channelsLast"===this.dataFormat?So(t,[1,2]):So(t,[2,3])}))}}Ux.className="GlobalAveragePooling2D",ni(Ux);class Gx extends Bx{call(e,t){return ai((()=>{const t=sm(e);return"channelsLast"===this.dataFormat?mo(t,[1,2]):mo(t,[2,3])}))}}Gx.className="GlobalMaxPooling2D",ni(Gx);class Hx extends fm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=jm(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class qx extends Hx{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=rm(e)).length<3)throw new wp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=rm(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return ai((()=>zb(((e,n)=>[sm(this.layer.call(e,t)),[]]),e=sm(e),[],!1,null,null,!1,!0)[1]))}}qx.className="TimeDistributed",ni(qx);class jx extends Hx{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=jm(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=jm(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Bp(_p,"BidirectionalMergeMode",r),e.weights)throw new Ip("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),t=r[0]):t=r[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Ep(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Mb(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new wp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new um({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new Ip("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof cm;for(const e of a)if(e instanceof cm!==o)throw new wp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return ai((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Yo(r,1)),"concat"===this.mergeMode?i=wf([s,r]):"sum"===this.mergeMode?i=pi(s,r):"ave"===this.mergeMode?i=go(.5,pi(s,r)):"mul"===this.mergeMode?i=go(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){af(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),af(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=jm(t.layer);if(delete t.layer,null!=t.numConstants)throw new Ip("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}function Xx(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Qx(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=Xx(e[a],t,n,s);r[a]=i}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function Kx(e,t=Jx){return Zx(e,t)}function Zx(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Qx(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=Zx(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function Jx(e){return null===e?null:Qx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Qx(e){let t=!1;if(de().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(963);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof lr)&&!(e instanceof Promise)&&!t)}function Yx(e){return Xx(e,$x)}function $x(e){return e instanceof lr?{value:e.clone(),recurse:!1}:Qx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}jx.className="Bidirectional",ni(jx),de().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Kb||(Kb={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Zb||(Zb={}));class _x{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class ey extends _x{constructor(){super(ey.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}ey.INITIAL_CAPACITY=32;class ty{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new cy(this,e)}filter(e){return new ly(this,e)}map(e){return new uy(this,e)}mapAsync(e){return new hy(this,e)}serialMapAsync(e){return new hy(this,e).serial()}flatmap(e){return new py(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new oy(this,e,t)}columnMajorBatch(e,t=!0,n=Jx){return this.rowMajorBatch(e,t).map((e=>Kx(e,n)))}concatenate(e,t){return new fy(new ny([this,e]),t)}take(e){return e<0||null==e?this:new iy(this,e)}skip(e){return e<0||null==e?this:new ay(this,e)}prefetch(e){return new my(this,e)}shuffle(e,t){return new gy(this,e,t)}serial(){return new ry(this)}}class ny extends ty{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Yx(e),done:!1}}}class sy extends ty{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class ry extends ty{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ay extends ty{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ii(e.value)}return this.upstream.next()}}class iy extends ty{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class oy extends ty{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ly extends ty{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ii(e.value)}}}class uy extends ty{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=kr(e.value),n=this.transform(e.value),s=kr(n);for(const e of t)vr(e,s)||e.dispose();return{value:n,done:!1}}}class cy extends ty{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class hy extends ty{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=kr(e.value),n=await this.transform(e.value),s=kr(n);for(const e of t)vr(e,s)||e.dispose();return{value:n,done:!1}}}class dy extends ty{constructor(){super(),this.outputQueue=new ey,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class py extends dy{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=kr(e.value),n=this.transform(e.value),s=kr(n);this.outputQueue.pushAll(n);for(const e of t)vr(e,s)||e.dispose();return!0}}class fy extends ty{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Qb=Jb||(Jb={}))[Qb.FAIL=0]="FAIL",Qb[Qb.SHORTEST=1]="SHORTEST",Qb[Qb.LONGEST=2]="LONGEST";class my extends ty{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new _x(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class gy extends my{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=jo.alea(n||Ks().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class by{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return F(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),xy((async()=>(await n.iterator()).columnMajorBatch(e,t,yy)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,xy((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,xy((async()=>(await t.iterator()).filter((t=>ai((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return xy((async()=>(await t.iterator()).map((t=>ai((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return xy((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return xy((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,xy((async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new sy(r)).take(e),new fy(n,s);var n,s,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,xy((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=jo.alea(t||Ks().toString());return xy((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,xy((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function xy(e,t=null){return new class extends by{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function yy(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof lr||K(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof lr?hl(e):Br(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function vy(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&F("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}by.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const ky=Vc;class wy extends S{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new A(this,si())}nextDataId(){return wy.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,de().get("IS_NODE")&&ks("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&J(n[0])){const r=n.map((e=>Zs(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?ic(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ka(e.shape,e.dtype,n)}makeOutput(e,t,n){const s=this.write(e,t,n);return si().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ks();return e(),{kernelMs:Ks()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){vy([e],"where");const t=this.readSync(e.dataId);return ky(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Iy(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(vy(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=M(i.shape),c=n||i.dtype,h=j(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,h)}}function Ay(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(vy(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}wy.nextDataId=0,li("cpu",(()=>new wy),1);const Sy=Iy(pt,(e=>e>=0?e:Math.exp(e)-1)),Ny={kernelName:pt,backendName:"cpu",kernelFunc:Sy};function Cy(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Ty={kernelName:Rt,backendName:"cpu",kernelFunc:Cy};function Ey(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;vy([r],"leakyRelu");const i=M(r.shape),o=n.data.get(r.dataId).values,l=q("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const Ry={kernelName:zt,backendName:"cpu",kernelFunc:Ey};function Fy(e){return(t,n,s,r,a)=>{const i=La(t,n),o=i.length,l=ee(i),u=q(a,M(i)),c=t.length,h=n.length,d=ee(t),p=ee(n),f=Da(t,i),m=Da(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=le(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=oe(a,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=oe(g,h,p);u[t]=e(s[i],r[b])}return[u,i]}}const Dy=Fy(((e,t)=>e<0?t*e:e));function Oy(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;vy([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=Dy(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const Ly={kernelName:xn,backendName:"cpu",kernelFunc:Oy},My=Iy(In,(e=>Math.max(0,e))),zy={kernelName:In,backendName:"cpu",kernelFunc:My},Py=Iy(En,(e=>Math.min(Math.max(0,e),6))),Wy={kernelName:En,backendName:"cpu",kernelFunc:Py};function Vy(e){return(t,n,s)=>{const r=q(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const By=Vy((e=>1/(1+Math.exp(-e)))),Uy=Iy(Bn,(e=>1/(1+Math.exp(-e)))),Gy={kernelName:Bn,backendName:"cpu",kernelFunc:Uy};function Hy(e,t,n,s,r){if("linear"===n)return Cy({inputs:{x:t},backend:e});if("relu"===n)return My({inputs:{x:t},backend:e});if("elu"===n)return Sy({inputs:{x:t},backend:e});if("relu6"===n)return Py({inputs:{x:t},backend:e});if("prelu"===n)return Oy({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return Ey({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Uy({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function qy(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const jy={kernelName:Ge,backendName:"cpu",kernelFunc:qy};function Xy(e,t,n="float32"){if("complex64"===n)return qy({inputs:{real:Xy(e,t,"float32"),imag:Xy(e,t,"float32")},backend:e});const s=re(M(t),n);return e.makeTensorInfo(t,n,s)}function Ky(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const Zy={kernelName:kn,backendName:"cpu",kernelFunc:Ky};function Jy(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return Cy({inputs:{x:r},backend:n});const e=Xy(n,r.shape,r.dtype),t=Jy({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=qy({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=Ky({inputs:{input:r},backend:n}),t=Jy({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!X(r.dtype,a)){const e=Cy({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(r.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(r.shape,"int32",t)}if("bool"===a){const e=n.data.get(r.dataId).values,t=Xs([0],r.dtype),[s,a]=Fy(((e,t)=>e!==t?1:0))(r.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const Qy={kernelName:Ve,backendName:"cpu",kernelFunc:Jy};function Yy(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;vy([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?Pc(l):l,h="string"===a.dtype?Pc(u):u,d=s||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=Jy({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=Jy({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,x]=n(a.shape,i.shape,l,u,f,m),y=o.makeTensorInfo(x,"float32",g),v=o.makeTensorInfo(x,"float32",b),k=qy({inputs:{real:y,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(v),k}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function $y(e){return(t,n,s,r,a,i)=>{const o=La(t,n),l=M(o),u=o.length,c=ee(o),h=q("float32",l),d=q("float32",l),p=Da(t,o),f=Da(n,o),m=ic(s,r),g=ic(a,i),b=t.length,x=ee(t),y=n.length,v=ee(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,s=t%g.length,r=e(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[t]=r.real,d[t]=r.imag}else for(let t=0;t<h.length;t++){const n=le(t,u,c),s=n.slice(-b);p.forEach((e=>s[e]=0));const r=oe(s,b,x),a=n.slice(-y);f.forEach((e=>a[e]=0));const i=oe(a,y,v),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const _y=Fy(((e,t)=>e+t)),ev=$y(((e,t,n,s)=>({real:e+n,imag:t+s}))),tv=Yy(ve,_y,ev),nv={kernelName:ve,backendName:"cpu",kernelFunc:tv};function sv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=M(r.shape),o=U(a,i),l=M(o);F(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const rv={kernelName:An,backendName:"cpu",kernelFunc:sv};function av(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;vy([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=M(f),b=M(m),x=La(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);F(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const y=o?[b,p,h]:[b,h,p],v=sv({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),k=sv({inputs:{x:a},backend:n,attrs:{shape:y}}),w=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],A=o?k.shape[1]:k.shape[2],S=Math.max(g,b),N=n.data.get(v.dataId).values,C=n.data.get(k.dataId).values,T=ee(v.shape),E=ee(k.shape),[R,D,O]=i?[T[0],1,T[1]]:[T[0],T[1],1],[L,z,P]=o?[1,E[1],E[0]]:[E[1],1,E[0]],W=I*A,V=ka([S,I,A],v.dtype),B=V.values,U=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<I;t+=U)for(let n=0;n<A;n+=U)for(let s=0;s<w;s+=U){const r=Math.min(t+U,I),a=Math.min(n+U,A),i=Math.min(s+U,w);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,g-1)*R,a=Math.min(e,b-1)*P;n+=N[s+o*D+r*O]*C[r*L+t*z+a]}B[e*W+(o*A+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,V.dtype,V.values)}const iv={kernelName:Me,backendName:"cpu",kernelFunc:av},ov={kernelName:xs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=av({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=tv({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=Hy(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function lv(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const uv={kernelName:be,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;vy(t,"abs");let s=new Float32Array(M(t.shape));return s=lv(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},cv=Iy(xe,(e=>Math.acos(e))),hv={kernelName:xe,backendName:"cpu",kernelFunc:cv},dv=Iy(ye,(e=>Math.acosh(e))),pv={kernelName:ye,backendName:"cpu",kernelFunc:dv},fv={kernelName:ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;vy(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=ka(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function mv(e,t,n,s,r){const a=t.length,i=M(t),o=ee(t),l=ee(r),u=q(n,M(r));for(let t=0;t<i;++t){const n=le(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[oe(r,a,l)]=e[t]}return u}function gv(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;vy(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=mv(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const bv={kernelName:cs,backendName:"cpu",kernelFunc:gv},xv={kernelName:we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;vy(r,"all");const o=G(a,r.shape);let l=o;const u=Do(l,r.shape.length);let c=r;null!=u&&(c=gv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Lo(l.length,r.shape.length)),Fo("all",l,c.shape.length);const[h,d]=Eo(c.shape,l),p=M(d),f=re(M(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=sv({inputs:{x:g},backend:n,attrs:{shape:Ro(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},yv={kernelName:Ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;vy(r,"any");const o=G(a,r.shape);let l=o;const u=Do(l,r.shape.length);let c=r;null!=u&&(c=gv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Lo(l.length,r.shape.length)),Fo("any",l,c.shape.length);const[h,d]=Eo(c.shape,l),p=M(d),f=re(M(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=sv({inputs:{x:g},backend:n,attrs:{shape:Ro(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},vv={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;vy(r,"argMax");let i=G(a,r.shape);const o=Do(i,r.shape.length);let l=r;const u=[];null!=o&&(l=gv({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Lo(i.length,l.shape.length)),i=[i[0]],Fo("argMax",i,l.shape.length);const[c,h]=Eo(l.shape,i),d=re(M(c),"int32"),p=M(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r>n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},kv={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;vy(r,"argMin");let i=G(a,r.shape);const o=Do(i,r.shape.length);let l=r;const u=[];null!=o&&(l=gv({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Lo(i.length,l.shape.length)),i=[i[0]],Fo("argMin",i,l.shape.length);const[c,h]=Eo(l.shape,i),d=re(M(c),"int32"),p=M(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r<n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},wv=Iy(Ne,(e=>Math.asin(e))),Iv={kernelName:Ne,backendName:"cpu",kernelFunc:wv},Av=Iy(Ce,(e=>Math.asinh(e))),Sv={kernelName:Ce,backendName:"cpu",kernelFunc:Av},Nv=Iy(Te,(e=>Math.atan(e))),Cv={kernelName:Te,backendName:"cpu",kernelFunc:Nv},Tv=Fy(((e,t)=>Math.atan2(e,t))),Ev=Yy(Re,Tv),Rv={kernelName:Re,backendName:"cpu",kernelFunc:Ev},Fv=Iy(Ee,(e=>Math.atanh(e))),Dv={kernelName:Ee,backendName:"cpu",kernelFunc:Fv};function Ov(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ka(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*b,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let b=0;b<r.outHeight;++b){const v=b*i-d,k=Math.max(0,v),w=Math.min(r.inHeight,c+v),I=n+b*x;for(let n=0;n<r.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(r.inWidth,h+i);let b=f,x=0,v=0;for(let n=k;n<w;n+=l){const r=m+n*s[1];for(let n=c;n<d;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(x+=i,v++)}if(isNaN(b))break}g[I+n*y+t]="avg"===a?x/v:b}}}return m}function Lv(e,t,n,s,r=!1,a=!1){const i=ka(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=ka(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const x=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const y=Math.min(s.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,k=-1;for(let n=b;n<x;n+=u){const i=n-g;for(let o=p;o<y;o+=c){const l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,k=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*d+l)}}i.set(k,e,n,o,t)}}return i}function Mv(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ka(r.outShape,n),v=y.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],w=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],A=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*k,y=t*s[0];for(let t=0;t<r.inChannels;++t)for(let k=0;k<r.outDepth;++k){const S=k*i-m;let N=S;for(;N<0;)N+=u;const C=Math.min(r.inDepth,d+S),T=n+k*w;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(r.inHeight,p+i),k=T+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+i),g=k+n*A;let w=x,I=0,S=0;for(let n=N;n<C;n+=u){const r=y+n*s[1];for(let n=d;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<p;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>w?w=r:"avg"===a&&(I+=r,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}v[g+t]="avg"===a?I/S:w}}}}return y}const zv={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;vy(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;F(Ti(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=xi(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&z(u.inShape,u.outShape))c=Cy({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ee(r.shape),s=Ov(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},Pv={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;vy(r,"avgPool3d");const c=yi(r.shape,a,i,1,o,l,u),h=Mv(n.data.get(r.dataId).values,r.shape,r.dtype,ee(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Wv={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;vy([r,a],"avgPool3DGrad");const c=yi(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,k=c.effectiveFilterHeight,w=c.effectiveFilterWidth,I=v-1-c.padInfo.front,A=w-1-c.padInfo.left,S=k-1-c.padInfo.top,N=ka(a.shape,"float32"),C=1/(f*m*g),T=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-S,o=r-A;let l=0;for(let n=0;n<v;n+=b){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const r=(i+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=T.get(e,s,r,a,t))}}}N.set(l*C,e,n,s,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Vv={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;vy([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=xi(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,v=b-1-c.padInfo.top,k=ka(i.shape,"float32"),w=1/(p*f),I=n.data.get(r.dataId).values,A=ka(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-v,a=s-y;let i=0;for(let n=0;n<b;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<x;n+=g){const r=(a+n)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=A.get(e,s,r,t))}}k.set(i*w,e,n,s,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},Bv={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;F(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),vy([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,b=p.length,x=d.length,y=h.length;let v=0,k=0,w=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[k++])*p[w++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),k>=y&&(k=0),w>=b&&(w=0),I>=x&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function Uv(e,t,n,s,r){const a=Ja(s,t,n),i=M(n),o=ee(s);if(a){const n=Qa(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=ka(s,r,"string"===r?Pc(e):e),u=ka(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?Wc(u.values):u.values}function Gv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;vy(r,"slice");const[o,l]=Ya(r,a,i);Pa(r,o,l);const u=Uv(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Hv={kernelName:zn,backendName:"cpu",kernelFunc:Gv},qv={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;vy([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Hu(r.shape,a,o),u=qu(l.length,a.length),c=ju(r.shape,a,o),h=Xu(i,a.length),d=Ku(c,i,a.length),p=sv({inputs:{x:r},backend:n,attrs:{shape:l}}),f=gv({inputs:{x:p},backend:n,attrs:{perm:u}}),m=sv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Gv({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function jv(e,t,n,s,r){const a=M(s),i=re(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function Xv(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=ka([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const Kv={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=jv(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},Zv={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=La(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Jv=Vy((e=>Math.ceil(e))),Qv=Ay(Be,Jv),Yv={kernelName:Be,backendName:"cpu",kernelFunc:Qv},$v=Iy(Ue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),_v={kernelName:Ue,backendName:"cpu",kernelFunc:$v},ek={kernelName:He,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(M(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function tk(e,t,n,s){const r=j(n,M(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=M(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?Pc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function nk(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const sk={kernelName:Dt,backendName:"cpu",kernelFunc:nk};function rk(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=G(r,t[0].shape)[0];let i=Vu(t.map((e=>e.shape)),a);if(0===M(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>M(e.shape)>0));if(1===o.length)return Cy({inputs:{x:o[0]},backend:n});if(Wu(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>Ky({inputs:{input:e},backend:n}))),t=o.map((e=>nk({inputs:{input:e},backend:n}))),s=rk({inputs:e,backend:n,attrs:{axis:a}}),r=rk({inputs:t,backend:n,attrs:{axis:a}}),i=qy({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=M(e.shape.slice(a));return sv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Vu(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=tk(u,i,t[0].dtype,c),d=Vu(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const ak={kernelName:qe,backendName:"cpu",kernelFunc:rk};function ik(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;vy([r,a],"conv2d");const h=Ei(l),d=vi(r.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,v=new rr(d.outShape,r.dtype),k=ee(r.shape),w=ee(a.shape),I=k[0],A=y?k[1]:k[2],S=y?k[2]:1,N=y?1:k[1],C=v.strides[0],T=y?v.strides[1]:v.strides[2],E=y?v.strides[2]:1,R=y?1:v.strides[1],F=n.data.get(r.dataId).values,D=n.data.get(a.dataId).values,O=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<d.outHeight;++e){const s=n+e*T,r=e*d.strideHeight-x;for(let e=0;e<p;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const a=e*w[0],i=t+n*A;for(let e=0;e<d.outWidth;++e){const t=s+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=d.inWidth)continue;const r=i+s*S;let o=a+e*w[1];for(let e=0;e<d.inChannels;++e){const n=F[r+e*N];for(let e=0;e<d.outChannels;++e)O[t+e*R]+=n*D[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,O)}const ok={kernelName:je,backendName:"cpu",kernelFunc:ik},lk={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;vy([r,a],"conv2dBackpropFilter");const h=Ei(l),d=vi(r.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,x=new rr(d.filterShape,"float32"),y=d.padInfo.left,v=d.padInfo.top,k=n.data.get(r.dataId).values,w=n.data.get(a.dataId).values,I=new rr(r.shape,r.dtype,k),A=new rr(a.shape,a.dtype,w);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((y-s)/f)),a=Math.min(d.outWidth,(d.inWidth+y-s)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=r;e<a;++e){const n=s+e*f-y;l+=b?I.get(u,t,n,i)*A.get(u,c,e,o):I.get(u,i,t,n)*A.get(u,o,c,e)}}x.set(l,e,s,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},uk={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;vy([r,a],"conv2dBackpropInput");const h=ee(a.shape),d=ee(r.shape);let p=Ei(u);const f=vi(i,a.shape,o,1,l,c,!1,p),m=new rr(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[y,v,k]=h,{batchSize:w,filterHeight:I,filterWidth:A,inChannels:S,inHeight:N,inWidth:C,outChannels:T,outHeight:E,outWidth:R,strideHeight:F,strideWidth:D}=f;p=f.dataFormat;const O=I-1-f.padInfo.top,L=A-1-f.padInfo.left,M="channelsLast"===p,z=m.strides[0],P=M?m.strides[1]:m.strides[2],W=M?m.strides[2]:1,V=M?1:m.strides[1],B=d[0],U=M?d[1]:d[2],G=M?d[2]:1,H=M?1:d[1];for(let e=0;e<w;++e)for(let t=0;t<S;++t)for(let n=0;n<N;++n){const s=n-O,r=Math.max(0,Math.ceil(s/F)),a=Math.min(E,(I+s)/F);for(let i=0;i<C;++i){const o=i-L,l=Math.max(0,Math.ceil(o/D)),u=Math.min(R,(A+o)/D);let c=0;for(let n=r;n<a;++n){const r=n*F-s;for(let s=l;s<u;++s){const a=B*e+U*n+G*s,i=y*(I-1-r)+v*(A-1-(s*D-o))+k*t;for(let e=0;e<T;++e)c+=b[a+H*e]*x[i+e]}}g[z*e+P*n+W*i+V*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},ck={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;vy([r,a],"conv3d");const u=ki(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,x=g.left,y=g.top,v=new rr(u.outShape,r.dtype),k=n.data.get(r.dataId).values,w=n.data.get(a.dataId).values,I=v.values,A=ee(r.shape),S=ee(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*A[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*v.strides[1],r=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=r+e*p;if(n<0||n>=u.inDepth)continue;const a=e*S[0],i=t+n*A[1];for(let e=0;e<u.outHeight;++e){const t=s+e*v.strides[2],n=e*u.strideHeight-y;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*S[1],o=i+s*A[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-x;for(let e=0;e<d;++e){const t=s+e*m;if(t<0||t>=u.inWidth)continue;const a=r+e*S[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=k[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*w[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},hk={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;vy([r,a],"conv3dBackpropFilterV2");const u=ee(r.shape),c=ee(a.shape),h=ki(r.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,x=new rr(h.filterShape,"float32"),y=x.values,[v,k,w,I]=x.strides,A=n.data.get(a.dataId).values,[S,N,C,T]=c,E=n.data.get(r.dataId).values,[R,F,D,O]=u,L=h.padInfo.front,M=h.padInfo.left,z=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((L-e)/d)),n=Math.min(h.outDepth,(h.inDepth+L-e)/d),s=e*v;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((z-r)/p)),i=Math.min(h.outHeight,(h.inHeight+z-r)/p),o=r*k+s;for(let s=0;s<b;++s){const l=Math.max(0,Math.ceil((M-s)/f)),u=Math.min(h.outWidth,(h.inWidth+M-s)/f),c=s*w+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,b=m*S;for(let m=t;m<n;++m){const t=(e+m*d-L)*F+h,n=m*N+b;for(let e=a;e<i;++e){const a=(r+e*p-z)*D+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*T+i;g+=E[(s+e*f-M)*O+a+o]*A[t+c]}}}}y[m+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},dk={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;vy([r],"conv3dBackpropInputV2");const u=ee(r.shape),c=ee(a.shape),h=ki(l,a.shape,o,1,i),d=new rr(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,x=n.data.get(r.dataId).values,[y,v,k,w]=u,I=n.data.get(a.dataId).values,[A,S,N,C]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:F,inChannels:D,inDepth:O,inHeight:L,inWidth:M,outChannels:z,outDepth:P,outHeight:W,outWidth:V,strideDepth:B,strideHeight:U,strideWidth:G}=h,H=E-1-h.padInfo.front,q=R-1-h.padInfo.top,j=F-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<D;++t)for(let n=0;n<O;++n){const s=n-H,r=Math.max(0,Math.ceil(s/B)),a=Math.min(P,(E+s)/B);for(let i=0;i<L;++i){const o=i-q,l=Math.max(0,Math.ceil(o/U)),u=Math.min(W,(R+o)/U);for(let c=0;c<M;++c){const h=c-j,d=Math.max(0,Math.ceil(h/G)),T=Math.min(V,(F+h)/G);let D=0;for(let n=r;n<a;++n){const r=n*B-s;for(let s=l;s<u;++s){const a=s*U-o;for(let i=d;i<T;++i){const o=y*e+v*n+k*s+w*i,l=A*(E-1-r)+S*(R-1-a)+N*(F-1-(i*G-h))+C*t;for(let e=0;e<z;++e)D+=x[o+e]*I[l+e]}}}p[f*e+m*n+g*i+b*c+t]=D}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},pk=Iy(Ye,(e=>Math.cos(e))),fk={kernelName:Ye,backendName:"cpu",kernelFunc:pk},mk=Iy($e,(e=>Math.cosh(e))),gk={kernelName:$e,backendName:"cpu",kernelFunc:mk},bk={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[m,g]=o,b=ka([f,m,g,p],"float32"),x=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,k=ee(r.shape),w=ee(b.shape);for(let e=0;e<f;e++){const t=4*e,n=x[t],s=x[t+1],r=x[t+2],a=x[t+3],i=y[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<p;s++){const r=s+n*w[2]+t*w[1]+e*w[0];b.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(d-1)+l*f:.5*(s+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const s=n+l*w[2]+t*w[1]+e*w[0];b.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),x=c-h;for(let s=0;s<p;s++){let a=s+h*k[2]+n*k[1]+i*k[0];const u=v[a];a=s+m*k[2]+n*k[1]+i*k[0];const c=v[a];a=s+h*k[2]+r*k[1]+i*k[0];const d=v[a];a=s+m*k[2]+r*k[1]+i*k[0];const p=u+(c-u)*x,f=d+(v[a]-d)*x;a=s+l*w[2]+t*w[1]+e*w[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(d-1)+n*f:.5*(s+a)*(d-1);if(r<0||r>d-1){for(let s=0;s<p;s++){const r=s+n*w[2]+t*w[1]+e*w[0];b.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<p;s++){const r=s+o*k[2]+l*k[1]+i*k[0],a=s+n*w[2]+t*w[1]+e*w[0];b.values[a]=v[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},xk={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;vy(r,"cumprod");const l=Do([a],r.shape.length);let u=r;null!=l&&(u=gv({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Lo(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=br(u.dtype,"int32"),d=se(M(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const s=m(e,t-1);d[n]=i?p[s]*d[s]:p[n]*d[s]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=gv({inputs:{x:g},backend:n,attrs:{perm:Oo(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},yk={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;vy(r,"cumsum");const l=Do([a],r.shape.length);let u=r;null!=l&&(u=gv({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Lo(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=br(u.dtype,"int32"),d=re(M(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const s=m(e,t-1);d[n]=i?p[s]+d[s]:p[n]+d[s]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=gv({inputs:{x:g},backend:n,attrs:{perm:Oo(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},vk={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=jv(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=Xv(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},kk={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;F("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<d;++t){const r=Math.floor(t/a),i=(s*a+t%a)*p;for(let t=0;t<p;++t){const s=t+i+c*(r+u*(n+l*e));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,m)}};function wk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;vy([r,a],"depthwiseConv2DNative");const c=ee(r.shape),h=ee(a.shape);let d=l;null==d&&(d=[1,1]),F(Ti(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=vi(r.shape,a.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:x}=p,y=x.left,v=x.top,k=p.outChannels/p.inChannels,w=new rr(p.outShape,r.dtype),I=n.data.get(r.dataId).values,A=n.data.get(a.dataId).values,S=w.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*w.strides[0];for(let e=0;e<p.outHeight;++e){const s=n+e*w.strides[1],r=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*w.strides[2],n=e*p.strideWidth-y;for(let e=0;e<m;++e){const s=n+e*b;if(s<0||s>=p.inWidth)continue;const r=a+e*h[1],o=i+s*p.inChannels;let l=t,u=r;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<k;++e)S[l+e]+=t*A[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const Ik={kernelName:rt,backendName:"cpu",kernelFunc:wk},Ak={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;vy([r,a],"depthwiseConv2dNativeBackpropFilter");const h=vi(r.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new rr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,k=new rr(r.shape,r.dtype,v),w=n.data.get(a.dataId).values,I=new rr(a.shape,a.dtype,w);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(h.outHeight,(h.inHeight+x-e)/d);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((b-s)/p)),a=Math.min(h.outWidth,(h.inWidth+b-s)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/y),l=i%y;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=r;e<a;++e){const n=s+e*p-b;u+=k.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Sk={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;vy([r,a],"depthwiseConv2DNativeBackpropInput");const h=ee(r.shape),d=ee(a.shape),p=vi(c,a.shape,i,o,l,u,!0),f=new rr(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=n.data.get(r.dataId).values,[v,k,w]=h,I=n.data.get(a.dataId).values,[A,S,N]=d,{batchSize:C,filterHeight:T,filterWidth:E,inChannels:R,inHeight:F,inWidth:D,outChannels:O,outHeight:L,outWidth:M,strideHeight:z,strideWidth:P}=p,W=T-1-p.padInfo.top,V=E-1-p.padInfo.left,B=O/R;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const s=n-W,r=Math.max(0,Math.ceil(s/z)),a=Math.min(L,(T+s)/z);for(let i=0;i<D;++i){const o=i-V,l=Math.max(0,Math.ceil(o/P)),u=Math.min(M,(E+o)/P);let c=0;for(let n=r;n<a;++n){const r=n*z-s;for(let s=l;s<u;++s){const a=v*e+k*n+w*s,i=A*(T-1-r)+S*(E-1-(s*P-o))+N*t;for(let e=0;e<B;++e)c+=y[a+(t*B+e)]*I[i+e]}}m[g*e+b*n+x*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Nk={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=M(s.shape),a=n.data.get(s.dataId).values,i=ka([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Ck={kernelName:lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:v,strideWidth:k,filterHeight:w,filterWidth:I,dilationHeight:A,dilationWidth:S,outShape:N}=bi(s.shape,r.shape,a,i,"NHWC",o),C=M(N),T=N.length,E=j(s.dtype,C);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-y.top;for(let a=0;a<x;++a){const i=a*k-y.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<w;++t){const a=n+t*A;if(a>=0&&a<f)for(let n=0;n<I;++n){const p=i+n*S;if(p>=0&&p<m){const i=oe([e,a,p,o],c,ee(s.shape)),f=oe([t,n,o],d,ee(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}E[oe([e,t,a,o],T,ee(N))]=l}}}return{dataId:l.write(Xs(E,s.dtype),N,s.dtype),shape:N,dtype:s.dtype}}},Tk={kernelName:ct,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=ne(s.shape,u.data.get(s.dataId).values),h=ne(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:y,strideWidth:v,filterHeight:k,filterWidth:w,dilationHeight:I,dilationWidth:A,outShape:S}=bi(s.shape,r.shape,i,o,"NHWC",l);F(a.rank===S.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const N=ne(S,u.data.get(a.dataId).values),C=ae(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*y-x.top;for(let s=0;s<b;++s){const r=s*v-x.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<k;++t){const s=n+t*I;if(s>=0&&s<p)for(let n=0;n<w;++n){const u=r+n*A;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=t,l=n)}}}C[o][l][a]+=N[e][t][s][a]}}}return{dataId:u.write(Xs(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Ek={kernelName:ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=ne(s.shape,u.data.get(s.dataId).values),h=ne(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:y,strideWidth:v,filterHeight:k,filterWidth:w,dilationHeight:I,dilationWidth:A,outShape:S}=bi(s.shape,r.shape,i,o,"NHWC",l);F(a.rank===S.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const N=ne(S,u.data.get(a.dataId).values),C=ae(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*y-x.top;for(let s=0;s<b;++s){const r=s*v-x.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<k;++t){const s=n+t*I;if(s>=0&&s<p)for(let n=0;n<w;++n){const u=r+n*A;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=s,l=u)}}}C[e][o][l][a]+=N[e][t][s][a]}}}return{dataId:u.write(Xs(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Rk=Fy(((e,t)=>e*t)),Fk=$y(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),Dk=Yy(on,Rk,Fk),Ok={kernelName:on,backendName:"cpu",kernelFunc:Dk};function Lk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;vy(r,"sum"),o="bool"===r.dtype?Jy({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Cy({inputs:{x:r},backend:n});const l=o.shape.length,u=G(a,o.shape),c=Do(u,l);let h=u,d=o;null!=c&&(d=gv({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Lo(h.length,l)),Fo("sum",h,d.shape.length);const[p,f]=Eo(d.shape,h);let m=Xy(n,p,br(d.dtype,"int32"));const g=M(f),b=n.data.get(m.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=x[t+e];b[e]=n}if(i){const e=m;m=sv({inputs:{x:m},backend:n,attrs:{shape:Ro(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const Mk={kernelName:Hn,backendName:"cpu",kernelFunc:Lk},zk={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=mc(r,a.length);bc(i.length,l,a);const{path:u,steps:c}=xc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=gc(p,l[t]);let r;yc(e)?r=a[t]:(r=gv({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);z(r.shape,i)||(r=sv({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=Dk({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=Lk({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Pk={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;vy([s,r],"eluGrad");const a=new Float32Array(M(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},Wk=Fy(((e,t)=>e===t?1:0)),Vk=Yy(gt,Wk,null,"bool"),Bk={kernelName:gt,backendName:"cpu",kernelFunc:Vk},Uk=ec,Gk=tc,Hk=nc,qk=sc,jk=rc,Xk=ac,Kk=Iy(mt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+Uk*n);return t*(1-((((Xk*s+jk)*s+qk)*s+Hk)*s+Gk)*s*Math.exp(-n*n))})),Zk={kernelName:mt,backendName:"cpu",kernelFunc:Kk},Jk=Vy((e=>Math.exp(e))),Qk=Ay(bt,Jk,"float32"),Yk={kernelName:bt,backendName:"cpu",kernelFunc:Qk};function $k(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(F(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),sv({inputs:{x:r},backend:n,attrs:{shape:o}})}const _k={kernelName:xt,backendName:"cpu",kernelFunc:$k},ew=Vy((e=>Math.expm1(e))),tw=Ay(yt,ew),nw={kernelName:yt,backendName:"cpu",kernelFunc:tw},sw=Fy(((e,t)=>e/t)),rw=Yy(ht,sw),aw={kernelName:ht,backendName:"cpu",kernelFunc:rw},iw=Fy(((e,t)=>e-t)),ow=$y(((e,t,n,s)=>({real:e-n,imag:t-s}))),lw=Yy(rs,iw,ow),uw={kernelName:rs,backendName:"cpu",kernelFunc:lw};function cw(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=M(u),h=q("float32",c),d=q("float32",c);for(let e=0;e<r;e++){const s=Gv({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=Gv({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=qy({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=hw(i,t,n),p=ic(u,c);for(let t=0;t<a;t++){const n=cc(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=qy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function hw(e,t,n){const s=M(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=dw(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",js(s,"float32")),i=Cy({inputs:{x:a},backend:n}),l=aw.kernelFunc({inputs:{a:e,b:a},backend:n}),u=aw.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=pc(r*s,t,n),l=cc(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),hc(s,a,i,r)}return s}(ic(a,i),s,t);return oc(e)}var o}function dw(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=ic(e,t),i=n/2,o=lc(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=qy({inputs:{real:h,imag:d},backend:r}),f=uc(a),m=f.real,g=f.imag,b=[m.length],x=r.makeTensorInfo(b,"float32",m),y=r.makeTensorInfo(b,"float32",g),v=qy({inputs:{real:x,imag:y},backend:r}),k=dw(l,u,i,s,r),w=k.real,I=k.imag,A=[w.length],S=r.makeTensorInfo(A,"float32",w),N=r.makeTensorInfo(A,"float32",I),C=qy({inputs:{real:S,imag:N},backend:r}),T=dw(m,g,i,s,r),E=T.real,R=T.imag,F=[E.length],D=r.makeTensorInfo(F,"float32",E),O=r.makeTensorInfo(F,"float32",R),L=qy({inputs:{real:D,imag:O},backend:r}),M=dc(n,s),z=[M.real.length],P=r.makeTensorInfo(z,"float32",M.real),W=r.makeTensorInfo(z,"float32",M.imag),V=qy({inputs:{real:P,imag:W},backend:r}),B=Dk({inputs:{a:V,b:L},backend:r}),U=tv({inputs:{a:C,b:B},backend:r}),G=lw({inputs:{a:C,b:B},backend:r}),H=Ky({inputs:{input:U},backend:r}),q=Ky({inputs:{input:G},backend:r}),j=nk({inputs:{input:U},backend:r}),X=nk({inputs:{input:G},backend:r}),K=rk({inputs:[H,q],backend:r,attrs:{axis:0}}),Z=rk({inputs:[j,X],backend:r,attrs:{axis:0}}),J=r.data.get(K.dataId).values,Q=r.data.get(Z.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(Z),{real:J,imag:Q}}const pw={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=M(s.shape),a=s.shape[s.shape.length-1],i=sv({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=cw(i,!1,n),l=sv({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function fw(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||Y(r),o=j(i,M(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const mw={kernelName:kt,backendName:"cpu",kernelFunc:fw},gw={kernelName:wt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=q(s.dtype,M(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const s=e*u;for(let r=0;r<u;r++){const i=Math.round(l-e-1),o=t+n+s+r;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+r]),a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},bw=Vy((e=>Math.floor(e))),xw=Ay(It,bw),yw={kernelName:It,backendName:"cpu",kernelFunc:xw},vw=Fy(((e,t)=>Math.floor(e/t))),kw=Yy(At,vw,null,"int32"),ww={kernelName:At,backendName:"cpu",kernelFunc:kw},Iw={kernelName:ys,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=ik({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=tv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Hy(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Aw={kernelName:vs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=wk({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=tv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Hy(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function Sw(e,t,n,s,r,a,i,o,l){const u=ka([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const Nw={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=M(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=Zu(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=Sw(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,d.values)}};function Cw(e,t,n){const s=ka(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}const Tw={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;vy([r,a],"gatherV2");const l=G(i,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let e=0;e<u.length;++e){const t=u[e];F(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=M(a.shape),p=zc(r,a,l,h),f=sv({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=sv({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(m),x=Cw(n.bufferSync(f),b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,x.dtype,x.values)}},Ew=Fy(((e,t)=>e>t?1:0)),Rw=Yy(Tt,Ew,null,"bool"),Fw={kernelName:Tt,backendName:"cpu",kernelFunc:Rw},Dw=Fy(((e,t)=>e>=t?1:0)),Ow=Yy(Et,Dw,null,"bool"),Lw={kernelName:Et,backendName:"cpu",kernelFunc:Ow},Mw={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=M(s.shape),a=s.shape[s.shape.length-1],i=sv({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=cw(i,!0,n),l=sv({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},zw=Iy(Ot,(e=>Number.isFinite(e)?1:0),"bool"),Pw={kernelName:Ot,backendName:"cpu",kernelFunc:zw},Ww=Iy(Lt,(e=>Math.abs(e)===1/0?1:0),"bool"),Vw={kernelName:Lt,backendName:"cpu",kernelFunc:Ww},Bw=Iy(Mt,(e=>Number.isNaN(e)?1:0),"bool"),Uw={kernelName:Mt,backendName:"cpu",kernelFunc:Bw},Gw=Fy(((e,t)=>e<t?1:0)),Hw=Yy(Pt,Gw,null,"bool"),qw={kernelName:Pt,backendName:"cpu",kernelFunc:Hw},jw=Fy(((e,t)=>e<=t?1:0)),Xw=Yy(Wt,jw,null,"bool"),Kw={kernelName:Wt,backendName:"cpu",kernelFunc:Xw};function Zw(e,t,n){const s=(t-e)/(n-1),r=re(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const Jw={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=Zw(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},Qw=Vy((e=>Math.log(e))),Yw=Ay(Bt,Qw),$w={kernelName:Bt,backendName:"cpu",kernelFunc:Yw},_w=Iy(Ut,(e=>Math.log1p(e))),eI={kernelName:Ut,backendName:"cpu",kernelFunc:_w},tI=Fy(((e,t)=>e&&t)),nI=Yy(Gt,tI,null,"bool"),sI={kernelName:Gt,backendName:"cpu",kernelFunc:nI},rI=Iy(Ht,(e=>e?0:1),"bool"),aI={kernelName:Ht,backendName:"cpu",kernelFunc:rI},iI=Fy(((e,t)=>e||t)),oI=Yy(qt,iI,null,"bool"),lI={kernelName:qt,backendName:"cpu",kernelFunc:oI},uI={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;vy(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=M(r.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}},cI={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;vy(i,"LRNGrad");const h=M(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),s=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function hI(e,t,n,s){const r=q(s,M(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r}function dI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=G(a,l);let h=c;const d=Do(h,u);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=mv(p,l,r.dtype,d,e),h=Lo(h.length,u),l=e}vy(r,"max"),Fo("max",h,u);const[f,m]=Eo(l,h),g=hI(p,M(m),f,r.dtype),b=o.write(g,f,r.dtype);let x=f;return i&&(x=Ro(f,c)),{dataId:b,shape:x,dtype:r.dtype}}const pI={kernelName:Kt,backendName:"cpu",kernelFunc:dI},fI=Fy(((e,t)=>Math.max(e,t))),mI=Yy(Zt,fI),gI={kernelName:Zt,backendName:"cpu",kernelFunc:mI},bI={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;vy(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;F(Ti(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=xi(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&z(u.inShape,u.outShape))c=Cy({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ee(r.shape),s=Ov(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},xI={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;vy(r,"maxPool3d");const c=yi(r.shape,a,i,1,o,l,u),h=Mv(n.data.get(r.dataId).values,r.shape,r.dtype,ee(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},yI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;vy([r,a],"maxPool3DGrad");const c=yi(a.shape,i,o,1,l,u),h=function(e,t){const n=ka(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const x=b*s-d;let y=x;for(;y<0;)y+=i;const v=Math.min(t.inDepth,u+x);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const k=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*a-f;let w=p;for(;w<0;)w+=l;const I=Math.min(t.inWidth,h+p);let A=Number.NEGATIVE_INFINITY,S=-1;for(let t=y;t<v;t+=i){const n=t-x;for(let s=d;s<k;s+=o){const r=s-u;for(let a=w;a<I;a+=l){const i=a-p,o=e.get(m,t,s,a,g);o>=A&&(A=o,S=n*c*h+r*c+i)}}}n.set(S,m,b,s,r,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,y=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=x-1-c.padInfo.front,w=v-1-c.padInfo.left,I=y-1-c.padInfo.top,A=ka(a.shape,"float32"),S=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-k,i=s-I,o=r-w;let l=0;for(let n=0;n<x;n+=m){const s=(a+n)/d;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<y;r+=g){const a=(i+r)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=x*y*v-1-h.get(e,s,a,u,t)===n*y*v+r*v+i?1:0;0!==d&&(l+=S.get(e,s,a,u,t)*d)}}}A.set(l,e,n,s,r,t)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},vI={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;vy([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=xi(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=ka(d.outShape,o.dtype,Lv(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=v-1-d.padInfo.left,w=y-1-d.padInfo.top,I=ka(o.shape,"float32"),A=n.data.get(r.dataId).values,S=ka(r.shape,"float32",A);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-w,a=s-k;let i=0;for(let n=0;n<y;n+=b){const s=(r+n)/m;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<v;r+=x){const o=(a+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=y*v-1-f.get(e,s,o,t)===n*v+r?1:0;0!==l&&(i+=S.get(e,s,o,t)*l)}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},kI={kernelName:_t,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;vy(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=xi(s.shape,r,a,[1,1],i),[h,d]=function(e,t,n,s,r){const a=Ov(e,0,n,ee(t),r,"max"),i=Lv(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},wI={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=G(a,r.shape),l=M(Eo(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=Jy({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=rw({inputs:{a:h,b:c},backend:n});u.push(d);const p=Lk({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},II={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;vy(r,"min");const o=G(a,r.shape);let l=o;const u=Do(l,r.shape.length);let c=r;null!=u&&(c=gv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Lo(l.length,r.shape.length)),Fo("min",l,c.shape.length);const[h,d]=Eo(c.shape,l),p=M(d),f=re(M(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];(Number.isNaN(s)||s<n)&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=sv({inputs:{x:g},backend:n,attrs:{shape:Ro(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},AI=Fy(((e,t)=>Math.min(e,t))),SI=Yy(nn,AI),NI={kernelName:nn,backendName:"cpu",kernelFunc:SI},CI={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;vy(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=ee(r.shape),f=M(o),m=o.length,g=ee(o),b=q(r.dtype,f);for(let e=0;e<f;e++){let t=le(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=oe(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}},TI=Fy(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),EI=Yy(rn,TI),RI={kernelName:rn,backendName:"cpu",kernelFunc:EI};function FI(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=G([o],r.shape),u=dI({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Ro(u.shape,l),h=sv({inputs:{x:u},backend:n,attrs:{shape:c}}),d=lw({inputs:{a:r,b:h},backend:n}),p=Qk({inputs:{x:d},backend:n}),f=Lk({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=sv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=rw({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const DI={kernelName:Xn,backendName:"cpu",kernelFunc:FI},OI={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;vy(r,"multinomial");const l=o?r:FI({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=re(M(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=jo.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();p[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){p[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function LI(e,t,n){const s=js(-1,n);return Rk([],t,s,e,n)}const MI={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;vy(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=LI(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},zI=Ql,PI={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;vy(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=zI(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},WI=Yl,VI={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;vy(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=WI(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},BI=$l,UI={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;vy(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=BI(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},GI=Fy(((e,t)=>e!==t?1:0)),HI=Yy(un,GI,null,"bool"),qI={kernelName:un,backendName:"cpu",kernelFunc:HI},jI={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;vy(r,"oneHot");const l=M(r.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(r.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...r.shape,a],"int32",u)}};function XI(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=Ky({inputs:{input:s},backend:n}),t=XI({inputs:{x:e},backend:n}),r=nk({inputs:{input:s},backend:n}),a=XI({inputs:{x:r},backend:n}),i=qy({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return fw({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const KI={kernelName:fs,backendName:"cpu",kernelFunc:XI},ZI={kernelName:pn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Ky({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=nk({inputs:{input:r},backend:s}),i=XI({inputs:{x:a},backend:s}),o=qy({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return fw({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function JI(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return $k({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{D(a,e.shape,"All tensors passed to stack must have matching shapes"),F(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=rk({inputs:t.map((e=>{const t=$k({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const QI={kernelName:mn,backendName:"cpu",kernelFunc:JI},YI={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;vy(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=M(r.shape),h=r.shape.length,d=ee(r.shape),p=M(o),f=o.length,m=ee(o),g=q(r.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[oe(le(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},$I=Fy(((e,t)=>Math.pow(e,t))),_I=Yy(bn,$I),eA={kernelName:bn,backendName:"cpu",kernelFunc:_I};function tA(e,t,n,s){const[r,a]=Eo(e,s),i=br(t,"int32"),o=re(M(r),i),l=M(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const nA={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;vy(r,"prod");const o=r.shape.length,l=G(a,r.shape),u=Do(l,o);let c=l,h=r;const d=[];null!=u&&(h=gv({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=Lo(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=tA(h.shape,h.dtype,p,c);let b=m;return i&&(b=Ro(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}};function sA(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return re(0,s);const r=re(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const rA={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=sA(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},aA=Iy(wn,(e=>1/e)),iA={kernelName:wn,backendName:"cpu",kernelFunc:aA},oA={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;vy(r,"resizeBilinear");const l=ee(r.shape),[u,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(M([h,u,c,f])),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c];let y=0;const v=b[0]/x[0],k=b[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],b=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*s,i=a+(n+(m[b+e]-n)*s-a)*r;g[y++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},lA={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;vy([a,r],"resizeBilinearGrad");const o=ee(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=a+n*o[2],m=a+s*o[2],g=i+n*o[2],b=i+s*o[2],k=d*u,w=d*r,I=l*u,A=l*r;for(let e=0;e<h;e++){const t=y[v++];f[p+e]+=t*k,f[m+e]+=t*w,f[g+e]+=t*I,f[b+e]+=t*A}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},uA={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;vy(r,"resizeNearestNeighbor");const l=ee(r.shape),[u,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],y=b[0]/x[0],v=b[1]/x[1];let k=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?y*(e+.5):y*e;let s=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=m[s+e];g[k++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},cA={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;vy([a,r],"resizeNearestNeighborGrad");const o=ee(r.shape),l=ee(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=b[0]/x[0],v=b[1]/x[1],k=1/y,w=1/v,I=2*Math.ceil(k)+2,A=2*Math.ceil(w)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*k),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*w),b=Math.floor(u-A/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*y;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<A;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*l[2],a=t*v;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},hA={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;vy(r,"reverse");const i=r.shape.length,o=G(a,r.shape);if(0===i)return Cy({inputs:{x:r},backend:n});const l=new rr(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},dA={kernelName:bs,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=q(s.dtype,M(s.shape)),[u,c,h,d]=s.shape,[p,f]=Gu(i,c,h),m=Math.sin(r),g=Math.cos(r),b=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let i=0;i<d;i++){const o=[u,e,s,i],x=o[2],y=o[1];let v=(x-p)*g-(y-f)*m,k=(x-p)*m+(y-f)*g;v=Math.round(v+p),k=Math.round(k+f);let w=a;"number"!=typeof a&&(w=3===i?255:a[i]),v>=0&&v<h&&k>=0&&k<c&&(w=b[t+k*(h*d)+v*d+i]),l[t+n+r+i]=w}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},pA=Iy(Fn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),fA={kernelName:Fn,backendName:"cpu",kernelFunc:pA},mA=Vy((e=>1/Math.sqrt(e))),gA=Ay(Dn,mA),bA={kernelName:Dn,backendName:"cpu",kernelFunc:gA};function xA(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return ka(n,t.dtype);const p=ka(c,t.dtype);p.values.fill(l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[e*r+n]:p.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return p}const yA={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Yu(0,r,i),d=xA(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},vA={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;vy([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=br(r.dtype,a.dtype),h=re(M(r.shape),c);let d=0;const p=0===i||i>1||1===r.shape.length?1:M(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},kA=$u,wA=_u,IA=Iy(Mn,(e=>e>=0?wA*e:kA*(Math.exp(e)-1))),AA={kernelName:Mn,backendName:"cpu",kernelFunc:IA},SA=Iy(Vn,(e=>e<0?-1:e>0?1:0)),NA={kernelName:Vn,backendName:"cpu",kernelFunc:SA},CA=Iy(Pn,(e=>Math.sin(e))),TA={kernelName:Pn,backendName:"cpu",kernelFunc:CA},EA=Iy(Wn,(e=>Math.sinh(e))),RA={kernelName:Wn,backendName:"cpu",kernelFunc:EA},FA=Math.log(1.1920928955078125e-7)+2,DA=Iy(Un,(e=>{const t=e>-FA,n=e<FA,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),OA={kernelName:Un,backendName:"cpu",kernelFunc:DA},LA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;vy([r],"spaceToBatchND");const o=M(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=YI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Hu(u.shape,a,o,!1),h=qu(c.length,a.length,!1),d=ju(u.shape,a,o,!1),p=sv({inputs:{x:u},backend:n,attrs:{shape:c}}),f=gv({inputs:{x:p},backend:n,attrs:{perm:h}}),m=sv({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function MA(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(wc(o));return[j(n,0),[0,h],j(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Ic(t,n));if(n>=l)throw new Error(Ac(t,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=j(n,t*h),d=j(r,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=p[n],i=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=s[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}}const zA={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=MA(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};function PA(e,t,n,s,r){const a=M(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(Sc(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Nc(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(Tc(s,l));l[c]=e}if(M(l)!==a)throw new Error(Ec(s,l));const h=s.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*s[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=j(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<h;++s)n+=e[t*h+s]*d[s];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],l]}const WA={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=PA(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function VA(e,t,n,s,r,a=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=j(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Dc(g,c));g>m&&d.fill(i,m*u,g*u);for(let t=p;t<f;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(Oc(t,s[t],l[0]));for(let t=0;t<u;t++)d[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*u,c*u),[d,h]}const BA={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=VA(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},UA={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=VA(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},GA={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Yu(0,r,o),p=xA(n.bufferSync(r),n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},HA={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=G(i,r.shape)[0],l=kc(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=Gv({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},qA=Vy((e=>Math.sqrt(e))),jA=Iy(Gn,(e=>Math.sqrt(e))),XA={kernelName:Gn,backendName:"cpu",kernelFunc:jA},KA={kernelName:_n,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;vy(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZA=Fy(((e,t)=>{const n=e-t;return n*n})),JA=Yy($n,ZA),QA={kernelName:$n,backendName:"cpu",kernelFunc:JA},YA=Iy(ms,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),$A={kernelName:ms,backendName:"cpu",kernelFunc:YA};function _A(e,t,n,s){const r=ka(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const eS={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;vy(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:v}=$a(r.shape,a,i,o,l,u,c,h,d);let k;if(m)k=sv({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){F(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Va(x,y,v),t=Gv({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});k=sv({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=_A(p,n.bufferSync(r),v,x);k=n.makeTensorInfo(f,e.dtype,e.values)}return k}};class tS{constructor(e,t,n,s,r,a){this.separator=Zs(e),this.nGramWidths=t,this.leftPad=Zs(n),this.rightPad=Zs(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);const p=n[s+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=j("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,l,a),r+=l})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,s,i,r,l,o)}}return[i,a]}}function nS(e,t,n,s,r,a,i,o){return new tS(n,s,r,a,i,o).compute(e,t)}const sS={kernelName:ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=nS(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function rS(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function aS(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;rS(e[l],t,n,r);const u=r.length-s;o[l]=u,a+=u,i=Math.max(i,u)}const l=j("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]}const iS={kernelName:ns,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=aS(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function oS(e,t){const n=j("int32",e.length);for(let s=0;s<e.length;++s)n[s]=qs(e[s]).modulo(t).getLowBitsUnsigned();return n}const lS={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=oS(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},uS=Iy(as,(e=>Math.tan(e))),cS={kernelName:as,backendName:"cpu",kernelFunc:uS},hS=Iy(is,(e=>Math.tanh(e)));function dS(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=ka(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}const pS=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function fS(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);fS(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,i=s;for(R(e,n,t),pS(e[s],r)>0&&R(e,n,s);a<i;){for(R(e,a,i),a++,i--;pS(e[a],r)<0;)a+=1;for(;pS(e[i],r)>0;)i-=1}0===pS(e[n],r)?R(e,n,i):(i+=1,R(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function mS(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=q(n,i*s),u=q("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(fS(i,s),i=i.slice(0,s)),r&&i.sort(pS);const c=t*s,h=l.subarray(c,c+s),d=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[ka(c,n,l),ka(c,"int32",u)]}const gS={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],b=ee(r.shape),x=b[0],y=b[1],v=b[2],k=q(r.dtype,M(g));k.fill(l);const w=s.data.get(r.dataId).values,I=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<p;++r){let a;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,p=(t[3]*s+t[4]*n+t[5])/u,f=bS(c,d,o),m=bS(p,h,o);switch(i){case"nearest":a=yS(w,h,d,x,y,v,e,m,f,r,l);break;case"bilinear":a=vS(w,h,d,x,y,v,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}k[e*x+n*y+s*v+r]=a}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function bS(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return T(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return T(0,n,t-1)}(e,t);case"nearest":return function(e,t){return T(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function xS(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function yS(e,t,n,s,r,a,i,o,l,u,c){return xS(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function vS(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*xS(e,t,n,s,r,a,i,h,d,u,c)+(l-d)*xS(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*xS(e,t,n,s,r,a,i,p,d,u,c)+(l-d)*xS(e,t,n,s,r,a,i,p,f,u,c))}function kS(e,t,n,s){const r=G(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new rr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new rr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const wS={kernelName:ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;vy(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=$k({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=js(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=Vk({inputs:{a:s,b:c},backend:n}),i=Jy({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=Dk({inputs:{a:i,b:r},backend:n}),h=Lk({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=JI({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},IS=[ov,uv,hv,pv,nv,fv,xv,yv,vv,kv,Iv,Sv,Cv,Rv,Dv,zv,Pv,Wv,Vv,iv,Bv,qv,Kv,Zv,Qy,Yv,_v,jy,ek,ak,ok,lk,uk,ck,hk,dk,fk,gk,bk,xk,yk,vk,kk,Ik,Ak,Sk,Nk,Ck,Tk,Ek,zk,Ny,Pk,Bk,Zk,Yk,_k,nw,pw,mw,gw,yw,ww,Iw,Aw,Nw,Tw,Fw,Lw,Ty,Mw,sk,Pw,Vw,Uw,Ry,qw,Kw,Jw,$w,eI,sI,aI,lI,uI,cI,pI,gI,bI,xI,yI,vI,kI,wI,II,NI,CI,RI,OI,Ok,MI,PI,VI,UI,qI,jI,ZI,QI,YI,eA,Ly,nA,rA,Zy,aw,iA,zy,Wy,rv,oA,lA,uA,cA,hA,dA,fA,bA,yA,vA,AA,Gy,NA,TA,RA,Hv,DI,OA,LA,zA,WA,BA,UA,GA,HA,XA,KA,QA,$A,eS,sS,iS,lS,uw,Mk,cS,{kernelName:is,backendName:"cpu",kernelFunc:hS},{kernelName:os,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;vy(r,"tile");const i=dS(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;vy(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=mS(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},gS,bv,{kernelName:hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;vy(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=kS(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=Gv({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[e]=sv({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},wS,KI];for(const e of IS)Ts(e);const AS={},SS={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function NS(e,t){if(!(e in AS)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete AS[e]}),!1),1===e?n.getContext("webgl",SS)||n.getContext("experimental-webgl",SS):n.getContext("webgl2",SS)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;AS[e]=n}const n=AS[e];return null==n||n.isContextLost()?(delete AS[e],NS(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),AS[e])}var CS,TS,ES;function RS(e,t){return[t,e]}function FS(e){const t=M(e);return W(Math.ceil(t/4))}function DS(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function OS(e,t){const n=e;let s,r,a,i,o,l,u,c,h,d;return 2===de().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function LS(e,t){const n=t();return de().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function MS(e){return!!(de().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function zS(e,t){return jS(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(CS||(CS={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(TS||(TS={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ES||(ES={}));const PS=/ERROR: [0-9]+:([0-9]+):/g;function WS(e,t){const n=PS.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>V((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${V(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function VS(e,t){if(LS(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function BS(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(LS(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),LS(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),LS(e,(()=>e.enableVertexAttribArray(o))),!0)}function US(e,t,n,s){LS(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),LS(e,(()=>e.activeTexture(e.TEXTURE0+n))),LS(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),LS(e,(()=>e.uniform1i(n,s)))}function GS(e,t,n){LS(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),LS(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function HS(e,t){LS(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),LS(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function qS(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function jS(e,t,n){const s=LS(e,(()=>t()));if(null==s)throw new Error(n);return s}function XS(e,t=2){return M(e.slice(0,e.length-t))}function KS(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ZS(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[XS(e),...KS(e)]),t}function JS(e){return e%2==0}function QS(e,t){if(z(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(JS(n)&&JS(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&JS(e[0])&&JS(t[0])}let YS,$S;function _S(e,t){return null!=e.getExtension(t)}function eN(e){try{if(null!=NS(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function tN(e){const t=OS(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function nN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&F("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const sN=de();function rN(){let e,t,n,s,r,a,i,o,l,u;return 2===de().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function aN(e,t,n="index"){const s=ee(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function iN(e,t,n="index"){const s=ee(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function oN(e){const t=ee(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}sN.registerFlag("HAS_WEBGL",(()=>sN.getNumber("WEBGL_VERSION")>0)),sN.registerFlag("WEBGL_VERSION",(()=>eN(2)?2:eN(1)?1:0)),sN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),sN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===sN.get("WEBGL_VERSION"))),sN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),sN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),sN.registerFlag("WEBGL_PACK",(()=>sN.getBool("HAS_WEBGL"))),sN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_PACK_CLIP",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_PACK_REDUCE",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_CONV_IM2COL",(()=>sN.getBool("WEBGL_PACK"))),sN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==YS){const t=NS(e);YS=t.getParameter(t.MAX_TEXTURE_SIZE)}return YS}(sN.getNumber("WEBGL_VERSION")))),sN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==$S){const t=NS(e);$S=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$S)}(sN.getNumber("WEBGL_VERSION")))),sN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=sN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=NS(e);return t=_S(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:_S(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),sN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>sN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Er())),sN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=NS(e);if(1===e){if(!_S(t,"OES_texture_float"))return!1}else if(!_S(t,"EXT_color_buffer_float"))return!1;return tN(t)}(sN.getNumber("WEBGL_VERSION")))),sN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!sN.getBool("WEBGL_FORCE_F16_TEXTURES")&&sN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),sN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=NS(e);if(1!==e){if(_S(t,"EXT_color_buffer_float"))return tN(t);const e="EXT_color_buffer_half_float";if(_S(t,e)){const n=t.getExtension(e);return function(e,t){const n=OS(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!_S(t,"OES_texture_float")&&!!_S(t,"WEBGL_color_buffer_float")&&tN(t)}(sN.getNumber("WEBGL_VERSION")))),sN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=sN.getNumber("WEBGL_VERSION"))&&null!=NS(e).fenceSync;var e})),sN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>sN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),sN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),sN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Er()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),sN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),sN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),sN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),sN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const lN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:uN}=r;function cN(e,t,n){const s=[];if(e.forEach((e=>{const t=M(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=vN(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?dN(e,s):hN(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=uN(e.shapeInfo.logicalShape,t.logicalShape),l=yN(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===M(e.shapeInfo.logicalShape),m=1===M(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&z(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=yN(l),c=uN(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=rN(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${pN}\n    ${fN}\n    ${mN}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(z(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return z(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${iN(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=aN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${iN(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=aN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=aN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=aN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=gN),[h,l,c,r,u,a,n.userCode].join("\n")}function hN(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=bN(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${xN(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=bN(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&z(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=H(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${hN(kN(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${wN(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${xN(e)}\n      }\n    `;const u=a[0],c=a[1],h=bN(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=H(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${hN(kN(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${wN(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${xN(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=bN(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * ${a} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=H(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${hN(kN(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${wN(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${xN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=bN(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=H(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${hN(kN(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${wN(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${xN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${bN(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=H(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${hN(kN(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${wN(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${xN(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${bN(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function dN(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${rN().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=rN();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=rN();if(null!=a&&z(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${dN(kN(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${wN(a,s)});\n        }\n      `}const o=rN();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=rN();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const pN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gN="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function bN(e){return`offset${e}`}function xN(e){const t=e.name,n=M(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function yN(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function vN(e,t,n){const{newShape:s,keptDims:r}=H(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,l=!e&&a>1&&!z(t,n)&&s.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function kN(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function wN(e,t){return t.map((t=>e[t])).join(", ")}function IN(e,t,n){const s={},r={},a={},i=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===de().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];s[o]=e.getUniformLocation(n,o,d),s[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,d),t.enableShapeUniforms&&(r[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,d),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,s)=>{i[s]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function AN(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!z(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!z(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function SN(e){return de().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class NN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=CS.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=rN();this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?iN(["r","c","d"],e):aN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class CN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=CS.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=rN();this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?iN(["r","c","d"],e):aN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class TN{constructor(e){this.variableNames=["A"],this.outTexUsage=TS.DOWNLOAD;const t=rN();this.outputShape=e,this.userCode=`\n      ${lN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class EN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=TS.DOWNLOAD;const t=rN();this.outputShape=e,this.userCode=`\n      ${lN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class RN{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=rN();this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class FN{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=rN();this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oN(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function DN(e,t,n,s,r,a){!function(e,t){const n=de().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return jS(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return LS(e,(()=>e.bindTexture(o,i))),LS(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),LS(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),LS(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),LS(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===de().getNumber("WEBGL_VERSION")?LS(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):LS(e,(()=>e.texStorage2D(o,1,s,t,n))),LS(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function ON(e){return e.internalFormatFloat}function LN(e){return e.internalFormatHalfFloat}function MN(e){return e.downloadTextureFormat}function zN(e){return e.internalFormatPackedFloat}function PN(e){return e.internalFormatPackedHalfFloat}class WN{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=de().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){AS[e]=t}(t,e)):this.gl=NS(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===de().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=zS(this.gl,e),_S(this.gl,t))this.textureHalfFloatExtension=zS(this.gl,t);else if(de().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),_S(this.gl,s))this.colorBufferHalfFloatExtension=zS(this.gl,s);else if(de().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",_S(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!_S(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=jS(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return LS(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),LS(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=jS(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return LS(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),LS(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return jS(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=OS(this.gl,this.textureHalfFloatExtension)}get debug(){return de().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;LS(e,(()=>e.finish())),LS(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),LS(e,(()=>e.deleteFramebuffer(this.framebuffer))),LS(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),LS(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),LS(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=RS(t,n);return DN(e,r,a,ON(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=RS(t,n);return DN(e,r,a,LN(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=RS(t,n);return DN(e,r,a,MN(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){LS(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===de().getNumber("WEBGL_VERSION")?LS(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):LS(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===de().getNumber("WEBGL_VERSION")?LS(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):LS(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),LS(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;LS(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),2===de().getNumber("WEBGL_VERSION")?LS(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):LS(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),LS(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=DS(t,n);return DN(e,r,a,PN(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=DS(t,n);return DN(e,r,a,zN(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(HS(this.gl,this.framebuffer),this.outputTexture=null),LS(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=RS(t,n),i=new Uint8Array(t*n*4);return LS(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=DS(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();LS(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return LS(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),LS(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),LS(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(de().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return LS(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=rN();return function(e,t){const n=jS(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(LS(e,(()=>e.shaderSource(n,t))),LS(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return jS(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return LS(t,(()=>t.attachShader(n,this.vertexShader))),LS(t,(()=>t.attachShader(n,e))),function(e,t){if(LS(e,(()=>e.linkProgram(t))),!de().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&VS(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return LS(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),BS(e,t,"clipSpacePos",n,3,20,0)&&BS(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&LS(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&VS(this.gl,this.program),LS(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return jS(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),LS(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),US(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=DS(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&VS(this.gl,this.program),qS(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),LS(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),LS(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=zS(this.gl,2===de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await B((()=>this.disposed||this.isQueryAvailable(e,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||B((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),GS(this.gl,e,this.framebuffer),this.debug&&qS(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(GS(this.gl,this.outputTexture,this.framebuffer),this.debug&&qS(this.gl)):HS(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;GS(s,e,this.framebuffer),this.debug&&qS(s),this.outputTexture=e,LS(s,(()=>s.viewport(0,0,t,n))),LS(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),LS(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:VN,bincountImpl:BN,bincountReduceImpl:UN,ceilImpl:GN,concatImpl:HN,equalImpl:qN,expImpl:jN,expm1Impl:XN,floorImpl:KN,gatherNdImpl:ZN,gatherV2Impl:JN,greaterImpl:QN,greaterEqualImpl:YN,lessImpl:$N,lessEqualImpl:_N,linSpaceImpl:eC,logImpl:tC,maxImpl:nC,maximumImpl:sC,minimumImpl:rC,multiplyImpl:aC,negImpl:iC,notEqualImpl:oC,prodImpl:lC,rangeImpl:uC,rsqrtImpl:cC,sigmoidImpl:hC,simpleAbsImpl:dC,sliceImpl:pC,sparseFillEmptyRowsImpl:fC,sparseReshapeImpl:mC,sparseSegmentReductionImpl:gC,sqrtImpl:bC,stridedSliceImpl:xC,stringNGramsImpl:yC,stringSplitImpl:vC,stringToHashBucketFastImpl:kC,subImpl:wC,tileImpl:IC,topKImpl:AC,transposeImpl:SC,uniqueImpl:NC}=a;function CC(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function TC(e,t){return 1===t?[e]:CC(e,t)}class EC{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=SN(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=TC("rc",this.rank),t=yN(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class RC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):aN(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class FC{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=OC(t,n),r=LC(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=DC(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===ES.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===ES.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===ES.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===ES.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===ES.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=OC(n,s),a=LC(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=DC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=de().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function DC(e,t,n,s,r){const a=function(e,t){switch(e){case ES.PACKED_2X2_FLOAT32:return zN(t);case ES.PACKED_2X2_FLOAT16:return PN(t);case ES.UNPACKED_FLOAT32:return ON(t);case ES.UNPACKED_FLOAT16:return LN(t);case ES.PACKED_4X1_UNSIGNED_BYTE:return MN(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=DS(e[0],e[1]);i=t*n}else{const[t,n]=RS(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function OC(e,t){if(e===TS.UPLOAD)return ES.PACKED_2X2_FLOAT32;if(e===TS.RENDER||null==e)return function(e){return de().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?ES.PACKED_2X2_FLOAT32:ES.UNPACKED_FLOAT32:e?ES.PACKED_2X2_FLOAT16:ES.UNPACKED_FLOAT16}(t);if(e===TS.DOWNLOAD||e===TS.PIXELS)return ES.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function LC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class MC{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const zC="return abs(x);",PC="return x;";class WC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class VC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length);const t=e.length,n=TC("rc",t),s=yN(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const BC=Vc,UC={},GC=de().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class HC extends S{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!de().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof WN)t=e;else{const n=NS(de().getNumber("WEBGL_VERSION"),e);t=new WN(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=NS(de().getNumber("WEBGL_VERSION"));t=new WN(e),this.binaryCache=((n=de().getNumber("WEBGL_VERSION"))in UC||(UC[n]={}),UC[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new FC(this.gpgpu),this.numMBBeforeWarning=null==de().global.screen?1024:de().global.screen.height*de().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new A(this,si())}nextDataId(){return HC.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((de().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||de().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:TS.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,r){if(de().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:TS.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new WC(i,PC):new MC(i,PC);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Ks()),c="complex64"===s?ic(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Ks()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new WC(s,PC):new MC(s,PC);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(de().getBool("DEBUG")&&!de().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===de().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&de().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...FS(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=ic(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=M(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;LS(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&si().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new WC(r,PC):new MC(r,PC);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=si().makeTensorFromDataId(u.dataId,u.shape,u.dtype),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ka(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!MS(n)){if(de().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=M(t);if(de().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...FS(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=de().getBool("WEBGL_PACK")&&!0===s,i=a?ZS(t):t,o=a?new EN(i):new TN(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=L(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=L(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ks(),endMs:null}}endTimer(e){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ks(),e)}async getQueryTime(e){if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=GC){return de().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&M(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ks("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return BC(e.shape,t)}packedUnaryOp(e,t,n){const s=new WC(e.shape,t),r=this.compileAndRun(s,[e],n);return si().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=dC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(de().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,zC,e.dtype);const t=new MC(e.shape,zC),n=this.compileAndRun(t,[e]);return si().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&J(n[0])){const r=n.map((e=>Zs(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:s}=this.makeTensorInfo(e,t,n);return si().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){const t=new VC(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new EC(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[XS(e.shape),...KS(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[XS(t),...KS(t)],a=new RC(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;null!=t&&F(M(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=ZS(r);let o;o=s?new CN(i):new NN(i);const l=[null!=t?t:FS(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===CS.DENSE){const t=null!=a?a:FS(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===M(i.shape))return o.values=q(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&M(t.shape)<=de().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!QS(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=vN(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ee(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&z(t.shape,a),f=1===M(t.shape),m=Da(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&z(a,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${b}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${de().getNumber("WEBGL_VERSION")}`,a}(e,u,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=cN(r,i,t),l=function(e,t){const n=jS(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(LS(e,(()=>e.shaderSource(n,t))),LS(e,(()=>e.compileShader(n))),de().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw WS(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return de().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},IN(e,t,u))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),de().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(AN(t.inShapeInfos,n),AN([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===de().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=vN(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(o,new Int32Array(s));break;case 2:e.gl.uniform2iv(o,new Int32Array(s));break;case 3:e.gl.uniform3iv(o,new Int32Array(s));break;case 4:e.gl.uniform4iv(o,new Int32Array(s))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(M(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,s)}));const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=ee(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,s)=>{const a=t.customUniformLocations[s],i=r[s];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=de().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ks();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!de().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(de().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ai((()=>{if(!de().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=de().getBool("DEBUG");de().set("DEBUG",!1);const t=this.abs(ci(1e-8)).dataSync()[0];if(de().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Ks());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=de().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?E(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=H(e);e=t.newShape}let s=M(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=XS(e);let n=2,r=2;return e.length&&([n,r]=KS(e)),s=t*(n/2)*(r/2),W(s).map((e=>2*e))}return W(s)}(n,o),t.texShape=c),null!=r){const e=ZS(n);let a,i=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([i,h]=DS(c[0],c[1])),a=o?new FN(e,d):new RN(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,s),m=this.texData.get(f.dataId);m.usage=d?TS.PIXELS:TS.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const g=[[h,i]],b=!0,x=this.runWebGLProgram(a,[f],s,g,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,de().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Ks()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*Z(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Pu(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw WS(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=IN(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}}HC.nextDataId=0,Rr()&&li("webgl",(()=>new HC),2);class qC{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=La(t,n),this.enableShapeUniforms=SN(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class jC{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=La(t,n);const r=this.outputShape.length;this.enableShapeUniforms=SN(r);let a="";if(s)if(0===r||1===M(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${yN(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=TC("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function XC(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const KC={kernelName:Rt,backendName:"webgl",kernelFunc:XC};function ZC(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=XC({inputs:{x:s},backend:n}),l=XC({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const JC={kernelName:Ge,backendName:"webgl",kernelFunc:ZC},QC="return (a < 0.) ? b * a : a;",YC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",$C={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",js(a,"float32")),o=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC(YC,r.shape,i.shape):new qC(QC,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},_C="return (a < 0.) ? b * a : a;",eT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",tT={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC(eT,s.shape,r.shape):new qC(_C,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}};function nT({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=de().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new WC(i.shape,t):new MC(i.shape,e),o.runWebGLProgram(u,[i],l)}}function sT({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new qC(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],br(n.dtype,s.dtype))})),a=ZC({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||br(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Pc(e):e,s="string"===l.dtype?Pc(t):t,[a,i]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new jC(t,l.shape,u.shape,n):new qC(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function rT(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?eT:_C;if("leakyrelu"===e)return t?YC:QC;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class aT{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=SN(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class iT{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=La(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const oT="return a * b;";function lT(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=br(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new iT("return areal * breal - aimag * bimag;",s.shape,r.shape),i=new iT("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=ZC({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=aC(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC(oT,s.shape,r.shape):new qC(oT,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const uT={kernelName:on,backendName:"webgl",kernelFunc:lT};function cT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=M(r.shape),l=U(a,o),u=M(l);F(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||QS(r.shape,l)||null!==c.texture&&QS(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[XS(e.shape),...KS(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[XS(t),...KS(t)],i=new RC(a,s),o=[s],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}const hT={kernelName:An,backendName:"webgl",kernelFunc:cT};class dT{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${P(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class pT{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function fT(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=Uu(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new dT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new dT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new pT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class mT{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=yN(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class gT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=yN(this.rank),r=CC("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function bT(e,t,n){const s=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gT(e.shape,t):new mT(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function xT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=G(r,e.shape);let o=i;const l=Do(o,a),u=null!=l;let c=e;u&&(c=bT(e,l,s),o=Lo(o.length,a)),Fo("sum",o,a);const[h,d]=Eo(c.shape,o);let p=h;n&&(p=Ro(h,i));const f=M(d),m=cT({inputs:{x:c},attrs:{shape:[M(e.shape)/f,f]},backend:s}),g=fT(m,xr(e.dtype),"sum",s),b=cT({inputs:{x:g},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),b}(r,a,i,n)}const yT={kernelName:Hn,backendName:"webgl",kernelFunc:xT};function vT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=SC(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=bT(r,a,i);return u}const kT={kernelName:cs,backendName:"webgl",kernelFunc:vT};function wT({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=M(m),x=M(g),y=La(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);F(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[b,h,p]:[b,p,h],k=s?[x,f,d]:[x,d,f],w=cT({inputs:{x:e},backend:r,attrs:{shape:v}}),I=cT({inputs:{x:t},backend:r,attrs:{shape:k}}),A=[w,I],S=Math.max(b,x),N=n?w.shape[1]:w.shape[2],C=null!=a,T=null!=i,E="leakyrelu"===l,R=null!=l?rT(l,!0):null;let D;if((1===p||1===f)&&N>1e3&&!1===(C||T||E||null!=R)){let e=w,t=I;n&&(e=vT({inputs:{x:w},backend:r,attrs:{perm:[0,2,1]}}),A.push(e)),s&&(t=vT({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),A.push(t));const a=1===f;let i=e;1!==f&&(i=cT({inputs:{x:e},backend:r,attrs:{shape:[S,N,1]}}),A.push(i));const o=1===f?2:1;let l=t;a&&(l=cT({inputs:{x:t},backend:r,attrs:{shape:[S,1,N]}}),A.push(l));const u=lT({inputs:{a:i,b:l},backend:r});D=xT({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),A.push(u)}else{const l=br(e.dtype,t.dtype),u=new aT(v,k,[S,p,f],n,s,C,R,T,E),c=[w,I];if(null!=a&&c.push(a),T&&c.push(i),E){const e=r.makeTensorInfo([],"float32",js(o,"float32"));c.push(e),A.push(e)}D=r.runWebGLProgram(u,c,l)}const O=cT({inputs:{x:D},backend:r,attrs:{shape:y}});A.push(D);for(const e of A)r.disposeIntermediateTensorInfo(e);return O}const IT={kernelName:xs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return wT({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},AT="return abs(x);",ST={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=dC(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=de().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new WC(s.shape,AT):new MC(s.shape,AT),n.runWebGLProgram(r,[s],s.dtype)}},NT=nT({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),CT={kernelName:xe,backendName:"webgl",kernelFunc:NT},TT=nT({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ET={kernelName:ye,backendName:"webgl",kernelFunc:TT},RT="return a + b;",FT=sT({opSnippet:RT,packedOpSnippet:RT,supportsComplex:!0,cpuKernelImpl:VN}),DT={kernelName:ve,backendName:"webgl",kernelFunc:FT};class OT{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class LT{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const MT={kernelName:ke,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return XC({inputs:{x:r[0]},backend:s});if(r.length>de().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>br(e,t))),i=r.map((e=>e.shape)),o=de().getBool("WEBGL_PACK")?new LT(r[0].shape,i):new OT(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},zT={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=G(a,r.shape);let u=l;const c=Do(u,o);let h=r;null!=c&&(h=vT({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Lo(u.length,o)),Fo("all",u,o);const[d,p]=Eo(h.shape,u),f=cT({inputs:{x:h},backend:n,attrs:{shape:[-1,M(p)]}}),m=fT(f,f.dtype,"all",n);let g;return g=cT(i?{inputs:{x:m},backend:n,attrs:{shape:Ro(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},PT={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=G(a,r.shape);let u=l;const c=Do(u,o);let h=r;null!=c&&(h=vT({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Lo(u.length,o)),Fo("any",u,o);const[d,p]=Eo(h.shape,u),f=cT({inputs:{x:h},backend:n,attrs:{shape:[-1,M(p)]}}),m=fT(f,f.dtype,"any",n);let g;return g=cT(i?{inputs:{x:m},backend:n,attrs:{shape:Ro(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class WT{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class VT{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=yN(o),u=TC("coords",o);let c,h;if(1===a){h=o+1;const e=yN(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=TC("sourceLocR",h-1).concat("inIdx.r"),g=TC("sourceLocG",h-1).concat("inIdx.g"),b=TC("sourceLocB",h-1).concat("inIdx.b"),x=TC("sourceLocA",h-1).concat("inIdx.a"),y="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,w=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function BT(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=Uu(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new WT(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=BT(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function UT(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=Uu(r[r.length-1]),i=new VT(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=UT(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function GT(e,t,n,s){const r=[n];if(Fo("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!de().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Eo(i.shape,r),u=M(l),c=cT({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=BT(e,c,s);n.push(h);const d=cT({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return UT(e,t,s)}const HT={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=G(a,r.shape);const o=Do(i,r.shape.length);let l=r;const u=[];null!=o&&(l=vT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Lo(i.length,l.shape.length)),Fo("argMax",[i[0]],l.shape.length);const c=GT(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},qT={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=G(a,r.shape);const o=Do(i,r.shape.length);let l=r;const u=[];null!=o&&(l=vT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Lo(i.length,l.shape.length)),Fo("argMin",[i[0]],l.shape.length);const c=GT(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},jT=nT({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),XT={kernelName:Ne,backendName:"webgl",kernelFunc:jT},KT=nT({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),ZT={kernelName:Ce,backendName:"webgl",kernelFunc:KT},JT=nT({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),QT={kernelName:Te,backendName:"webgl",kernelFunc:JT},YT=sT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),$T={kernelName:Re,backendName:"webgl",kernelFunc:YT},_T=nT({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),eE={kernelName:Ee,backendName:"webgl",kernelFunc:_T};class tE{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const y=4*Math.floor(a/4),v=a%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class nE{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const k=4*Math.floor(a/4),w=a%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const sE={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;nN(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;F(Ti(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=xi(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&z(u.inShape,u.outShape))return XC({inputs:{x:r},backend:n});const c=new tE(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},rE={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=yi(r.shape,a,i,[1,1,1],o,l,u),h=new nE(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class aE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iE{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const oE={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=yi(i.shape,o,l,[1,1,1],u,c),d=new iE(h);return n.runWebGLProgram(d,[r],i.dtype)}},lE={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;nN([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=xi(i.shape,o,l,1,u),h=new aE(c);return n.runWebGLProgram(h,[r],i.dtype)}},uE={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return wT({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class cE{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],La(e,t),La(e,n);let i="0.0";null!=s&&(La(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(La(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class hE{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],La(e,t),La(e,n);let i="vec4(0.0)";null!=s&&(La(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(La(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const dE={kernelName:St,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;F(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=de().getBool("WEBGL_PACK_NORMALIZATION")?new hE(s.shape,r.shape,a.shape,c,h,l):new cE(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class pE{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=yN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return fE.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${fE[t]} = start[${t}] + coords.${fE[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const fE=["x","y","z","w","u","v"];class mE{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=yN(this.rank),n=TC("coords",this.rank),s=TC("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function gE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=Ya(r,a,i);if(Pa(r,o,l),0===M(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=pC(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=Ja(r.shape,o,l);if(u||!c){const e=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mE(l):new pE(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Qa(t,ee(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const bE={kernelName:zn,backendName:"webgl",kernelFunc:gE},xE={kernelName:ze,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;F(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Hu(r.shape,a,o),u=qu(l.length,a.length),c=ju(r.shape,a,o),h=Xu(i,a.length),d=Ku(c,i,a.length),p=[],f=cT({inputs:{x:r},backend:n,attrs:{shape:l}}),m=vT({inputs:{x:f},backend:n,attrs:{perm:u}}),g=cT({inputs:{x:m},backend:n,attrs:{shape:c}}),b=gE({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},yE={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=BN(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},vE={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=La(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},kE=sT({opSnippet:"return float(a != b);",cpuKernelImpl:oC,dtype:"bool"}),wE={kernelName:un,backendName:"webgl",kernelFunc:kE};function IE(e){const{inputs:t,backend:n}=e,{input:s}=t;return XC({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const AE={kernelName:kn,backendName:"webgl",kernelFunc:IE},SE={kernelName:Ve,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return XC({inputs:{x:a},backend:s});const t=Bo(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=ZC({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=IE({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!X(a.dtype,i)){const e=XC({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new MC(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",q("bool",1)),t=kE({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},NE="return ceil(x);",CE=nT({opSnippet:NE,packedOpSnippet:NE,cpuKernelImpl:GN}),TE={kernelName:Be,backendName:"webgl",kernelFunc:CE};class EE{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class RE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const FE={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=de().getBool("WEBGL_PACK_CLIP")?new RE(r.shape):new EE(r.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class DE{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function OE(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const LE={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new DE(s.shape),i=[OE(s,r.complexTensorInfos.real),OE(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class ME{constructor(e){this.outputShape=[],this.outputShape=Vu(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class zE{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Vu(e,t);const n=this.outputShape,s=n.length,r=yN(s),a=TC("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${PE(i,l,t)}),\n            vec2(${PE(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${PE(i,l,p)}),\n          vec2(${PE(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function PE(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function WE(e){const{inputs:t,backend:n}=e,{input:s}=t;return XC({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const VE={kernelName:Dt,backendName:"webgl",kernelFunc:WE};function BE(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>IE({inputs:{input:e},backend:n}))),r=e.map((e=>WE({inputs:{input:e},backend:n}))),a=BE(s,t,n),i=BE(r,t,n),o=ZC({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=M(e.shape.slice(t));return cT({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Vu(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=HN(a,i,s,o),u=Vu(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>de().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=BE(e.slice(0,s),t,n),a=BE(e.slice(s),t,n),i=BE([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if(de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new zE(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:a,outShape:i}=function(e,t,n){const s=Vu(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>cT({inputs:{x:e},attrs:{shape:[-1,M(e.shape.slice(t))]},backend:n}))),outShape:s}}(e,t,n),o=new ME(a.map((e=>e.shape))),l=n.runWebGLProgram(o,a,s);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=cT({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function UE(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=G(r,t[0].shape)[0],i=Vu(t.map((e=>e.shape)),a);if(0===M(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>M(e.shape)>0));return 1===o.length?XC({inputs:{x:o[0]},backend:n}):(Wu(o.map((e=>e.shape)),a),BE(o,a,n))}const GE={kernelName:qe,backendName:"webgl",kernelFunc:UE};class HE{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,x=m?3:1;let y="",v="";n&&(y=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${k}\n        ${v}\n        setOutput(result);\n      }\n    `}}class qE{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=SN(this.outputShape.length);const{dataFormat:n}=t,s=rN(),r="channelsLast"===n,a=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function XE({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&z(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,F(QS(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=cT({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=wT({a:h,b:p,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=s.texData.get(g.dataId);F(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=n.outShape,f=XC({inputs:{x:g},backend:s}),f.shape=n.outShape,m.push(g)}else{const u=cT({inputs:{x:e},backend:s,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=cT({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=wT({a:u,b:c,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=cT({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)s.disposeIntermediateTensorInfo(e);return f}function KE({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,b=[m,g],x=[],y=cT({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),v=cT({inputs:{x:t},backend:s,attrs:{shape:[1,m,M(t.shape)/m]}});x.push(y),x.push(v);const k=new jE(b,n),w=[y.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=s.runWebGLProgram(k,[y],"float32",w),A=cT({inputs:{x:I},backend:s,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(A);const S=null!=r,N=null!=a,C="leakyrelu"===o,T=o?rT(o,!0):null,E=new aT(A.shape,v.shape,[1,g,n.outChannels],!0,!1,S,T,N,C),R=[A,v];if(r&&R.push(r),N&&R.push(a),C){const e=s.makeTensorInfo([],"float32",js(i,"float32"));R.push(e),x.push(e)}const F=s.runWebGLProgram(E,R,"float32"),D=cT({inputs:{x:F},backend:s,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});x.push(F);for(const e of x)s.disposeIntermediateTensorInfo(e);return D}const ZE={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Ei(l),d=vi(r.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(de().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])p=KE({x:r,filter:a,convInfo:d,backend:n});else{const e=new HE(d);p=n.runWebGLProgram(e,[r,a],"float32")}else p=XE({x:r,filter:a,convInfo:d,backend:n});const f=cT({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class JE{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QE{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YE{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $E{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const _E={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Ei(l),d=vi(r.shape,c,i,1,o,u,!1,h),p=new JE(d);return n.runWebGLProgram(p,[r,a],"float32")}},eR={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Ei(u),d=vi(i,a.shape,o,1,l,c,!1,h),p=new QE(d);return n.runWebGLProgram(p,[r,a],"float32")}},tR={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=ki(r.shape,a.shape,i,l,o),c=new qE(u);return n.runWebGLProgram(c,[r,a],"float32")}},nR={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=ki(r.shape,l,i,1,o),c=new YE(u);return n.runWebGLProgram(c,[r,a],"float32")}},sR={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=ki(l,a.shape,o,1,i),c=new $E(u);return n.runWebGLProgram(c,[r,a],"float32")}},rR=nT({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),aR={kernelName:Ye,backendName:"webgl",kernelFunc:rR},iR=nT({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),oR={kernelName:$e,backendName:"webgl",kernelFunc:iR};class lR{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const uR={kernelName:tt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new lR(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};class cR{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const s=e.length,r=t?"1.0":`getX(${hR(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${yN(s)} coords = getOutputCoords();\n        int end = ${dR(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${dR(s,"coords")} = idx;\n          val *= getX(${hR(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function hR(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function dR(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}const pR={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,l=r.shape.length,u=Do([a],l);let c=r;null!=u&&(c=vT({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=Lo(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=XC({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new cR(c.shape,!1,o),s=[[e]],r=p;p=n.runWebGLProgram(t,[p],p.dtype,s),n.disposeIntermediateTensorInfo(r)}if(i){const e=new cR(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=vT({inputs:{x:p},backend:n,attrs:{perm:Oo(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}};class fR{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const s=e.length,r=t?"0.0":`getX(${mR(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${yN(s)} coords = getOutputCoords();\n        int end = ${gR(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${gR(s,"coords")} = idx;\n          val += getX(${mR(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function mR(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function gR(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const bR={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,l=r.shape.length,u=Do([a],l);let c=r;null!=u&&(c=vT({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=Lo(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=XC({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new fR(c.shape,!1,o),s=[[e]],r=p;p=n.runWebGLProgram(t,[p],p.dtype,s),n.disposeIntermediateTensorInfo(r)}if(i){const e=new fR(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=vT({inputs:{x:p},backend:n,attrs:{perm:Oo(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},xR={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=BN(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=UN(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class yR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const vR={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*a,u=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new yR("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class kR{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=SN(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class wR{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=SN(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?E(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const IR={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),F(Ti(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=vi(r.shape,a.shape,i,c,o,u,!0);let d;d=de().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new wR(h):new kR(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",p)}};class AR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const NR={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=vi(r.shape,c,i,o,l,u,!0),d=new AR(h);return n.runWebGLProgram(d,[r,a],"float32")}},CR={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=vi(c,a.shape,i,o,l,u,!0),d=new SR(h);return n.runWebGLProgram(d,[r,a],"float32")}};class TR{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ER={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=M(s.shape),i=cT({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new TR(a),l=n.runWebGLProgram(o,[i],i.dtype),u=cT({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class RR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const FR={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=bi(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new RR(u);c=n.runWebGLProgram(h,[r,a],"float32");const d=cT({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},DR={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=mc(r,a.length);bc(i.length,l,a);const{path:u,steps:c}=xc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=gc(p,l[t]);let r;yc(e)?r=a[t]:(r=vT({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);z(r.shape,i)||(r=cT({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=lT({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=xT({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},OR=nT({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),LR={kernelName:pt,backendName:"webgl",kernelFunc:OR},MR={kernelName:ft,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new qC("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},zR=sT({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:qN}),PR={kernelName:gt,backendName:"webgl",kernelFunc:zR},WR=nT({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${ec};\n  float a1 = ${tc};\n  float a2 = ${nc};\n  float a3 = ${sc};\n  float a4 = ${rc};\n  float a5 = ${ac};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),VR={kernelName:mt,backendName:"webgl",kernelFunc:WR},BR=nT({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jN,dtype:"float32"}),UR={kernelName:bt,backendName:"webgl",kernelFunc:BR};function GR(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(F(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),cT({inputs:{x:a},backend:s,attrs:{shape:o}})}const HR={kernelName:xt,backendName:"webgl",kernelFunc:GR},qR="return exp(x) - 1.0;",jR=nT({opSnippet:qR,packedOpSnippet:qR,cpuKernelImpl:XN}),XR={kernelName:yt,backendName:"webgl",kernelFunc:jR};class KR{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ZR(e,t,n){const s=n.texData.get(e.dataId),r=M(e.shape),a=e.shape[e.shape.length-1],i=cT({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new KR("real",o,t),u=new KR("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=ZC({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=cT({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const JR={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return ZR(s,!1,n)}};class QR{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function YR(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||Y(r),"string"===a){const e=j(a,M(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new QR(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const $R={kernelName:kt,backendName:"webgl",kernelFunc:YR};class _R{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const eF={kernelName:wt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new _R(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},tF="return floor(x);",nF=nT({opSnippet:tF,packedOpSnippet:tF,cpuKernelImpl:KN}),sF={kernelName:It,backendName:"webgl",kernelFunc:nF},rF=sT({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),aF={kernelName:At,backendName:"webgl",kernelFunc:rF};class iF{constructor(e){this.variableNames=["A"];const t=rN(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class oF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=rN(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const lF={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];(o||i)&&(null==uF&&(uF=document.createElement("canvas").getContext("2d")),uF.canvas.width=l,uF.canvas.height=u,uF.drawImage(r,0,0,l,u),r=uF.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=TS.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=de().getBool("WEBGL_PACK")?new oF(h):new iF(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let uF;const cF={kernelName:ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Ei(c),g=vi(r.shape,a.shape,l,h,u,d,!1,m);let b;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(de().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])b=KE({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,s="leakyrelu"===p,l=p?rT(p,!1):null,u=new HE(g,e,l,t,s),c=[r,a];if(i&&c.push(i),o&&c.push(o),s){const e=n.makeTensorInfo([],"float32",js(f,"float32"));c.push(e),x.push(e)}b=n.runWebGLProgram(u,c,"float32")}else b=XE({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const y=cT({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},hF={kernelName:vs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;null==m&&(m=[1,1]),F(Ti(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=vi(r.shape,a.shape,l,m,u,h,!0),b=de().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=d?rT(d,b):null,y=[r,a],v=null!=i,k=null!=o,w="leakyrelu"===d;if(v&&y.push(i),k&&y.push(o),w){const e=n.makeTensorInfo([],"float32",js(p,"float32"));y.push(e),f.push(e)}let I;I=b?new wR(g,v,x,k,w):new kR(g,v,x,k,w);const A=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,y,"float32",A);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class dF{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=yN(t.length),r=yN(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const pF={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=M(s.shape),[l,u,c,h]=Zu(s,r),d=cT({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),p=cT({inputs:{x:s},backend:n,attrs:{shape:[M(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=ZN(e,t,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,a.values)}const f=new dF(i,h,[u,c]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=cT({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class fF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=yN(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("index"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function mF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=G(i,r.shape)[0];if(de().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];F(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=zc(r,a,l,o),c=M(a.shape),h=[],d=cT({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=cT({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),s=JN(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const m=new fF(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const b=cT({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const gF={kernelName:Nt,backendName:"webgl",kernelFunc:mF},bF=sT({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:QN,dtype:"bool"}),xF={kernelName:Tt,backendName:"webgl",kernelFunc:bF},yF=sT({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:YN}),vF={kernelName:Et,backendName:"webgl",kernelFunc:yF},kF={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return ZR(s,!0,n)}},wF=nT({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),IF={kernelName:Ot,backendName:"webgl",kernelFunc:wF},AF=nT({opSnippet:"return float(isinf(x));",dtype:"bool"}),SF={kernelName:Lt,backendName:"webgl",kernelFunc:AF},NF=nT({opSnippet:"return float(isnan(x));",dtype:"bool"}),CF={kernelName:Mt,backendName:"webgl",kernelFunc:NF},TF=sT({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:$N,dtype:"bool"}),EF={kernelName:Pt,backendName:"webgl",kernelFunc:TF},RF=sT({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:_N,dtype:"bool"}),FF={kernelName:Wt,backendName:"webgl",kernelFunc:RF},DF={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=eC(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},OF=nT({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:tC}),LF={kernelName:Bt,backendName:"webgl",kernelFunc:OF},MF=nT({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),zF={kernelName:Ut,backendName:"webgl",kernelFunc:MF},PF=sT({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),WF={kernelName:Gt,backendName:"webgl",kernelFunc:PF},VF=nT({opSnippet:"return float(!(x >= 1.0));"}),BF={kernelName:Ht,backendName:"webgl",kernelFunc:VF},UF=sT({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),GF={kernelName:qt,backendName:"webgl",kernelFunc:UF};class HF{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class qF{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const jF={kernelName:jt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=de().getBool("WEBGL_PACK_NORMALIZATION")?new qF(r.shape,a,i,o,l):new HF(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class XF{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const KF={kernelName:Xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new XF(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function ZF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=G(a,r.shape);let u=l;const c=Do(u,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=SC(e,r.shape,r.dtype,c,t);p=n.makeTensorInfo(t,r.dtype),n.texData.get(p.dataId).values=s}else p=bT(r,c,n);u=Lo(u.length,o)}Fo("max",u,o);const[f,m]=Eo(p.shape,u);let g,b=f;if(i&&(b=Ro(f,l)),d){const e=n.texData.get(p.dataId).values,t=nC(e,M(m),b,r.dtype);g=n.makeTensorInfo(b,r.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=M(t),a=cT({inputs:{x:e},attrs:{shape:[M(e.shape)/r,r]},backend:s}),i=fT(a,e.dtype,"max",s),o=cT({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(p,m,b,n);return h&&n.disposeIntermediateTensorInfo(p),g}const JF={kernelName:Kt,backendName:"webgl",kernelFunc:ZF},QF=sT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:sC}),YF={kernelName:Zt,backendName:"webgl",kernelFunc:QF},$F={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;nN(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;F(Ti(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=xi(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&z(u.inShape,u.outShape))return XC({inputs:{x:r},backend:n});const c=new tE(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},_F={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=yi(r.shape,a,i,[1,1,1],o,u,l),h=new nE(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class eD{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tD{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const nD={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=yi(i.shape,o,l,[1,1,1],u,c),d=new nE(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new tD(h),m=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},sD={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;nN([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=xi(o.shape,l,u,1,c,h),p=new tE(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new eD(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},rD={kernelName:_t,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;F(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];F(Ti(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=xi(s.shape,r,a,u,i),[h,d]=function(e,t,n,s){let r=new tE(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new tE(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,d]}},aD={kernelName:en,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=G(a,s.shape);let u=l;const c=Do(u,o),h=null!=c,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=SC(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype),i.texData.get(f.dataId).values=n}else f=bT(s,c,i);p.push(f),u=Lo(u.length,o)}Fo("sum",u,o);const[m,g]=Eo(f.shape,u);let b=m;r&&(b=Ro(m,l));const x=function(e,t,n,s){const r=M(t),a=cT({inputs:{x:e},attrs:{shape:[M(e.shape)/r,r]},backend:s}),i=fT(a,"float32","mean",s),o=cT({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,b,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return x}},iD={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=G(a,r.shape);let u=l;const c=Do(u,o);let h=r;null!=c&&(h=vT({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Lo(u.length,r.shape.length)),Fo("min",u,o);const[d,p]=Eo(h.shape,u),f=cT({inputs:{x:h},backend:n,attrs:{shape:[-1,M(p)]}}),m=fT(f,f.dtype,"min",n);let g;return g=cT(i?{inputs:{x:m},backend:n,attrs:{shape:Ro(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},oD=sT({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:rC}),lD={kernelName:nn,backendName:"webgl",kernelFunc:oD};class uD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=yN(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class cD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=yN(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=TC("rc",s),l=TC("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const hD={kernelName:sn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cD(s.shape,r,a):new uD(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},dD=sT({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),pD={kernelName:rn,backendName:"webgl",kernelFunc:dD};class fD{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const mD=sT({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),gD={kernelName:ht,backendName:"webgl",kernelFunc:mD},bD="return a - b;",xD=sT({opSnippet:bD,packedOpSnippet:bD,supportsComplex:!0,cpuKernelImpl:wC}),yD={kernelName:rs,backendName:"webgl",kernelFunc:xD};function vD(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=G([a],r.shape),o=ZF({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Ro(o.shape,i),u=cT({inputs:{x:o},backend:n,attrs:{shape:l}}),c=xD({inputs:{a:r,b:u},backend:n}),h=BR({inputs:{x:c},backend:n}),d=xT({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=cT({inputs:{x:d},backend:n,attrs:{shape:l}}),f=mD({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const kD={kernelName:Xn,backendName:"webgl",kernelFunc:vD},wD={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:vD({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new fD(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},ID={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=iC(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=de().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new WC(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new MC(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(r,[s],s.dtype)}},AD=Ql,SD={kernelName:cn,backendName:"webgl",kernelFunc:function(e){ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=AD(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ND=Yl,CD={kernelName:hn,backendName:"webgl",kernelFunc:function(e){ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=ND(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},TD=$l,ED={kernelName:dn,backendName:"webgl",kernelFunc:function(e){ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=TD(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class RD{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const FD={kernelName:fn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,l=M(r.shape),u=new RD(l,a,i,o),c=cT({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const d=cT({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function DD(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=IE({inputs:{input:s},backend:n}),t=DD({inputs:{x:e},backend:n}),r=WE({inputs:{input:s},backend:n}),a=DD({inputs:{x:r},backend:n}),i=ZC({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return YR({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const OD={kernelName:fs,backendName:"webgl",kernelFunc:DD},LD={kernelName:pn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=IE({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=WE({inputs:{input:r},backend:s}),i=DD({inputs:{x:a},backend:s}),o=ZC({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return YR({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},MD={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return GR({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{D(a,e.shape,"All tensors passed to stack must have matching shapes"),F(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=UE({inputs:t.map((e=>{const t=GR({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class zD{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=yN(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class PD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=yN(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=TC("rc",s),l=TC("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===s?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const WD=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===M(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return YR({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PD(r.shape,a,i):new zD(r.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},VD={kernelName:gn,backendName:"webgl",kernelFunc:WD},BD=sT({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),UD={kernelName:bn,backendName:"webgl",kernelFunc:BD},GD={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=G(a,r.shape);let c=u;const h=Do(c,o);let d,p=r;if(null!=h&&(p=vT({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Lo(c.length,o),l.push(p)),Fo("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=lC(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=Eo(p.shape,c),s=M(t),a=cT({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),i=fT(a,xr(r.dtype),"prod",n);d=cT({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Ro(d.shape,u);d=cT({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},HD=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=uC(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},qD={kernelName:vn,backendName:"webgl",kernelFunc:HD},jD=nT({opSnippet:"return 1.0 / x;"}),XD={kernelName:wn,backendName:"webgl",kernelFunc:jD},KD=nT({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ZD={kernelName:In,backendName:"webgl",kernelFunc:KD},JD=nT({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),QD={kernelName:En,backendName:"webgl",kernelFunc:JD};class YD{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class $D{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const _D={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=de().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new $D(r.shape,l,u,a,i):new YD(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class eO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const tO={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new eO(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class nO{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class sO{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const rO={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=de().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new sO(r.shape,l,u,a,i):new nO(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class aO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const iO={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new aO(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class oO{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=yN(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class lO{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=TC("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=yN(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const uO={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=G(a,r.shape);if(0===i)return XC({inputs:{x:r},backend:n});const l=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lO(r.shape,o):new oO(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class cO{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const hO={kernelName:bs,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new cO(s.shape,a),[u,c]=Gu(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}},dO=nT({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),pO={kernelName:Fn,backendName:"webgl",kernelFunc:dO},fO=nT({opSnippet:"return inversesqrt(x);",cpuKernelImpl:cC}),mO={kernelName:Dn,backendName:"webgl",kernelFunc:fO};class gO{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=yN(r.length),l=yN(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const bO={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Yu(0,r,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const p=cT({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=cT({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new gO(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),x=cT({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),x}};class xO{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=yN(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const yO={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new xO(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],br(r.dtype,a.dtype))}},vO=nT({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${$u};\n  float scale = ${_u};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),kO={kernelName:Mn,backendName:"webgl",kernelFunc:vO},wO=nT({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:hC}),IO={kernelName:Bn,backendName:"webgl",kernelFunc:wO},AO=nT({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),SO={kernelName:Vn,backendName:"webgl",kernelFunc:AO},NO=nT({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),CO={kernelName:Pn,backendName:"webgl",kernelFunc:NO},TO=nT({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),EO={kernelName:Wn,backendName:"webgl",kernelFunc:TO},RO=nT({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),FO={kernelName:Un,backendName:"webgl",kernelFunc:RO},DO={kernelName:qn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;F(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=WD({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=Hu(c.shape,a,o,!1),d=qu(h.length,a.length,!1),p=ju(c.shape,a,o,!1),f=cT({inputs:{x:c},backend:n,attrs:{shape:h}}),m=vT({inputs:{x:f},backend:n,attrs:{perm:d}}),g=cT({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},OO={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=fC(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}},LO={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=mC(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},MO={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=gC(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},zO={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=gC(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},PO={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=Yu(0,r,o),d=new gO(u,l,r.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,r,i],a.dtype),f=cT({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},WO={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=G(i,r.shape)[0],l=kc(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=gE({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},VO="return sqrt(x);",BO=nT({opSnippet:VO,packedOpSnippet:VO,cpuKernelImpl:bC}),UO={kernelName:Gn,backendName:"webgl",kernelFunc:BO},GO={kernelName:_n,backendName:"webgl",kernelFunc:nT({opSnippet:"return x * x;"})},HO="return (a - b) * (a - b);",qO=sT({opSnippet:HO,packedOpSnippet:HO}),jO={kernelName:$n,backendName:"webgl",kernelFunc:qO},XO={kernelName:ms,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new MC(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class KO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=yN(n.length),a=yN(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const ZO={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:v}=$a(r.shape,a,i,o,l,u,c,h,d);let k;if(m)k=cT({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){F(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Va(x,y,v),t=gE({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});k=cT({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=ka(r.shape,r.dtype,e),s=xC(p,t,v,x);k=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new KO(x,v,p);k=n.runWebGLProgram(e,[r],r.dtype)}const w=cT({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),w}},JO={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=yC(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},QO={kernelName:ns,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=vC(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},YO={kernelName:ss,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=kC(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},$O=nT({opSnippet:"return tan(x);"}),_O={kernelName:as,backendName:"webgl",kernelFunc:$O},eL=nT({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),tL={kernelName:is,backendName:"webgl",kernelFunc:eL};class nL{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=yN(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function sL(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>Js(e))):e,s=ka(r.shape,r.dtype,t),i=IC(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new nL(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const rL={kernelName:os,backendName:"webgl",kernelFunc:sL};class aL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class iL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function oL(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function lL(e){let t=1;for(;t<e;)t*=2;return t}const uL={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=de().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=de().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>l){const e=n.readSync(r.dataId),[t,s]=AC(e,u,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,YR({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=M(u)/c,m=cT({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&oL(n,p);const g=lL(a),b=lL(c);let x=null;const y=()=>null===x?[m,m]:[m,x],v=(e,t,s)=>{const r=y(),a=new aL(s),i=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(a,r,"int32",i),oL(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,b])}for(let e=b;e>g;e/=2){const t=y(),s=new iL([f,e/2]),r=[[c],[null===x?1:0],[g]],a=x;x=n.runWebGLProgram(s,t,"int32",r),oL(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,x.shape)}let k=x;x=gE({inputs:{x},backend:n,attrs:{begin:0,size:[f,a]}}),oL(n,k);let w=mF({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});oL(n,m);const I=u.slice(0,-1);I.push(a),k=x,x=cT({inputs:{x},attrs:{shape:I},backend:n}),oL(n,k);const A=w;return w=cT({inputs:{x:w},attrs:{shape:I},backend:n}),oL(n,A),[w,x]}};class cL{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const hL={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=null!=u?u:[h,d],g=new cL(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[r,a],"float32")}},dL={kernelName:hs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;nN(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=NC(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},pL={kernelName:ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=gE({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),s=cT({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class fL{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const mL=[IT,ST,CT,ET,DT,MT,zT,PT,HT,qT,XT,ZT,QT,$T,eE,sE,rE,oE,lE,uE,dE,xE,yE,vE,SE,TE,FE,JC,LE,GE,ZE,_E,eR,tR,nR,sR,aR,oR,uR,pR,bR,xR,vR,IR,NR,CR,ER,FR,DR,LR,MR,PR,VR,UR,HR,XR,JR,$R,eF,sF,aF,lF,cF,hF,pF,gF,xF,vF,KC,kF,VE,IF,SF,CF,$C,EF,FF,DF,LF,zF,WF,BF,GF,jF,KF,JF,YF,$F,_F,nD,sD,rD,aD,iD,lD,hD,pD,wD,uT,ID,SD,CD,ED,wE,FD,LD,MD,VD,UD,tT,GD,qD,AE,gD,XD,ZD,QD,hT,_D,tO,rO,iO,uO,hO,pO,mO,bO,yO,kO,IO,SO,CO,EO,bE,kD,FO,DO,OO,LO,MO,zO,PO,WO,UO,GO,jO,XO,ZO,JO,QO,YO,yD,yT,_O,tL,rL,uL,hL,kT,dL,pL,{kernelName:ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Do([u],o);let h=r;null!=c&&(h=vT({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Lo(1,o)[0]);const d=Mc(h.shape,u,i),p=M([h.shape[u]]),f=cT({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=xr(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=Lc(o,a),c=new fL({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const d=HD({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=sL({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,t,p,r,a)},b=cT({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let x=b;if(null!=c){l.push(b);const e=Oo(c);x=vT({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},OD];for(const e of mL)Ts(e);var gL=[["Agaricus","Шампиньон"],["Amanita","Мухомор"],["Boletus","Боровик"],["Cortinarius","Паутинник"],["Entoloma","Энтолома"],["Hygrocybe","Гигроцибе"],["Lactarius","Млечник"],["Russula","Сыроежка"],["Suillus","Маслёнок"]];function bL(e){return xL.apply(this,arguments)}function xL(){return(xL=k(I().mark((function e(t){var n,s;return I().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,yL(t);case 2:return n=e.sent,s=Array.from(n).map((function(e,t){return[Math.floor(1e4*+e)/100,gL[t][0],gL[t][1]]})).sort((function(e,t){return t[0]-e[0]})).slice(0,3),e.abrupt("return",s);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function yL(e){return vL.apply(this,arguments)}function vL(){return(vL=k(I().mark((function e(t){var n,s,r,a,i;return I().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="/"===window.location.pathname?"/":window.location.pathname,e.next=3,Bg("".concat(window.location.protocol,"//").concat(window.location.host).concat(n,"static/model/model.json"));case 3:return s=e.sent,e.prev=4,r=za(t).resizeBilinear([224,224]).toFloat().expandDims(),a=s.predict(r),e.next=9,a.data();case 9:return i=e.sent,e.abrupt("return",i);case 13:e.prev=13,e.t0=e.catch(4),AL();case 16:case"end":return e.stop()}}),e,null,[[4,13]])})))).apply(this,arguments)}var kL=document.getElementById("root");function wL(){var e,t;EL(),kL.append(((t=function(){var e=document.createElement("div");e.classList.add("app__image-placeholder"),e.ondrop=function(e){return function(e){e.preventDefault(),SL(e.dataTransfer.items[0].getAsFile())}(e)},e.ondragover=function(e){return e.preventDefault()},e.ondragenter=function(e){return e.currentTarget.dataset.drag=!0},e.ondragleave=function(e){return e.currentTarget.dataset.drag=!1};var t=document.createElement("div");t.classList.add("image-file-icon"),e.append(t);var n=document.createElement("span");n.innerText="Перетащите изоюражение сюда",n.classList.add("app__drag-and-drop-text"),e.append(n);var s=document.createElement("span");return s.innerText="или",s.classList.add("app__drag-and-drop-text"),e.append(s),e}()).append(((e=document.createElement("button")).classList.add("app__browse-file-button"),e.classList.add("button"),e.innerText="Выберите файл",e.addEventListener("click",(function(){return(e=document.createElement("input")).type="file",e.accept=".jpg, .jpeg, .png",e.onchange=function(e){return SL(e.currentTarget.files[0])},e.click(),void e.remove();var e})),e)),t)),kL.append(function(){var e=document.createElement("div");e.innerText+="Чтобы определить гриб выберите изображение с помощью панели справа",e.classList.add("app__start-tip");var t=document.createElement("div");return t.classList.add("arrow-left-icon"),e.append(t),e}())}function IL(e,t){EL(),kL.append(function(e){var t=document.createElement("div");return t.classList.add("result__image-container"),e.classList.add("result__image"),t.append(e),t}(t)),kL.append(function(e){var t=document.createElement("div");t.classList.add("result__data-container");var n=document.createElement("span");n.classList.add("result__result-title"),n.innerText="Результаты: ",t.append(n),e.forEach((function(e){return t.append(function(e){var t=document.createElement("div");t.classList.add("result__item-container");var n=document.createElement("span");n.classList.add("result__item-probability"),n.innerText="".concat(e[0],"%"),t.append(n);var s=document.createElement("span");s.classList.add("result__item-title"),s.innerText=e[2],t.append(s),t.append(document.createElement("br"));var r=document.createElement("span");return r.classList.add("result__item-lat-titel"),r.innerText="(".concat(e[1],")"),t.append(r),t.append(function(e){var t=document.createElement("div");t.classList.add("result__links-container");var n=document.createElement("a");n.href="https://ru.wikipedia.org/wiki/".concat(e),n.target="_blank",n.classList.add("result__icon-link"),n.classList.add("wikipedia-icon"),t.append(n);var s=document.createElement("a");s.href="https://www.google.com/search?&q=".concat(e),s.target="_blank",s.classList.add("result__icon-link"),s.classList.add("google-icon"),t.append(s);var r=document.createElement("a");return r.href="https://mushroomobserver.org/observer/observation_search?pattern=".concat(e),r.target="_blank",r.classList.add("result__icon-link"),r.classList.add("mushroom-observer-icon"),t.append(r),t}(e[1])),t}(e))}));var s=document.createElement("button");return s.classList.add("result__restart-button"),s.classList.add("button"),s.innerText="Попробывать снова",s.onclick=function(){return wL()},t.append(s),t}(e))}function AL(){wL()}function SL(e){return NL.apply(this,arguments)}function NL(){return(NL=k(I().mark((function e(t){var n;return I().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return TL(),n=CL(t),e.next=4,bL(n);case 4:IL(e.sent,n);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function CL(e){var t=e.type.split("/")[0],n=document.createElement("img");if(FileReader&&e&&"image"===t){var s=new FileReader;s.onload=function(){n.src=s.result},s.readAsDataURL(e)}return n}function TL(){EL(),kL.append(function(){var e=document.createElement("div");e.classList.add("app__loader-container");var t=document.createElement("div");return t.classList.add("loader"),e.append(t),e}())}function EL(){kL.innerHTML=""}window.onload=function(){wL()}})(),webpackGhPages=s})();