/*! For license information please see main.bundle.js.LICENSE.txt */
var webpackGhPages;(()=>{var e={705:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,s,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);a&&i[u[0]]||(void 0!==r&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=r),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),s&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=s):u[4]="".concat(s)),t.push(u))}},t}},742:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},738:e=>{"use strict";e.exports=function(e){return e[1]}},933:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var s={},r={};function i(e,t){var n,a,i;return t?(i=0<=(e>>>=0)&&e<256)&&(a=r[e])?a:(n=l(e,(0|e)<0?-1:0,!0),i&&(r[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(a=s[e])?a:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return x}else{if(e<=-f)return w;if(e+1>=f)return y}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,a){return new n(e,t,a)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var c=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var s=o(c(n,8)),r=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(c(n,l));r=r.mul(d).add(o(h))}else r=(r=r.mul(s)).add(o(h))}return r.unsigned=t,r}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?u(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var b=i(0,!0);n.UZERO=b;var v=i(1);n.ONE=v;var _=i(1,!0);n.UONE=_;var k=i(-1);n.NEG_ONE=k;var y=l(-1,2147483647,!1);n.MAX_VALUE=y;var x=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=x;var w=l(0,-2147483648,!1);n.MIN_VALUE=w;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(w)){var t=o(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(c(e,6),this.unsigned),r=this,i="";;){var l=r.div(s),u=(r.sub(l.mul(s)).toInt()>>>0).toString(e);if((r=l).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(w)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(w)?w:this.not().add(v)},I.neg=I.negate,I.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,i=e.high>>>16,o=65535&e.high,c=e.low>>>16,u=0,d=0,p=0,f=0;return p+=(f+=r+(65535&e.low))>>>16,d+=(p+=s+c)>>>16,u+=(d+=n+o)>>>16,u+=t+i,l((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},I.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(w))return e.isOdd()?w:g;if(e.eq(w))return this.isOdd()?w:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,r=this.low>>>16,i=65535&this.low,c=e.high>>>16,u=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,v=0,_=0;return v+=(_+=i*p)>>>16,b+=(v+=r*p)>>>16,v&=65535,b+=(v+=i*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=r*d)>>>16,b&=65535,f+=(b+=i*u)>>>16,f+=n*p+s*d+r*u+i*c,l((v&=65535)<<16|(_&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,r;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return _;r=b}else{if(this.eq(w))return e.eq(v)||e.eq(k)?w:e.eq(w)?v:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?v:k:(s=this.sub(e.mul(n)),r=n.add(s.div(e)));if(e.eq(w))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),u=i<=48?1:c(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=u,this.unsigned)).mul(e);d.isZero()&&(d=v),r=r.add(d),s=s.sub(p)}return r},I.div=I.divide,I.modulo=function(e){return a(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return a(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return a(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return a(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},600:(e,t,n)=>{var a=n(906),s=n(930),r=n(319),i=n(866),o=n(217),l=n(977),c=n(84);c.alea=a,c.xor128=s,c.xorwow=r,c.xorshift7=i,c.xor4096=o,c.tychei=l,e.exports=c},906:function(e,t,n){var a;!function(e,s,r){function i(e){var t,n=this,a=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),a=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,a&&("object"==typeof a&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(a=function(){return l}.call(t,n,t,s))||(s.exports=a):this.alea=l}(0,e=n.nmd(e),n.amdD)},977:function(e,t,n){var a;!function(e,s,r){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(a=function(){return l}.call(t,n,t,s))||(s.exports=a):this.tychei=l}(0,e=n.nmd(e),n.amdD)},930:function(e,t,n){var a;!function(e,s,r){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(a=function(){return l}.call(t,n,t,s))||(s.exports=a):this.xor128=l}(0,e=n.nmd(e),n.amdD)},217:function(e,t,n){var a;!function(e,s,r){function i(e){var t=this;t.next=function(){var e,n,a=t.w,s=t.X,r=t.i;return t.w=a=a+1640531527|0,n=s[r+34&127],e=s[r=r+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[r]=n^e,t.i=r,n+(a^a>>>16)|0},function(e,t){var n,a,s,r,i,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),s=0,r=-32;r<l;++r)t&&(a^=t.charCodeAt((r+32)%t.length)),0===r&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,r>=0&&(i=i+1640531527|0,s=0==(n=o[127&r]^=a+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,r=512;r>0;--r)a=o[s+34&127],n=o[s=s+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[s]=a^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&(a.X&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(a=function(){return l}.call(t,n,t,s))||(s.exports=a):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},866:function(e,t,n){var a;!function(e,s,r){function i(e){var t=this;t.next=function(){var e,n,a=t.x,s=t.i;return e=a[s],n=(e^=e>>>7)^e<<24,n^=(e=a[s+1&7])^e>>>10,n^=(e=a[s+3&7])^e>>>3,n^=(e=a[s+4&7])^e<<7,e=a[s+7&7],n^=(e^=e<<13)^e<<9,a[s]=n,t.i=s+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&(a.x&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(a=function(){return l}.call(t,n,t,s))||(s.exports=a):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},319:function(e,t,n){var a;!function(e,s,r){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(a=function(){return l}.call(t,n,t,s))||(s.exports=a):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},84:(e,t,n)=>{var a;!function(s,r){var i,o=this,l=256,c=r.pow(l,6),u=r.pow(2,52),h=2*u,d=255;function p(e,t,n){var a=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,v(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),v(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,v(s)]}}():e,3),a),p=new f(a),_=function(){for(var e=p.g(6),t=c,n=0;e<u;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return _.int32=function(){return 0|p.g(4)},_.quick=function(){return p.g(4)/4294967296},_.double=_,b(v(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(r.random=e,t):e})(_,d,"global"in t?t.global:this==r,t.state)}function f(e){var t,n=e.length,a=this,s=0,r=a.i=a.j=0,i=a.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[r=d&r+e[s%n]+(t=i[s])],i[r]=t;(a.g=function(e){for(var t,n=0,s=a.i,r=a.j,i=a.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[r=d&r+t])+(i[r]=t)];return a.i=s,a.j=r,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],s=typeof e;if(t&&"object"==s)for(n in e)try{a.push(g(e[n],t-1))}catch(e){}return a.length?a:"string"==s?e:e+"\0"}function b(e,t){for(var n,a=e+"",s=0;s<a.length;)t[d&s]=d&(n^=19*t[d&s])+a.charCodeAt(s++);return v(t)}function v(e){return String.fromCharCode.apply(0,e)}if(r.seedrandom=p,b(r.random(),s),e.exports){e.exports=p;try{i=n(42)}catch(e){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}([],Math)},367:(e,t,n)=>{"use strict";n.d(t,{Z:()=>f});var a=n(738),s=n.n(a),r=n(705),i=n.n(r),o=n(742),l=n.n(o),c=new URL(n(832),n.b),u=new URL(n(4),n.b),h=i()(s()),d=l()(c),p=l()(u);h.push([e.id,'@font-face{font-family:"Quicksand";font-style:normal;font-weight:400;src:local(""),url('+d+') format("woff2"),url('+p+') format("woff")}',""]);const f=h},687:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var a=n(738),s=n.n(a),r=n(705),i=n.n(r)()(s());i.push([e.id,'body{margin:20px;color:#fff;font-family:"Quicksand",sans-serif;font-size:24px;font-weight:400;background-color:#1a1a1a}.title{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;margin:auto;font-size:36px}.webpack-logo{display:block;width:256px;margin:60px auto;-webkit-animation:5s linear 0s infinite rotating;animation:5s linear 0s infinite rotating}@-webkit-keyframes rotating{0%{-webkit-transform:rotate(0turn);transform:rotate(0turn)}100%{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes rotating{0%{-webkit-transform:rotate(0turn);transform:rotate(0turn)}100%{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}',""]);const o=i},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},i=[],o=0;o<e.length;o++){var l=e[o],c=a.base?l[0]+a.base:l[0],u=r[c]||0,h="".concat(c," ").concat(u);r[c]=u+1;var d=n(h),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var f=s(p,a);a.byIndex=o,t.splice(o,0,{identifier:h,updater:f,references:1})}i.push(h)}return i}function s(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,s){var r=a(e=e||[],s=s||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var o=n(r[i]);t[o].references--}for(var l=a(e,s),c=0;c<r.length;c++){var u=n(r[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}r=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,s&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},4:e=>{"use strict";e.exports="data:font/woff;base64,"},832:e=>{"use strict";e.exports="data:font/woff2;base64,"},650:(e,t,n)=>{"use strict";e.exports=n.p+"f9ef216bfac702623704.jpg"},410:()=>{},628:()=>{},601:()=>{},792:()=>{},963:()=>{},42:()=>{}},t={};function n(a){var s=t[a];if(void 0!==s)return s.exports;var r=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href;var a={};(()=>{"use strict";n.r(a);var e={};n.r(e),n.d(e,{assertParamsValid:()=>Er,computeFlatOffset:()=>Ur,computeOutShape:()=>$r,getNormalizedAxes:()=>Dr,isSliceContinous:()=>Wr,maskToAxes:()=>Ar,parseSliceParams:()=>Vr,sliceInfo:()=>Gr,startForAxis:()=>Br,startIndicesWithElidedDims:()=>Or,stopForAxis:()=>Pr,stopIndicesWithElidedDims:()=>Mr,stridesForAxis:()=>Lr,stridesWithElidedDims:()=>Rr});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Tu,computeOutShape:()=>Cu,segOpComputeOptimalWindowSize:()=>Su});var s={};n.r(s),n.d(s,{ERF_A1:()=>qc,ERF_A2:()=>Zc,ERF_A3:()=>Kc,ERF_A4:()=>Xc,ERF_A5:()=>Yc,ERF_P:()=>jc,PARALLELIZE_THRESHOLD:()=>Rc,SELU_SCALE:()=>Hc,SELU_SCALEALPHA:()=>Gc,applyActivation:()=>Il,assertAndGetBroadcastShape:()=>Tr,assertAxesAreInnerMostDims:()=>wo,assertParamsConsistent:()=>Ac,assignToTypedArray:()=>au,axesAreInnerMostDims:()=>_o,calculateShapes:()=>Vc,checkEinsumDimSizes:()=>cu,checkPadOnDimRoundingMode:()=>xi,combineLocations:()=>ko,complexWithEvenIndex:()=>eu,complexWithOddIndex:()=>tu,computeConv2DInfo:()=>di,computeConv3DInfo:()=>pi,computeDefaultPad:()=>fi,computeDilation2DInfo:()=>ci,computeOptimalWindowSize:()=>zc,computeOutAndReduceShapes:()=>yo,computeOutShape:()=>$c,computePool2DInfo:()=>ui,computePool3DInfo:()=>hi,convertConv2DDataFormat:()=>yi,decodeEinsumEquation:()=>ou,eitherStridesOrDilationsAreOne:()=>ki,expandShapeToKeepDim:()=>xo,exponent:()=>ru,exponents:()=>su,fromStringArrayToUint8:()=>Au,fromUint8ToStringArray:()=>Eu,getAxesPermutation:()=>Io,getBroadcastDims:()=>Sr,getComplexWithIndex:()=>nu,getEinsumComputePath:()=>uu,getEinsumPermutation:()=>lu,getFusedBiasGradient:()=>wl,getFusedDyActivation:()=>xl,getImageCenter:()=>Fc,getInnerMostAxes:()=>So,getPermuted:()=>Oc,getReductionAxes:()=>Cr,getReshaped:()=>Dc,getReshapedPermuted:()=>Mc,getSliceBeginCoords:()=>Lc,getSliceSize:()=>Bc,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>fu,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>mu,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>gu,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>_u,getSparseReshapeInputOutputMismatchErrorMessage:()=>yu,getSparseReshapeInputOutputMultipleErrorMessage:()=>ku,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>bu,getSparseReshapeNegativeOutputDimErrorMessage:()=>vu,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Nu,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>xu,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>wu,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Iu,getUndoAxesPermutation:()=>No,isIdentityPermutation:()=>hu,log:()=>_a,mergeRealAndImagArrays:()=>Jc,prepareAndValidate:()=>Pc,prepareSplitSize:()=>pu,segment_util:()=>t,shouldFuse:()=>Nl,slice_util:()=>e,splitRealAndImagArrays:()=>Qc,tupleValuesAreOne:()=>_i,upcastType:()=>fs,validateInput:()=>Uc,validateUpdateShape:()=>Wc,warn:()=>va});var r={};n.r(r),n.d(r,{addImpl:()=>V_,bincountImpl:()=>Dk,bincountReduceImpl:()=>Ok,ceilImpl:()=>Bk,concatImpl:()=>Hk,equalImpl:()=>Ty,expImpl:()=>By,expm1Impl:()=>Gy,floorImpl:()=>ox,gatherNdImpl:()=>mx,gatherV2Impl:()=>bx,greaterEqualImpl:()=>xx,greaterImpl:()=>_x,lessEqualImpl:()=>Dx,lessImpl:()=>Rx,linSpaceImpl:()=>Lx,logImpl:()=>Px,maxImpl:()=>tw,maximumImpl:()=>sw,minimumImpl:()=>fw,multiplyImpl:()=>ky,negImpl:()=>Iw,notEqualImpl:()=>Rw,prodImpl:()=>Hw,rangeImpl:()=>qw,rsqrtImpl:()=>rI,sigmoidImpl:()=>A_,simpleAbsImpl:()=>J_,sliceImpl:()=>$k,sparseFillEmptyRowsImpl:()=>NI,sparseReshapeImpl:()=>CI,sparseSegmentReductionImpl:()=>EI,sqrtImpl:()=>FI,squaredDifferenceImpl:()=>LI,stridedSliceImpl:()=>VI,stringNGramsImpl:()=>jI,stringSplitImpl:()=>KI,stringToHashBucketFastImpl:()=>YI,subImpl:()=>Xy,tileImpl:()=>nN,topKImpl:()=>rN,transposeImpl:()=>rk,uniqueImpl:()=>hN});var i=n(379),o=n.n(i),l=n(795),c=n.n(l),u=n(569),h=n.n(u),d=n(565),p=n.n(d),f=n(216),m=n.n(f),g=n(589),b=n.n(g),v=n(687),_={};_.styleTagTransform=b(),_.setAttributes=p(),_.insert=h().bind(null,"head"),_.domAPI=c(),_.insertStyleElement=m(),o()(v.Z,_),v.Z&&v.Z.locals&&v.Z.locals;var k=n(367),y={};y.styleTagTransform=b(),y.setAttributes=p(),y.insert=h().bind(null,"head"),y.domAPI=c(),y.insertStyleElement=m(),o()(k.Z,y),k.Z&&k.Z.locals&&k.Z.locals;class x{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class w{refCount(e){return I("refCount")}incRef(e){return I("incRef")}timerAvailable(){return!0}time(e){return I("time")}read(e){return I("read")}readSync(e){return I("readSync")}readToGPU(e,t){return I("readToGPU")}numDataIds(){return I("numDataIds")}disposeData(e,t){return I("disposeData")}write(e,t,n){return I("write")}move(e,t,n,a,s){return I("move")}memory(){return I("memory")}floatPrecision(){return I("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return I("dispose")}}function I(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function N(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,T(e,t,n)}function S(e,t,n){return Math.max(e,Math.min(t,n))}function C(e){return e%2==0?e:e+1}function T(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function E(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function A(e,t,n=""){E(F(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function $(e){E(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function R(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||H(e)&&!n)for(let a=0;a<e.length;++a)R(e[a],t,n);else t.push(e);return t}function z(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function F(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function D(e){return e%1==0}function O(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function M(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function L(e,t=(e=>0),n){return new Promise(((a,s)=>{let r=0;const i=()=>{if(e())return void a();r++;const o=t(r);null!=n&&r>=n?s():setTimeout(i,o)};i()}))}function B(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[a]=t/n,s}function P(e,t){const n=t.length;return E((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),E(e.every((e=>D(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function W(e,t){const n=[],a=[],s=null!=t&&Array.isArray(t)&&0===t.length,r=null==t||s?null:P(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=r){if(r[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==r[i]||r[i]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),r[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function U(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function V(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function G(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function H(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function j(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function q(e){return"string"==typeof e||e instanceof String}function Z(e){return"number"==typeof e}function K(e){return Array.isArray(e)?K(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Z(e)?"float32":q(e)?"string":"boolean"==typeof e?"bool":"float32"}function X(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Y(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function J(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function Q(e,t,n,a=!1){const s=new Array;if(1===t.length){const r=t[0]*(a?2:1);for(let t=0;t<r;t++)s[t]=n[e+t]}else{const r=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<r;t++)s[t]=Q(e+t*o,i,n,a)}return s}function ee(e,t,n=!1){if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Q(0,e,t,n)}function te(e,t){const n=ne(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ne(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ae(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ee(e,new Float32Array(n));if("int32"===t)return ee(e,new Int32Array(n));if("bool"===t)return ee(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function se(e){e.forEach((t=>{E(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function re(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function ie(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function oe(e){return e&&e.then&&"function"==typeof e.then}class le{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ce,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ue().getBool("IS_TEST")||ue().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ue().getBool("IS_TEST")||ue().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(oe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function ce(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function ue(){return de}let he,de=null;function pe(){if(null==he){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}he=e}return he}function fe(e,t){const n=function(){const e=pe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const me="Abs",ge="Acos",be="Acosh",ve="Add",_e="AddN",ke="All",ye="Any",xe="ArgMax",we="ArgMin",Ie="Asin",Ne="Asinh",Se="Atan",Ce="Atanh",Te="Atan2",Ee="AvgPool",Ae="AvgPoolGrad",$e="AvgPool3D",Re="AvgPool3DGrad",ze="BatchMatMul",Fe="BatchToSpaceND",De="Bincount",Oe="BroadcastArgs",Me="Cast",Le="Ceil",Be="ClipByValue",Pe="Complex",We="ComplexAbs",Ue="Concat",Ve="Conv2D",Ge="Conv2DBackpropFilter",He="Conv2DBackpropInput",je="Conv3D",qe="Conv3DBackpropFilterV2",Ze="Conv3DBackpropInputV2",Ke="Cos",Xe="Cosh",Ye="Cumprod",Je="Cumsum",Qe="CropAndResize",et="DenseBincount",tt="DepthToSpace",nt="DepthwiseConv2dNative",at="DepthwiseConv2dNativeBackpropFilter",st="DepthwiseConv2dNativeBackpropInput",rt="Diag",it="Dilation2D",ot="Dilation2DBackpropInput",lt="Dilation2DBackpropFilter",ct="RealDiv",ut="Einsum",ht="Elu",dt="EluGrad",pt="Erf",ft="Equal",mt="Exp",gt="ExpandDims",bt="Expm1",vt="FFT",_t="Fill",kt="FlipLeftRight",yt="Floor",xt="FloorDiv",wt="FusedBatchNorm",It="GatherV2",Nt="GatherNd",St="Greater",Ct="GreaterEqual",Tt="Identity",Et="IFFT",At="Imag",$t="IsFinite",Rt="IsInf",zt="IsNan",Ft="LeakyRelu",Dt="Less",Ot="LessEqual",Mt="LinSpace",Lt="Log",Bt="Log1p",Pt="LogicalAnd",Wt="LogicalNot",Ut="LogicalOr",Vt="LRN",Gt="LRNGrad",Ht="Max",jt="Maximum",qt="MaxPool",Zt="MaxPoolGrad",Kt="MaxPool3D",Xt="MaxPool3DGrad",Yt="MaxPoolWithArgmax",Jt="Mean",Qt="Min",en="Minimum",tn="MirrorPad",nn="Mod",an="Multinomial",sn="Multiply",rn="Neg",on="NotEqual",ln="NonMaxSuppressionV3",cn="NonMaxSuppressionV4",un="NonMaxSuppressionV5",hn="OnesLike",dn="OneHot",pn="Pack",fn="PadV2",mn="Pow",gn="Prelu",bn="Prod",vn="Range",_n="Real",kn="Reciprocal",yn="Relu",xn="Reshape",wn="ResizeNearestNeighbor",In="ResizeNearestNeighborGrad",Nn="ResizeBilinear",Sn="ResizeBilinearGrad",Cn="Relu6",Tn="Reverse",En="Round",An="Rsqrt",$n="ScatterNd",Rn="Select",zn="Selu",Fn="Slice",Dn="Sin",On="Sinh",Mn="Sign",Ln="Sigmoid",Bn="Softplus",Pn="Sqrt",Wn="Sum",Un="SpaceToBatchND",Vn="SplitV",Gn="Softmax",Hn="SparseFillEmptyRows",jn="SparseReshape",qn="SparseSegmentMean",Zn="SparseSegmentSum",Kn="SparseToDense",Xn="SquaredDifference",Yn="Square",Jn="StridedSlice",Qn="StringNGrams",ea="StringSplit",ta="StringToHashBucketFast",na="Sub",aa="Tan",sa="Tanh",ra="Tile",ia="TopK",oa="Transform",la="Transpose",ca="Unique",ua="Unpack",ha="UnsortedSegmentSum",da="ZerosLike",pa="Step",fa="RotateWithOffset",ma="_FusedMatMul",ga="FusedConv2D",ba="FusedDepthwiseConv2D";function va(...e){ue().getBool("IS_TEST")||ue().getBool("PROD")||console.warn(...e)}function _a(...e){ue().getBool("IS_TEST")||ue().getBool("PROD")||console.log(...e)}const ka=fe("kernelRegistry",(()=>new Map)),ya=fe("gradRegistry",(()=>new Map));function xa(e,t){const n=Ca(e,t);return ka.get(n)}function wa(e){return ya.get(e)}function Ia(e){const t=ka.entries(),n=[];for(;;){const{done:a,value:s}=t.next();if(a)break;const[r,i]=s,[o]=r.split("_");o===e&&n.push(i)}return n}function Na(e){const{kernelName:t,backendName:n}=e,a=Ca(t,n);ka.has(a)&&va(`The kernel '${t}' for backend '${n}' is already registered`),ka.set(a,e)}function Sa(e){const{kernelName:t}=e;ya.has(t)&&ue().getBool("DEBUG")&&va(`Overriding the gradient for '${t}'`),ya.set(t,e)}function Ca(e,t){return`${t}_${e}`}var Ta=n(933);const Ea=n.n(Ta)()||Ta;function Aa(e){return Ea.fromString(e,!0,16)}const $a=Aa("c3a5c85c97cb3127"),Ra=Aa("b492b66fbe98f273"),za=Aa("9ae16a3b2f90404f");function Fa(e){return e.xor(e.shru(47))}function Da(e,t,n){const a=e.slice(t,t+n);return Ea.fromBytes(Array.from(a),!0,!0)}function Oa(e,t){return Da(e,t,8)}function Ma(e,t){return Da(e,t,4)}function La(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ba(e,t,n=Aa("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let s=t.xor(a).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Pa(e,t,n,a){return function(e,t,n,a,s,r){s=s.add(e),r=La(r.add(s).add(a),21);const i=s;return s=(s=s.add(t)).add(n),r=r.add(La(s,44)),[s.add(a),r.add(i)]}(Oa(e,t),Oa(e,t+8),Oa(e,t+16),Oa(e,t+24),n,a)}function Wa(e,t=e.length){const n=Ea.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=za.add(2*t),a=Oa(e,0).add(za),s=Oa(e,t-8);return Ba(La(s,37).mul(n).add(a),La(a,25).add(s).mul(n),n)}if(t>=4){const n=za.add(2*t);return Ba(Ma(e,0).shl(3).add(t),Ma(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Fa(za.mul(n).xor($a.mul(a))).mul(za)}return za}(e,t):function(e,t=e.length){const n=za.add(2*t),a=Oa(e,0).mul(Ra),s=Oa(e,8),r=Oa(e,t-8).mul(n),i=Oa(e,t-16).mul(za);return Ba(La(a.add(s),43).add(La(r,30)).add(i),a.add(La(s.add(za),18)).add(r),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=za.add(2*t),a=Oa(e,0).mul(za),s=Oa(e,8),r=Oa(e,t-8).mul(n),i=Oa(e,t-16).mul(za),o=La(a.add(s),43).add(La(r,30)).add(i),l=Ba(o,a.add(La(s.add(za),18)).add(r),n),c=Oa(e,16).mul(n),u=Oa(e,24),h=o.add(Oa(e,t-32)).mul(n),d=l.add(Oa(e,t-24)).mul(n);return Ba(La(c.add(u),43).add(La(h,30)).add(d),c.add(La(u.add(a),18)).add(h),n)}(e,t);let a=n,s=n.mul(Ra).add(113),r=Fa(s.mul(za).add(113)).mul(za),i=[Ea.UZERO,Ea.UZERO],o=[Ea.UZERO,Ea.UZERO];a=a.mul(za).add(Oa(e,0));let l=0;const c=64*(t-1>>6),u=c+(t-1&63)-63;do{a=La(a.add(s).add(i[0]).add(Oa(e,l+8)),37).mul(Ra),s=La(s.add(i[1]).add(Oa(e,l+48)),42).mul(Ra),a=a.xor(o[1]),s=s.add(i[0]).add(Oa(e,l+40)),r=La(r.add(o[0]),33).mul(Ra),i=Pa(e,l,i[1].mul(Ra),a.add(o[0])),o=Pa(e,l+32,r.add(o[1]),s.add(Oa(e,l+16))),[r,a]=[a,r],l+=64}while(l!==c);const h=Ra.add(r.and(255).shl(1));return l=u,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),a=La(a.add(s).add(i[0]).add(Oa(e,l+8)),37).mul(h),s=La(s.add(i[1]).add(Oa(e,l+48)),42).mul(h),a=a.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Oa(e,l+40))),r=La(r.add(o[0]),33).mul(h),i=Pa(e,l,i[1].mul(h),a.add(o[0])),o=Pa(e,l+32,r.add(o[1]),s.add(Oa(e,l+16))),[r,a]=[a,r],Ba(Ba(i[0],o[0],h).add(Fa(s).mul($a)).add(r),Ba(i[1],o[1],h).add(a),h)}function Ua(e,t){return"string"===t?Ha(e):Va([e],t)}function Va(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=R(e)),ue().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ga(){return ue().platform.now()}function Ha(e,t="utf-8"){return t=t||"utf-8",ue().platform.encode(e,t)}function ja(e,t="utf-8"){return t=t||"utf-8",ue().platform.decode(e,t)}class qa{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ka)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let r;const i=Ga();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();r=Promise.resolve({kernelMs:Ga()-i})}if(ue().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){const n=a[t];n.data().then((t=>{Za(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:r.then((e=>e.kernelMs)),extraInfo:r.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:s,extraInfo:r}=e;n.forEach((e=>{Promise.all([e.data(),a,r]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Za(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}class Ka{logKernelProfile(e,t,n,a,s,r){const i="number"==typeof a?M(`${a}ms`,9):a.error,o=M(e,25),l=t.rank,c=t.size,u=M(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const a=n.shape||t.shape,s=a.length;h+=`${e}: ${s}D ${s>0?a:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${u}\t%c${c}\t%c${h}\t%c${r}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Xa(e,t,n,a){const s=J(t),r=function(e,t,n,a){const s=z(t),r=a[a.length-1],i=new Array(r).fill(0),o=t.length,l="complex64"===n?es(e):e;if(o>1)for(let e=0;e<s/r;e++){const t=e*r;for(let e=0;e<r;e++)i[e]=Math.max(i[e],Ya(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Qa(e,t,n,s,r),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ya(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:q(e)?`'${e}'`:"bool"===n?Ja(e):parseFloat(e.toFixed(7)).toString(),M(a,t)}function Ja(e){return 0===e?"false":"true"}function Qa(e,t,n,a,s,r=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Ya(es(e)[0],0,n)]:"bool"===n?[Ja(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let a=Array.from(e.slice(0,t)),r=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(a=es(a),r=es(r)),["["+a.map(((e,t)=>Ya(e,s[t],n))).join(", ")+", ..., "+r.map(((e,t)=>Ya(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?es(e):Array.from(e)).map(((e,t)=>Ya(e,s[t],n))).join(", ")+"]"]}const c=t.slice(1),u=a.slice(1),h=a[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const a=t*h,r=a+h;d.push(...Qa(e.slice(a,r),c,n,u,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const a=t*h,r=a+h;d.push(...Qa(e.slice(a,r),c,n,u,s,t===o-1))}}else for(let t=0;t<o;t++){const a=t*h,r=a+h;d.push(...Qa(e.slice(a,r),c,n,u,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":f),d}function es(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ts{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=z(e),null!=n){const e=n.length;E(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||V(t,this.size),this.strides=J(e)}set(e,...t){0===t.length&&(t=[0]),E(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ns().makeTensor(this.values,this.shape,this.dtype)}}let ns=null,as=null,ss=null;class rs{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=z(e),this.strides=J(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return as.buffer(this.shape,this.dtype,e)}bufferSync(){return as.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ee(this.shape,e,"complex64"===this.dtype)}arraySync(){return ee(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=ns().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ja(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ns().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ns().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ja(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ns().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ns().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return as.print(this,e)}clone(){return this.throwIfDisposed(),as.clone(this)}toString(e=!1){return Xa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),as.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ns().makeVariable(this,e,t,n)}}function is(){return fe("Tensor",(()=>rs))}Object.defineProperty(rs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),is();class os extends rs{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!F(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ns().disposeTensor(this),this.dataId=e.dataId,ns().incRef(this,null)}dispose(){ns().disposeVariable(this),this.isDisposedInternal=!0}}var ls,cs,us,hs,ds;Object.defineProperty(os,Symbol.hasInstance,{value:e=>e instanceof rs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ls||(ls={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(cs||(cs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(us||(us={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(hs||(hs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ds||(ds={}));const ps={float32:hs,int32:cs,bool:us,complex64:ds};function fs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ps[e][t]}function ms(e){return fs(e,"int32")}function gs(e,t){if(e.dtype===t.dtype)return[e,t];const n=fs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function bs(e,t){return t.some((t=>t.id===e.id))}function vs(e){const t=[];return _s(e,t,new Set),t}function _s(e,t,n){if(null==e)return;if(e instanceof rs)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const a=s[e];n.has(a)||(n.add(a),_s(a,t,n))}}function ks(e){return null!=e.kernelName}class ys{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class xs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ys}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(va(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new qa(this.backendInstance),!0}setupRegisteredKernels(){Ia(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ia(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof w||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,va(`Initialization of backend ${e} failed`),va(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return va(`Initialization of backend ${e} failed`),va(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:s}=this.initializeBackend(n);if(s||a)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,s=this.readSync(t),r=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return xs.nextTensorId++}nextVariableId(){return xs.nextVariableId++}clone(e){const t=Is.runKernel(Tt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Is.runKernel(Me,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==xa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-s-r;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),s=this.state.numBytes,r=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ks(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ks(e)){const{kernelName:t,inputs:s,attrs:r}=e;null==this.backendName&&this.backend;const l=xa(t,this.backendName);E(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:r,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const c=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:a}=e;return this.makeTensorFromDataId(t,n,a)}));if(a){const e=this.getTensorsForGradient(t,s,c);n=this.saveTensorsForBackwardMode(e)}return c}}else{const{forwardFunc:t}=e,s=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:c,attrs:u}=e,h=ks(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,c,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),a&&this.addTapeNode(l,c,t,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const a=wa(e);if(null!=a){const e=a.inputsToSave||[],s=a.outputsToSave||[];let r;a.saveAllInputs?(E(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),r=Object.keys(t).map((e=>t[e]))):r=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return r.concat(i)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let s=e;"string"===n&&q(e[0])&&(s=e.map((e=>Ha(e))));const r=a.write(s,t,n),i=new rs(t,n,r,this.nextTensorId());if(this.trackTensor(i,a),"string"===n){const e=this.state.tensorInfo.get(r),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,a){const s=new rs(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,a),s}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const s=new os(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*j(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof os||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*j(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,s,r){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=wa(e);null!=o&&(a=o.gradFunc),null!=a&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=ne(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],s,r))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=vs(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n,a=!1){if(E(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));E(s instanceof rs,(()=>"The result y returned by f() must be a tensor."));const r=function(e,t,n){const a={},s={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){const r=e[n],i=r.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){r.outputs.forEach((e=>a[e.id]=!0)),o=!0,s[r.id]=!0;break}if(o)break}}const r={};r[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(r[n.outputs[e].id]){for(const e in a)r[a[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];a[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!a&&0===r.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=te(z(e),"float32");return Is.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,a){for(let s=t.length-1;s>=0;s--){const r=t[s],i=[];if(r.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==r.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const o=r.gradient(i);for(const t in r.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=r.inputs[t];if(!F(s.shape,i.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=a(t,s),t.dispose()}}}}(e,r,(e=>this.tidy(e)),Ns);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:a}}))}customGrad(e){return E(X(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;E(t.every((e=>e instanceof rs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const a={};return t.forEach(((e,t)=>{a[t]=e})),this.runKernelFunc({forwardFunc:(a,s)=>(n=e(...t,s),E(n.value instanceof rs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),E(X(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{const s=n.gradFunc(e,a),r=Array.isArray(s)?s:[s];E(r.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),E(r.every((e=>e instanceof rs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return r.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ga(),n=await this.backend.time(e);return n.wallMs=Ga()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ys;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ws(){const e=pe();if(null==e._tfengine){const t=new le(e);e._tfengine=new xs(t)}var t;return t=e._tfengine.ENV,de=t,ns=()=>e._tfengine,e._tfengine}xs.nextTensorId=0,xs.nextVariableId=0;const Is=ws();function Ns(e,t){const n={a:e,b:t};return Is.runKernel(ve,n)}function Ss(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Cs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ts=ue();function Es(e,t){let n=e;if(H(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||H(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&ue().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&As(e,a,[]),a}function As(e,t,n){if(n=n||[],!Array.isArray(e)&&!H(e))return void E(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));E(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),E(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const a=t.slice(1);for(let t=0;t<e.length;++t)As(e[t],a,n.concat(t))}function $s(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function Rs(e,t,n,a="numeric"){if(e instanceof rs)return $s(a,e.dtype,t,n),e;let s=K(e);if("string"!==s&&["bool","int32","float32"].indexOf(a)>=0&&(s=a),$s(a,s,t,n),null==e||!H(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const r=Es(e,s);H(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Va(e,s):R(e,[],!0);return Is.makeTensor(i,r,s)}function zs(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Rs(e,`${t}[${s}]`,n,a)))}function Fs(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{Is.startScope(n);try{const t=a(...e);return oe(t)&&console.error("Cannot return a Promise inside of tidy."),Is.endScope(t),t}catch(e){throw Is.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Ts.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ts.registerFlag("IS_BROWSER",(()=>Cs())),Ts.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ts.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ts.registerFlag("PROD",(()=>!1)),Ts.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ts.getBool("DEBUG"))),Ts.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ts.registerFlag("IS_TEST",(()=>!1)),Ts.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Ts.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ts.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Ds=Fs({complex_:function(e,t){const n=Rs(e,"real","complex"),a=Rs(t,"imag","complex");A(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const s={real:n,imag:a};return Is.runKernel(Pe,s)}});function Os(e,t,n,a){if(null==a&&(a=K(e)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!H(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){se(t);const e=z(t),a=z(n);E(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let e=0;e<n.length;++e){const a=n[e],s=e!==n.length-1||a!==z(t.slice(e));E(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return H(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?Va(e,a):R(e,[],!0),Is.makeTensor(e,t,a)}function Ms(e,t,n){return Os(e,t,Es(e,n),n)}async function Ls(e,t){const n=[],a=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let r=0;r<s.length;++r){const i=s[r],o=Array.isArray(e)?e[r].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,a=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],r=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(r,s),s+=4,a.set(n,s),s+=n.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Bs(await Promise.all(a)),specs:n}}function Bs(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const a=new Uint8Array(t);let s=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),a.buffer}const Ps="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ws(e){return Ps?Buffer.byteLength(e):new Blob([e]).size}function Us(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let a=0;return e.forEach((e=>{n.set(new Uint8Array(e),a),a+=e.byteLength})),n.buffer}function Vs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Gs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ws(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ws(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Hs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Hs.instance&&(Hs.instance=new Hs),Hs.instance}static registerSaveRouter(e){Hs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Hs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Hs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Hs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?Hs.getInstance().loadRouters:Hs.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&a.push(s)})),a}}const js="tensorflowjs",qs="models_store",Zs="model_info_store";function Ks(){if(!ue().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Xs(e){const t=e.result;t.createObjectStore(qs,{keyPath:"modelPath"}),t.createObjectStore(Zs,{keyPath:"modelPath"})}class Ys{constructor(e){if(this.indexedDB=Ks(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(js,1);a.onupgradeneeded=()=>Xs(a),a.onsuccess=()=>{const s=a.result;if(null==t){const t=s.transaction(qs,"readonly"),a=t.objectStore(qs).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(s.close(),n(a.error)),t.oncomplete=()=>s.close()}else{const a=Gs(t),r=s.transaction(Zs,"readwrite");let i=r.objectStore(Zs);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:a});let l;o.onsuccess=()=>{l=s.transaction(qs,"readwrite");const o=l.objectStore(qs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});o.onsuccess=()=>e({modelArtifactsInfo:a}),o.onerror=e=>{i=r.objectStore(Zs);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),r.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},a.onerror=e=>n(a.error)}))}}Ys.URL_SCHEME="indexeddb://";const Js=e=>{return ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ys.URL_SCHEME)?(t=e.slice(Ys.URL_SCHEME.length),new Ys(t)):null;var t};Hs.registerSaveRouter(Js),Hs.registerLoadRouter(Js);class Qs{constructor(){this.indexedDB=Ks()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(js,1);n.onupgradeneeded=()=>Xs(n),n.onsuccess=()=>{const a=n.result,s=a.transaction(Zs,"readonly"),r=s.objectStore(Zs).getAll();r.onsuccess=()=>{const t={};for(const e of r.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},r.onerror=e=>(a.close(),t(r.error)),s.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ys.URL_SCHEME)?t.slice(Ys.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(js,1);a.onupgradeneeded=()=>Xs(a),a.onsuccess=()=>{const s=a.result,r=s.transaction(Zs,"readwrite"),i=r.objectStore(Zs),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const a=i.delete(e),r=()=>{l=s.transaction(qs,"readwrite");const a=l.objectStore(qs).delete(e);a.onsuccess=()=>t(o.result.modelArtifactsInfo),a.onerror=e=>n(o.error)};a.onsuccess=r,a.onerror=e=>(r(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),r.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},a.onerror=e=>n(a.error)}))}}const er="/",tr="tensorflowjs_models",nr="info",ar="model_topology",sr="weight_specs",rr="weight_data",ir="model_metadata";function or(e){return{info:[tr,e,nr].join(er),topology:[tr,e,ar].join(er),weightSpecs:[tr,e,sr].join(er),weightData:[tr,e,rr].join(er),modelMetadata:[tr,e,ir].join(er)}}function lr(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function cr(e){const t=e.split(er);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(er)}class ur{constructor(e){if(!ue().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=or(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=Gs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ps)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:a}}catch(e){throw lr(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ps){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(r),t}}ur.URL_SCHEME="localstorage://";const hr=e=>{return ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ur.URL_SCHEME)?(t=e.slice(ur.URL_SCHEME.length),new ur(t)):null;var t};Hs.registerSaveRouter(hr),Hs.registerLoadRouter(hr);class dr{constructor(){E(ue().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),E("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=tr+er,n=er+nr;for(let a=0;a<this.LS.length;++a){const s=this.LS.key(a);s.startsWith(t)&&s.endsWith(n)&&(e[cr(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=or(e=(t=e).startsWith(ur.URL_SCHEME)?t.slice(ur.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const a=JSON.parse(this.LS.getItem(n.info));return lr(n),a}}class pr{constructor(){this.managers={}}static getInstance(){return null==pr.instance&&(pr.instance=new pr),pr.instance}static registerManager(e,t){E(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),E(e.length>0,(()=>"scheme must not be an empty string."));const n=pr.getInstance();E(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class fr{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(ue().get("IS_BROWSER")){ue().setPlatform("browser",new fr);try{pr.registerManager(ur.URL_SCHEME,new dr)}catch(e){}try{pr.registerManager(Ys.URL_SCHEME,new Qs)}catch(e){}}let mr;function gr(e,t="float32",n){return t=t||"float32",se(e),new ts(e,t,n)}ue().get("IS_NODE")&&!ue().get("IS_BROWSER")&&ue().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ue().global.fetch?ue().global.fetch(e,t):(null==mr&&(mr=n(410)),mr(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const br=Fs({cast_:function(e,t){const n=Rs(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},s={dtype:t};return Is.runKernel(Me,a,s)}}),vr=Fs({clone_:function(e){const t={x:Rs(e,"x","clone","string_or_numeric")};return Is.runKernel(Tt,t)}});function _r(e){return new Promise((e=>setTimeout(e))).then(e)}ws(),as={buffer:gr,cast:br,clone:vr,print:function(e,t=!1){console.log(e.toString(t))}};class kr{constructor(e){if(!ue().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(kr.URL_SCHEME)&&(e=e.slice(kr.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Vs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await _r((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await _r((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Gs(e)}}}}function yr(e,t,n,a){!function(e){E(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){E(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),E(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),E(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let s=0;return Promise.all(e.map((r=>(r.then((r=>{const i=n+ ++s/e.length*(a-n);return t(i),r})),r))))}async function xr(e,t){null==t&&(t={});const n=null==t.fetchFunc?ue().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(a):await yr(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await yr(s,t.onProgress,.5,1)}kr.URL_SCHEME="downloads://",Hs.registerSaveRouter((e=>ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(kr.URL_SCHEME)?function(e="model"){return new kr(e)}(e.slice(kr.URL_SCHEME.length)):null));class wr{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(E("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ue().platform.fetch,E(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&E(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Vs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Gs(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[a,s]=await t(e.weightsManifest);n.weightSpecs=a,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,r=[];for(const t of e)r.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+a);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[r,Us(await xr(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ir(e){return null!=e.match(wr.URL_SCHEME_REGEX)}wr.URL_SCHEME_REGEX=/^https?:\/\//;const Nr=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ir(e))):Ir(e),n)return function(e,t){return new wr(e,t)}(e,t)}return null};function Sr(e,t){const n=e.length,a=[];for(let s=0;s<n;s++){const r=n-1-s,i=e[r]||1;(t[t.length-1-s]||1)>1&&1===i&&a.unshift(r)}return a}function Cr(e,t){const n=[];for(let a=0;a<t.length;a++){const s=e[e.length-a-1],r=t.length-a-1,i=t[r];(null==s||1===s&&i>1)&&n.unshift(r)}return n}function Tr(e,t){const n=[],a=Math.max(e.length,t.length);for(let s=0;s<a;s++){let a=e[e.length-s-1];null==a&&(a=1);let r=t[t.length-s-1];if(null==r&&(r=1),1===a)n.unshift(r);else if(1===r)n.unshift(a);else{if(a!==r)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(a)}}return n}function Er(e,t,n){const a=e.shape.length;E(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),E(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)E(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Ar(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function $r(e,t,n){const a=[];for(let s=0;s<e.length;s++)a[s]=Math.ceil((t[s]-e[s])/n[s]);return a}function Rr(e,t,n,a){const s=[...e];for(let e=s.length;e<a.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function zr(e,t,n){return n<=e?n:n-(t-1)}function Fr(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Dr(e,t,n,a,s,r,i,o,l){const c=e.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;u=Or(i,l,c,a,e),h=Mr(o,l,c,s,e),d=Rr(r,l,c,e)}else for(let t=0;t<c;t++)u[t]=Br(i,a,r,e,t,l),h[t]=Pr(o,s,r,e,t,l),d[t]=Lr(r,t,l);return{begin:u,end:h,strides:d}}function Or(e,t,n,a,s){const r=[...s],i=Fr(n,t);for(let s=0;s<r.length;s++)if(i.indexOf(s)>-1)r[s]=0;else{const i=zr(t,n,s);let o=a[i];e&1<<i&&(o=0),r[s]=o}return r}function Mr(e,t,n,a,s){const r=[...s],i=Fr(n,t);for(let s=0;s<r.length;s++)if(i.indexOf(s)>-1)r[s]=Number.MAX_SAFE_INTEGER;else{const i=zr(t,n,s);let o=a[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),r[s]=o}for(let e=0;e<r.length;e++){const t=s[e];r[e]<0&&(r[e]+=t),r[e]=S(0,r[e],s[e])}return r}function Lr(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Br(e,t,n,a,s,r){let i=t[s];const o=n[s]||1;(e&1<<s||r&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[s];return i<0&&(i+=l),i=S(0,i,l-1),i}function Pr(e,t,n,a,s,r){let i=t[s];const o=n[s]||1;(e&1<<s||r&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[s];return i<0&&(i+=l),i=o>0?S(0,i,l):S(-1,i,l-1),i}function Wr(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let s=a+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Ur(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Vr(e,t,n){let a;const s=e.shape.length;let r;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{E(-1!==e,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,r=r.map(((t,n)=>t>=0?t:(E(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,r]}function Gr(e,t,n,a,s,r,i,o,l){let c;if(null==a?(c=new Array(t.length),c.fill(1)):c=a,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:s,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)u&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],r=[d.strides[t]>0?0:-1,d.strides[t]>0?a:a-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?a+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=a)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Hr(d.begin[t],0,d.strides[t],a,s,r),d.end[t]=Hr(d.end[t],1,d.strides[t],a,s,r);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===a;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&a>=0&&(o=d.strides[t]<0?-a:a,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(g[t]):-2===t&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Hr(e,t,n,a,s,r){if(s[t])return n>0?r[t]:r[t+1&1];{const t=e<0?a+e:e;return t<r[0]?r[0]:t>r[1]?r[1]:t}}Hs.registerSaveRouter(Nr),Hs.registerLoadRouter(Nr);class jr{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class qr{constructor(){this.classNameMap={}}static getMap(){return null==qr.instance&&(qr.instance=new qr),qr.instance}static register(e){qr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Zr(e){E(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),E("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),E(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),qr.register(e)}function Kr(){return Is}function Xr(){return Is.memory()}function Yr(e,t){return Is.tidy(e,t)}function Jr(e){vs(e).forEach((e=>e.dispose()))}function Qr(e){return Is.keep(e)}function ei(e,t,n=1){return Is.registerBackend(e,t,n)}function ti(e){return Is.customGrad(e)}function ni(e,t){if((H(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&H(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Os(e,[],[],t)}ss=function(e){ue().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class ai extends jr{minimize(e,t=!1,n){const{value:a,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Jr(s),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){E(X(e),(()=>"The f passed in variableGrads(f) must be a function")),E(null==t||Array.isArray(t)&&t.every((e=>e instanceof os)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Is.registeredVariables)t.push(Is.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,s=t.length;E((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:r,grads:i}=Is.gradients(e,t,null,!0);E(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),E(0===r.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${r.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:r,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Jr(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ni(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ai,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const si=Fs({abs_:function(e){const t=Rs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Is.runKernel(We,e)}{const e={x:t};return Is.runKernel(me,e)}}}),ri=Fs({add_:function(e,t){let n=Rs(e,"a","add"),a=Rs(t,"b","add");[n,a]=gs(n,a);const s={a:n,b:a};return Is.runKernel(ve,s)}}),ii=Fs({all_:function(e,t=null,n=!1){const a={x:Rs(e,"x","all","bool")},s={axis:t,keepDims:n};return Is.runKernel(ke,a,s)}}),oi=Fs({any_:function(e,t=null,n=!1){const a={x:Rs(e,"x","any","bool")},s={axis:t,keepDims:n};return Is.runKernel(ye,a,s)}}),li=Fs({argMax_:function(e,t=0){const n={x:Rs(e,"x","argMax")},a={axis:t};return Is.runKernel(xe,n,a)}});function ci(e,t,n,a,s="NHWC",r){return di(e,[...t,e[3]],n,r,a,null,null,yi(s))}function ui(e,t,n,a,s,r,i="channelsLast"){const[o,l]=mi(t);let c;if("channelsLast"===i)c=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);c=[o,l,e[1],e[1]]}return di(e,c,n,a,s,r,!1,i)}function hi(e,t,n,a,s,r,i="NDHWC"){const[o,l,c]=gi(t);let u,h;if("NDHWC"===i)h="channelsLast",u=[o,l,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",u=[o,l,c,e[1],e[1]]}return pi(e,u,n,a,s,!1,h,r)}function di(e,t,n,a,s,r,i=!1,o="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,c,u,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,c,u]=e}const[d,p,,f]=t,[m,g]=mi(n),[b,v]=mi(a),_=bi(d,b),k=bi(p,v),{padInfo:y,outHeight:x,outWidth:w}=function(e,t,n,a,s,r,i,o,l){let c,u,h;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,a,s){null==a&&(a=fi(e,t,n));const r=e[1];return[vi((e[0]-t+2*a)/n+1,s),vi((r-t+2*a)/n+1,s)]}([t,n],r,a,e,o);u=s[0],h=s[1]}else if("same"===e){u=Math.ceil(t/a),h=Math.ceil(n/s);const e=Math.max(0,(u-1)*a+r-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);c={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-r+1)/a),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];c={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},u=vi((t-r+d+p)/a+1,o),h=vi((n-i+f+m)/s+1,o)}}return{padInfo:c,outHeight:u,outWidth:h}}(s,c,u,m,g,_,k,r,o),I=i?f*h:f;let N;return"channelsFirst"===o?N=[l,I,x,w]:"channelsLast"===o&&(N=[l,x,w,I]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:u,inChannels:h,outHeight:x,outWidth:w,outChannels:I,padInfo:y,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:_,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:v,inShape:e,outShape:N,filterShape:t}}function pi(e,t,n,a,s,r=!1,i="channelsLast",o){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,c,u,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,c,u,h]=e}const[p,f,m,,g]=t,[b,v,_]=gi(n),[k,y,x]=gi(a),w=bi(p,k),I=bi(f,y),N=bi(m,x),{padInfo:S,outDepth:C,outHeight:T,outWidth:E}=function(e,t,n,a,s,r,i,o,l,c,u){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,s,r){null==s&&(s=fi(e,t,a));const i=e[1],o=e[2];return[vi((e[0]-t+2*s)/a+1,r),vi((i-t+2*s)/a+1,r),vi((o-t+2*s)/a+1,r),1]}([t,n,a,1],o,0,s,e,u);d=r[0],p=r[1],f=r[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/r),f=Math.ceil(a/i);const e=(d-1)*s+o-t,u=(p-1)*r+l-n,m=(f-1)*i+c-a,g=Math.floor(e/2),b=e-g,v=Math.floor(u/2),_=u-v,k=Math.floor(m/2);h={top:v,bottom:_,left:k,right:m-k,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/r),f=Math.ceil((a-c+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,c,u,h,b,v,_,w,I,N,o),A=r?g*d:g;let $;return"channelsFirst"===i?$=[l,A,C,T,E]:"channelsLast"===i&&($=[l,C,T,E,A]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:C,outHeight:T,outWidth:E,outChannels:A,padInfo:S,strideDepth:b,strideHeight:v,strideWidth:_,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:w,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationDepth:k,dilationHeight:y,dilationWidth:x,inShape:e,outShape:$,filterShape:t}}function fi(e,t,n,a=1){const s=bi(t,a);return Math.floor((e[0]*(n-1)-n+s)/2)}function mi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function gi(e){return"number"==typeof e?[e,e,e]:e}function bi(e,t){return t<=1?e:e+(e-1)*(t-1)}function vi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function _i(e){const[t,n,a]=mi(e);return 1===t&&1===n&&1===a}function ki(e,t){return _i(e)||_i(t)}function yi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function xi(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)E(D(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{E(D(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const wi=Fs({reshape_:function(e,t){const n={x:Rs(e,"x","reshape","string_or_numeric")},a={shape:t};return Is.runKernel(xn,n,a)}}),Ii=Fs({avgPool_:function(e,t,n,a,s){const r=Rs(e,"x","avgPool","float32");E(ki(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=r,o=!1;3===r.rank&&(o=!0,i=wi(r,[1,r.shape[0],r.shape[1],r.shape[2]])),E(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),xi("avgPool",a,s);const l={x:i},c={filterSize:t,strides:n,pad:a,dimRoundingMode:s};let u=Is.runKernel(Ee,l,c);return u=br(u,r.dtype),o?wi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ni=Fs({avgPool3d_:function(e,t,n,a,s,r="NDHWC"){const i=Rs(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=wi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),E("NDHWC"===r,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`)),xi("avgPool3d",a,s);const c={x:o},u={filterSize:t,strides:n,pad:a,dimRoundingMode:s,dataFormat:r};let h=Is.runKernel($e,c,u);return h=br(h,o.dtype),l?wi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Si=Fs({batchNorm_:function(e,t,n,a,s,r){null==r&&(r=.001);const i=Rs(e,"x","batchNorm"),o=Rs(t,"mean","batchNorm"),l=Rs(n,"variance","batchNorm");let c,u;null!=s&&(c=Rs(s,"scale","batchNorm")),null!=a&&(u=Rs(a,"offset","batchNorm")),E(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),E(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),E(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?wi(e,[1,1,1,e.size]):2===e.rank?wi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?wi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d={x:h,scale:c,offset:u,mean:o,variance:l},p={varianceEpsilon:r},f=Is.runKernel(wt,d,p);return wi(f,i.shape)}}),Ci=Fs({batchNorm2d_:function(e,t,n,a,s,r){const i=Rs(e,"x","batchNorm"),o=Rs(t,"mean","batchNorm"),l=Rs(n,"variance","batchNorm");let c,u;return null!=s&&(c=Rs(s,"scale","batchNorm")),null!=a&&(u=Rs(a,"offset","batchNorm")),E(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),E(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),E(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&E(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=u&&E(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`)),Si(i,o,l,u,c,r)}}),Ti=Fs({batchNorm3d_:function(e,t,n,a,s,r){const i=Rs(e,"x","batchNorm"),o=Rs(t,"mean","batchNorm"),l=Rs(n,"variance","batchNorm");let c,u;return null!=s&&(c=Rs(s,"scale","batchNorm")),null!=a&&(u=Rs(a,"offset","batchNorm")),E(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),E(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),E(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&E(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=u&&E(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`)),Si(i,o,l,u,c,r)}}),Ei=Fs({batchNorm4d_:function(e,t,n,a,s,r){const i=Rs(e,"x","batchNorm"),o=Rs(t,"mean","batchNorm"),l=Rs(n,"variance","batchNorm");let c,u;return null!=s&&(c=Rs(s,"scale","batchNorm")),null!=a&&(u=Rs(a,"offset","batchNorm")),E(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),E(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),E(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&E(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=u&&E(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`)),Si(i,o,l,u,c,r)}}),Ai=Fs({clipByValue_:function(e,t,n){const a=Rs(e,"x","clipByValue");E(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:a},r={clipValueMin:t,clipValueMax:n};return Is.runKernel(Be,s,r)}}),$i=Fs({concat_:function(e,t=0){E(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=zs(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return vr(n[0]);const a=n,s={axis:t};return Is.runKernel(Ue,a,s)}}),Ri=Fs({concat1d_:function(e){return $i(e,0)}}),zi=Fs({concat2d_:function(e,t){return $i(e,t)}}),Fi=Fs({concat3d_:function(e,t){return $i(e,t)}}),Di=Fs({concat4d_:function(e,t){return $i(e,t)}}),Oi=Fs({conv2d_:function(e,t,n,a,s="NHWC",r=[1,1],i){const o=Rs(e,"x","conv2d","float32"),l=Rs(t,"filter","conv2d","float32");let c=o,u=!1;3===o.rank&&(u=!0,c=wi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),E(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),xi("conv2d",a,i);const h="NHWC"===s?c.shape[3]:c.shape[1];E(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),E(ki(n,r),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`));const d={x:c,filter:l},p={strides:n,pad:a,dataFormat:s,dilations:r,dimRoundingMode:i},f=Is.runKernel(Ve,d,p);return u?wi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Mi=Fs({conv1d_:function(e,t,n,a,s="NWC",r=1,i){const o=Rs(e,"x","conv1d"),l=Rs(t,"filter","conv1d");let c=o,u=!1;2===o.rank&&(u=!0,c=wi(o,[1,o.shape[0],o.shape[1]])),E(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),E(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),xi("conv1d",a,i),E(c.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),E(ki(n,r),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${r}'`)),E("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=wi(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=wi(c,[c.shape[0],1,c.shape[1],c.shape[2]]),p=Oi(d,h,[1,n],a,"NHWC",[1,r],i);return wi(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Li=Fs({conv2DBackpropInput_:function(e,t,n,a,s,r="NHWC",i){E(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,c=!1;3===t.rank&&(c=!0,l=wi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),E(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),E(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),E(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const u="NHWC"===r?o[3]:o[1],h="NHWC"===r?l.shape[3]:l.shape[1];E(u===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`)),E(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),xi("conv2dDerInput",s,i);const d={dy:l,filter:n},p={strides:a,pad:s,dataFormat:r,dimRoundingMode:i,inputShape:o},f=Is.runKernel(He,d,p);return c?wi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Bi=Fs({conv2dTranspose_:function(e,t,n,a,s,r){const i=Rs(e,"x","conv2dTranspose"),o=Rs(t,"filter","conv2dTranspose");return Li(n,i,o,a,s,"NHWC",r)}}),Pi=Fs({conv3d_:function(e,t,n,a,s="NDHWC",r=[1,1,1]){const i=Rs(e,"x","conv3d"),o=Rs(t,"filter","conv3d");let l=i,c=!1;4===i.rank&&(c=!0,l=wi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),E(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),E(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),E(ki(n,r),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`)),E("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const u={x:l,filter:o},h={strides:n,pad:a,dataFormat:s,dilations:r},d=Is.runKernel(je,u,h);return c?wi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Wi=Fs({conv3DBackpropInput_:function(e,t,n,a,s){E(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let r=e,i=t,o=!1;4===t.rank&&(o=!0,i=wi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,e[0],e[1],e[2],e[3]]);const l=r[4],c=i.shape[4];E(5===r.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`)),E(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),E(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),E(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),E(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const u={dy:i,filter:n},h={pad:s,strides:a,inputShape:r},d=Is.runKernel(Ze,u,h);return o?wi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ui=Fs({conv3dTranspose_:function(e,t,n,a,s){const r=Rs(e,"x","conv3dTranspose"),i=Rs(t,"filter","conv3dTranspose");return Wi(n,r,i,a,s)}}),Vi=Fs({depthwiseConv2d_:function(e,t,n,a,s="NHWC",r=[1,1],i){const o=Rs(e,"x","depthwiseConv2d","float32"),l=Rs(t,"filter","depthwiseConv2d","float32");let c=o,u=!1;3===o.rank&&(u=!0,c=wi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),E(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),E(c.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),xi("depthwiseConv2d",a,i);const h={x:c,filter:l},d={strides:n,pad:a,dataFormat:s,dilations:r,dimRoundingMode:i},p=Is.runKernel(nt,h,d);return u?wi(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Gi=Fs({floorDiv_:function(e,t){let n=Rs(e,"a","floorDiv"),a=Rs(t,"b","floorDiv");[n,a]=gs(n,a);const s={a:n,b:a};return Is.runKernel(xt,s)}}),Hi=Fs({div_:function(e,t){let n=Rs(e,"a","div"),a=Rs(t,"b","div");if([n,a]=gs(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Gi(n,a);const s={a:n,b:a};return Is.runKernel(ct,s,{})}}),ji=Fs({elu_:function(e){const t={x:Rs(e,"x","elu","float32")};return Is.runKernel(ht,t)}}),qi=Fs({equal_:function(e,t){let n=Rs(e,"a","equal","string_or_numeric"),a=Rs(t,"b","equal","string_or_numeric");[n,a]=gs(n,a),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(ft,s)}}),Zi=Fs({exp_:function(e){const t={x:Rs(e,"x","exp")};return Is.runKernel(mt,t)}}),Ki=Fs({expandDims_:function(e,t=0){const n=Rs(e,"x","expandDims","string_or_numeric");E(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},s={dim:t};return Is.runKernel(gt,a,s)}}),Xi=Fs({tile_:function(e,t){const n=Rs(e,"x","tile","string_or_numeric");E(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const a={x:n},s={reps:t};return Is.runKernel(ra,a,s)}}),Yi=Fs({eye_:function(e,t,n,a="float32"){null==t&&(t=e);const s=gr([e,t],a),r=e<=t?e:t;for(let e=0;e<r;++e)s.set(1,e,e);const i=wi(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Xi(Ki(i,0),[n[0],1,1]);if(2===n.length)return Xi(Ki(Ki(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Xi(Ki(Ki(Ki(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ji(e,t,n){const a={shape:e,value:t,dtype:n};return Is.runKernel(_t,{},a)}const Qi=Fs({floor_:function(e){const t={x:Rs(e,"x","floor","float32")};return Is.runKernel(yt,t)}}),eo=Fs({gather_:function(e,t,n=0,a=0){const s={x:Rs(e,"x","gather"),indices:Rs(t,"indices","gather","int32")},r={axis:n,batchDims:a};return Is.runKernel(It,s,r)}}),to=Fs({greater_:function(e,t){let n=Rs(e,"a","greater","string_or_numeric"),a=Rs(t,"b","greater","string_or_numeric");[n,a]=gs(n,a),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(St,s)}}),no=Fs({greaterEqual_:function(e,t){let n=Rs(e,"a","greaterEqual","string_or_numeric"),a=Rs(t,"b","greaterEqual","string_or_numeric");[n,a]=gs(n,a),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(Ct,s)}}),ao=Fs({leakyRelu_:function(e,t=.2){const n={x:Rs(e,"x","leakyRelu")},a={alpha:t};return Is.runKernel(Ft,n,a)}}),so=Fs({log_:function(e){const t={x:Rs(e,"x","log","float32")};return Is.runKernel(Lt,t)}}),ro=Fs({log1p_:function(e){const t={x:Rs(e,"x","log1p")};return Is.runKernel(Bt,t)}}),io=Fs({max_:function(e,t=null,n=!1){const a={x:Rs(e,"x","max")},s={reductionIndices:t,keepDims:n};return Is.runKernel(Ht,a,s)}}),oo=Fs({mul_:function(e,t){let n=Rs(e,"a","mul"),a=Rs(t,"b","mul");[n,a]=gs(n,a);const s={a:n,b:a};return Is.runKernel(sn,s)}}),lo=Fs({sub_:function(e,t){let n=Rs(e,"a","sub"),a=Rs(t,"b","sub");[n,a]=gs(n,a);const s={a:n,b:a};return Is.runKernel(na,s)}}),co=Fs({sum_:function(e,t=null,n=!1){let a=Rs(e,"x","sum");"bool"===a.dtype&&(a=br(a,"int32"));const s={x:a},r={axis:t,keepDims:n};return Is.runKernel(Wn,s,r)}}),uo=Fs({logSoftmax_:function(e,t=-1){const n=Rs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const a=ti(((e,n)=>{const a=io(e,t,!0),s=lo(e,a),r=lo(br(s,"float32"),so(co(Zi(s),t,!0)));return n([r]),{value:r,gradFunc:(e,n)=>{const[a]=n,s=Zi(a);return lo(e,oo(co(e,t,!0),s))}}}));return a(n)}}),ho=Fs({logicalAnd_:function(e,t){const n=Rs(e,"a","logicalAnd","bool"),a=Rs(t,"b","logicalAnd","bool");Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(Pt,s)}}),po=Fs({matMul_:function(e,t,n=!1,a=!1){let s=Rs(e,"a","matMul"),r=Rs(t,"b","matMul");[s,r]=gs(s,r);const i={a:s,b:r},o={transposeA:n,transposeB:a};return Is.runKernel(ze,i,o)}}),fo=Fs({maxPool_:function(e,t,n,a,s){const r=Rs(e,"x","maxPool");let i=r,o=!1;3===r.rank&&(o=!0,i=wi(r,[1,r.shape[0],r.shape[1],r.shape[2]])),E(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),E(ki(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),xi("maxPool",a,s);const l={x:i},c={filterSize:t,strides:n,pad:a,dimRoundingMode:s},u=Is.runKernel(qt,l,c);return o?wi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),mo=Fs({maxPool3d_:function(e,t=[1,1,1],n,a,s,r="NDHWC"){const i=Rs(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=wi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),E("NDHWC"===r,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`)),xi("maxPool3d",a,s);const c={x:o},u={filterSize:t,strides:n,pad:a,dimRoundingMode:s,dataFormat:r},h=Is.runKernel(Kt,c,u);return l?wi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),go=Fs({maximum_:function(e,t){let n=Rs(e,"a","maximum"),a=Rs(t,"b","maximum");[n,a]=gs(n,a),"bool"===n.dtype&&(n=br(n,"int32"),a=br(a,"int32")),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(jt,s)}}),bo=Fs({mean_:function(e,t=null,n=!1){const a={x:Rs(e,"x","mean")},s={axis:t,keepDims:n};return Is.runKernel(Jt,a,s)}}),vo=Fs({minimum_:function(e,t){let n=Rs(e,"a","minimum"),a=Rs(t,"b","minimum");[n,a]=gs(n,a),"bool"===n.dtype&&(n=br(n,"int32"),a=br(a,"int32")),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(en,s)}});function _o(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ko(e,t,n){const a=e.length+t.length,s=[];let r=0,i=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?s.push(e[r++]):s.push(t[i++]);return s}function yo(e,t){const n=[],a=e.length;for(let s=0;s<a;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function xo(e,t){return ko(e,t.map((e=>1)),t)}function wo(e,t,n){E(_o(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Io(e,t){if(_o(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function No(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function So(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Co=Fs({square_:function(e){const t=Rs(e,"x","square");return Is.runKernel("Square",{x:t},{})}}),To=Fs({moments_:function(e,t=null,n=!1){const a=P(t,(e=Rs(e,"x","moments")).shape),s=bo(e,a,n);let r=s.shape;n||(r=xo(s.shape,a));const i=Co(lo(br(e,"float32"),wi(s,r)));return{mean:s,variance:bo(i,a,n)}}}),Eo=Fs({neg_:function(e){const t={x:Rs(e,"x","neg")};return Is.runKernel(rn,t)}}),Ao=Fs({notEqual_:function(e,t){let n=Rs(e,"a","notEqual","string_or_numeric"),a=Rs(t,"b","notEqual","string_or_numeric");[n,a]=gs(n,a),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(on,s)}}),$o=Fs({oneHot_:function(e,t,n=1,a=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Rs(e,"indices","oneHot","int32")},r={depth:t,onValue:n,offValue:a};return Is.runKernel(dn,s,r)}});function Ro(e,t="float32"){if("complex64"===t){const t=Ro(e,"float32"),n=Ro(e,"float32");return Ds(t,n)}const n=ne(z(e),t);return Is.makeTensor(n,e,t)}function zo(e,t="float32"){if("complex64"===t){const t=zo(e,"float32"),n=Ro(e,"float32");return Ds(t,n)}const n=te(z(e),t);return Is.makeTensor(n,e,t)}const Fo=Fs({onesLike_:function(e){const t={x:Rs(e,"x","onesLike")};return Is.runKernel(hn,t)}}),Do=Fs({pad_:function(e,t,n=0){const a=Rs(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},r={x:a};return Is.runKernel(fn,r,s)}}),Oo=Fs({prelu_:function(e,t){const n={x:Rs(e,"x","prelu"),alpha:Rs(t,"alpha","prelu")};return Is.runKernel(gn,n)}});var Mo=n(600);class Lo{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const r=s||Math.random();this.random=Mo.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,s,r;do{a=2*this.random()-1,s=2*this.random()-1,r=a*a+s*s}while(r>=1||0===r);const i=Math.sqrt(-2*Math.log(r)/r);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Bo{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Mo.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Po=Fs({randomNormal_:function(e,t=0,n=1,a,s){if(null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);const r=new Lo(t,n,a,!1,s),i=gr(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=r.nextValue();return i.toTensor()}}),Wo=Fs({randomUniform_:function(e,t=0,n=1,a="float32",s){const r=gr(e,a),i=new Bo(t,n,null,s);for(let e=0;e<r.values.length;e++)r.values[e]=i.nextValue();return r.toTensor()}}),Uo=Fs({relu_:function(e){const t={x:Rs(e,"x","relu")};return Is.runKernel(yn,t)}}),Vo=Fs({reverse_:function(e,t){const n={x:Rs(e,"x","reverse")},a={dims:t};return Is.runKernel(Tn,n,a)}}),Go=Fs({selu_:function(e){const t={x:Rs(e,"x","selu")};return Is.runKernel(zn,t)}}),Ho=Fs({separableConv2d_:function(e,t,n,a,s,r=[1,1],i="NHWC"){const o=Rs(e,"x","separableConv2d"),l=Rs(t,"depthwiseFilter","separableConv2d"),c=Rs(n,"pointwiseFilter","separableConv2d");let u=o,h=!1;if(3===o.rank&&(h=!0,u=wi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(4===u.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`)),E(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),E(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),E(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),E(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const d=l.shape[2],p=l.shape[3];E(c.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`));const f=Vi(u,l,a,s,i,r),m=Oi(f,c,1,"valid",i);return h?wi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),jo=Fs({sigmoid_:function(e){const t={x:Rs(e,"x","sigmoid","float32")};return Is.runKernel(Ln,t)}}),qo=Fs({slice_:function(e,t,n){const a=Rs(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const s={x:a},r={begin:t,size:n};return Is.runKernel(Fn,s,r)}}),Zo=Fs({slice1d_:function(e,t,n){const a=Rs(e,"x","slice1d");return E(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),qo(a,[t],[n])}}),Ko=Fs({slice2d_:function(e,t,n){const a=Rs(e,"x","slice2d");return E(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),qo(a,t,n)}}),Xo=Fs({slice3d_:function(e,t,n){const a=Rs(e,"x","slice3d");return E(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),qo(a,t,n)}}),Yo=Fs({slice4d_:function(e,t,n){const a=Rs(e,"x","slice4d");return E(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),qo(a,t,n)}}),Jo=Fs({softmax_:function(e,t=-1){const n=Rs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const a={logits:n},s={dim:t};return Is.runKernel(Gn,a,s)}}),Qo=Fs({softplus_:function(e){const t={x:Rs(e,"x","softplus")};return Is.runKernel(Bn,t)}}),el=Fs({split_:function(e,t,n=0){const a={x:Rs(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Is.runKernel(Vn,a,s)}}),tl=Fs({sqrt_:function(e){const t={x:Rs(e,"x","sqrt","float32")};return Is.runKernel(Pn,t)}}),nl=Fs({squeeze_:function(e,t){const n=Rs(e,"x","squeeze");return wi(n,W(n.shape,t).newShape)}}),al=Fs({stack_:function(e,t=0){const n=zs(e,"tensors","stack","string_or_numeric");E(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&E(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,s={axis:t};return Is.runKernel(pn,a,s)}}),sl=Fs({tanh_:function(e){const t={x:Rs(e,"x","tanh","float32")};return Is.runKernel(sa,t)}});function rl(e,t){$(e);const n=Es(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Os(e,null,n,t)}const il=Fs({truncatedNormal_:function(e,t=0,n=1,a,s){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const r=new Lo(t,n,a,!0,s),i=gr(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=r.nextValue();return i.toTensor()}}),ol=Fs({unstack_:function(e,t=0){const n=Rs(e,"x","unstack","string_or_numeric");E(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const a={value:n},s={axis:t};return Is.runKernel(ua,a,s)}}),ll=Fs({broadcastTo_:function(e,t){let n=Rs(e,"broadcastTo","x");const a=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=wi(n,e)}const s=n.shape,r=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])r[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===r.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return vr(n);const i={x:n},o={reps:r};return Is.runKernel(ra,i,o)}}),cl=Fs({where_:function(e,t,n){const a=Rs(t,"a","where"),s=Rs(n,"b","where"),r=Rs(e,"condition","where","bool"),i=Tr(Tr(r.shape,a.shape),s.shape),o={condition:ll(r,i),t:ll(a,i),e:ll(s,i)};return Is.runKernel(Rn,o)}}),ul=Fs({zerosLike_:function(e){const t={x:Rs(e,"x","zerosLike")};return Is.runKernel(da,t)}}),hl=Fs({transpose_:function(e,t){const n=Rs(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),E(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{E(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const a={x:n},s={perm:t};return Is.runKernel(la,a,s)}}),dl=Fs({dropout_:function(e,t,n,a){const s=Rs(e,"x","dropout");if(E("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),E(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof rs?s.clone():s;const r=function(e,t){if(null==t)return e.shape.slice();if(F(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(s,n),i=1-t,o=Hi(Qi(ri(Wo(r,0,1,"float32",a),i)),i);return oo(s,o)}}),pl=Fs({imag_:function(e){const t={input:Rs(e,"input","imag")};return Is.runKernel(At,t)}}),fl=Fs({real_:function(e){const t={input:Rs(e,"input","real")};return Is.runKernel(_n,t)}}),ml=Fs({fft_:function(e){E("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Is.runKernel(vt,t)}}),gl=Fs({rfft_:function(e,t){E("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const a=e.size/n;let s;if(null!=t&&t<n){const a=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,s=qo(e,a,r),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,s=$i([e,Ro(a)],e.shape.length-1),n=t}else s=e;const r=ul(s),i=wi(Ds(s,r),[a,n]),o=ml(i),l=Math.floor(n/2)+1,c=fl(o),u=pl(o),h=el(c,[l,n-l],c.shape.length-1),d=el(u,[l,n-l],u.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,wi(Ds(h[0],d[0]),p)}}),bl=Fs({ifft_:function(e){E("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Is.runKernel(Et,t)}}),vl=Fs({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const s=wi(e,[n,t]);a=bl(s)}else{const s=[n,2*(t-1)],r=wi(fl(e),[n,t]),i=wi(pl(e),[n,t]),o=Vo(qo(r,[0,1],[n,t-2]),1),l=oo(Vo(qo(i,[0,1],[n,t-2]),1),ni(-1)),c=$i([r,o],1),u=$i([i,l],1),h=wi(Ds(c,u),[s[0],s[1]]);a=bl(h)}if(a=fl(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=wi(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}}),_l=Fs({conv2DBackpropFilter_:function(e,t,n,a,s,r="NHWC",i){let o=e;3===e.rank&&(o=wi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=wi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),E(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),E(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),E(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===r?o.shape[3]:o.shape[1],u="NHWC"===r?l.shape[3]:l.shape[1];E(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),E(u===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`)),xi("conv2dDerFilter",s,i);const h={x:o,dy:l},d={strides:a,pad:s,dataFormat:r,dimRoundingMode:i,filterShape:n};return Is.runKernel(Ge,h,d)}}),kl=Fs({relu6_:function(e){const t={x:Rs(e,"x","relu6")};return Is.runKernel(Cn,t)}}),yl=Fs({step_:function(e,t=0){const n={x:Rs(e,"x","step")},a={alpha:t};return Is.runKernel(pa,n,a)}});function xl(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return oo(e,yl(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function wl(e,t){let n=t;const a=Cr(e.shape,t.shape);return a.length>0&&(n=co(n,a)),wi(n,e.shape)}function Il(e,t,n,a){if("linear"===t)return e;if("relu"===t)return Uo(e);if("elu"===t)return ji(e);if("relu6"===t)return kl(e);if("prelu"===t)return Oo(e,n);if("leakyrelu"===t)return ao(e,a);if("sigmoid"===t)return jo(e);throw new Error(`Unknown fused activation ${t}.`)}const Nl=(e,t)=>!(e>0)||"linear"===t,Sl=Fs({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:s="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",!1===Nl(Is.state.gradientDepth,l)){let h=Oi(e,t,n,a,s,r,i);return null!=o&&(h=ri(h,o)),Il(h,l,c,u)}const h=Rs(e,"x","conv2d","float32"),d=Rs(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=wi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),E(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),xi("fused conv2d",a,i),E(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),E(ki(n,r),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`)),E("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=di(p.shape,d.shape,n,r,a,i);let g,b;null!=o&&(g=Rs(o,"bias","fused conv2d"),[g]=gs(g,h),Tr(m.outShape,g.shape)),null!=c&&(b=Rs(c,"prelu weights","fused conv2d"));const v=(e,t)=>{const[s,i,o,c]=t,u=xl(e,o,l);E(_i(r),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const h=[Li(i.shape,u,s,n,a),_l(i,u,s.shape,n,a)];if(null!=c){const e=wl(c,u);h.push(e)}return h},_={x:p,filter:d,bias:g,preluActivationWeights:b},k={strides:n,pad:a,dataFormat:s,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:u};if(null==o){const e=ti(((e,t,n)=>{let a=Is.runKernel(ga,_,k);return n([t,e,a]),f&&(a=wi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(p,d)}{const e=ti(((e,t,n,a)=>{let s=Is.runKernel(ga,_,k);return a([t,e,s,n]),f&&(s=wi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(p,d,g)}}}),Cl=Fs({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,s,r=[1,1],i){let o=e;3===e.rank&&(o=wi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=wi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:o,dy:l},u={strides:a,pad:s,dimRoundingMode:i,dilations:r,filterShape:n};return Is.runKernel(at,c,u)}}),Tl=Fs({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,s,r=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=wi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:o,filter:n},u={strides:a,pad:s,dimRoundingMode:i,dilations:r,inputShape:e},h=Is.runKernel(st,c,u);return l?wi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Fs({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:s="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(!1===Nl(Is.state.gradientDepth,l)){let h=Vi(e,t,n,a,s,r,i);return null!=o&&(h=ri(h,o)),Il(h,l,c,u)}const h=Rs(e,"x","depthwiseConv2d","float32"),d=Rs(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=wi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),E(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),E(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==r&&(r=[1,1]),E(ki(n,r),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`)),xi("fused depthwiseConv2d",a,i);const m=di(p.shape,d.shape,n,r,a,i,!0);let g,b;null!=o&&(g=Rs(o,"bias","fused conv2d"),[g]=gs(g,h),Tr(m.outShape,g.shape)),null!=c&&(b=Rs(c,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{E(_i(r),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`));const[s,o,c,u]=t,h=xl(e,c,l),d=Tl(o.shape,h,s,n,a,r,i),p=Cl(o,h,s.shape,n,a,r,i);return null!=u?[d,p,wl(g,h)]:[d,p]},_={x:p,filter:d,bias:g,preluActivationWeights:b},k={strides:n,pad:a,dataFormat:s,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:u};if(null==o){const e=ti(((e,t,n)=>{let a=Is.runKernel(ba,_,k);return n([t,e,a]),f&&(a=wi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(p,d)}{const e=ti(((e,t,n,a)=>{let s=Is.runKernel(ba,_,k);return a([t,e,s,n]),f&&(s=wi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(p,d,g)}}});const El=Fs({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:s,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Nl(Is.state.gradientDepth,r)){let l=po(e,t,n,a);return null!=s&&(l=ri(l,s)),Il(l,r,i,o)}let l=Rs(e,"a","fused matMul"),c=Rs(t,"b","fused matMul");[l,c]=gs(l,c);const u=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=a?c.shape[c.rank-1]:c.shape[c.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=a?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=z(f),b=z(m);E(u===h,(()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${a} must match.`));const v=Tr(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),_=wi(l,n?[g,u,d]:[g,d,u]),k=wi(c,a?[b,p,h]:[b,h,p]);let y,x;null!=s&&(y=Rs(s,"bias","fused matMul"),[y]=gs(y,l),Tr(v,y.shape)),null!=i&&(x=Rs(i,"prelu weights","fused matMul"));const w=(e,t)=>{const[i,o,l,c]=t,u=xl(wi(e,l.shape),l,r);let h,d;return n||a?!n&&a?(h=po(u,o,!1,!1),d=po(u,i,!0,!1)):n&&!a?(h=po(o,u,!1,!0),d=po(i,u,!1,!1)):(h=po(o,u,!0,!0),d=po(u,i,!0,!0)):(h=po(u,o,!1,!0),d=po(i,u,!0,!1)),null!=s?[h,d,wl(c,u)]:[h,d]},I={a:_,b:k,bias:y,preluActivationWeights:x},N={transposeA:n,transposeB:a,activation:r,leakyreluAlpha:o};if(null==s){const e=ti(((e,t,n)=>{const a=Is.runKernel(ma,I,N);return n([e,t,a]),{value:wi(a,v),gradFunc:w}}));return e(_,k)}{const e=ti(((e,t,n,a)=>{const s=Is.runKernel(ma,I,N);return a([e,t,s,n]),{value:wi(s,v),gradFunc:w}}));return e(_,k,y)}}});function Al(e,t,n){const a=1-e%2,s=new Float32Array(e);for(let r=0;r<e;++r){const i=2*Math.PI*r/(e+a-1);s[r]=t-n*Math.cos(i)}return rl(s,"float32")}Fs({hammingWindow_:function(e){return Al(e,.54,.46)}});const $l=Fs({hannWindow_:function(e){return Al(e,.5,.5)}});function Rl(e,t,n){if($(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=Es(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Os(e,t,a,n)}const zl=Fs({frame_:function(e,t,n,a=!1,s=0){let r=0;const i=[];for(;r+t<=e.size;)i.push(qo(e,r,t)),r+=n;if(a)for(;r<e.size;){const a=r+t-e.size,o=$i([qo(e,r,t-a),Ji([a],s)]);i.push(o),r+=n}return 0===i.length?Rl([],[0,t]):wi($i(i),[i.length,t])}});Fs({stft_:function(e,t,n,a,s=$l){var r;null==a&&(r=t,a=Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2)))));const i=zl(e,t,n),o=oo(i,s(t));return gl(o,a)}});const Fl=Fs({cropAndResize_:function(e,t,n,a,s="bilinear",r=0){const i=Rs(e,"image","cropAndResize"),o=Rs(t,"boxes","cropAndResize","float32"),l=Rs(n,"boxInd","cropAndResize","int32"),c=o.shape[0];E(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),E(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`)),E(1===l.rank&&l.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`)),E(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),E(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),E("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const u={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:r,cropSize:a};return Is.runKernel(Qe,u,h)}}),Dl=Fs({flipLeftRight_:function(e){const t=Rs(e,"image","flipLeftRight","float32");E(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Is.runKernel(kt,n,{})}}),Ol=Fs({grayscaleToRGB_:function(e){const t=Rs(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];E(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),E(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Xi(t,s)}}),Ml=Fs({rotateWithOffset_:function(e,t,n=0,a=.5){const s=Rs(e,"image","rotateWithOffset","float32");E(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const r={image:s},i={radians:t,fillValue:n,center:a};return Is.runKernel(fa,r,i)}});function Ll(e,t,n,a,s,r){null==a&&(a=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==r&&(r=0);const i=e.shape[0];return n=Math.min(n,i),E(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),E(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),E(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),E(1===t.rank,(()=>"scores must be a 1D tensor")),E(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),E(0<=r&&r<=1,(()=>`softNmsSigma must be in [0, 1], but was '${r}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:r}}const Bl=Fs({nonMaxSuppression_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY){const r=Rs(e,"boxes","nonMaxSuppression","float32"),i=Rs(t,"scores","nonMaxSuppression","float32"),o=Ll(r,i,n,a,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Is.runKernel(ln,{boxes:r,scores:i},l)}});function Pl(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,s=e.length,r=0,i=!1;for(;a<s;){r=a+(s-a>>>1);const o=n(t,e[r]);o>0?a=r+1:(s=r,i=!o)}return i?a:-a-1}(e,t,n||Wl)}(e,t,n),s=a<0?-(a+1):a;e.splice(s,0,t)}function Wl(e,t){return e>t?1:e<t?-1:0}function Ul(e,t,n,a,s){return Hl(e,t,n,a,s,0)}function Vl(e,t,n,a,s,r){return Hl(e,t,n,a,s,0,!1,r,!0)}function Gl(e,t,n,a,s,r){return Hl(e,t,n,a,s,r,!0)}function Hl(e,t,n,a,s,r,i=!1,o=!1,l=!1){const c=[];for(let e=0;e<t.length;e++)t[e]>s&&c.push({score:t[e],boxIndex:e,suppressBeginIndex:0});c.sort(Zl);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:r,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=jl(e,r,h[n]);if(i>=a){o=!0;break}if(t.score=t.score*ql(a,u,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(r),d.push(t.score)):t.score>s&&Pl(c,t,Zl))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function jl(e,t,n){const a=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),r=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),c=Math.min(s[0],s[2]),u=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-r)*(l-i),f=(h-c)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(r,c),g=Math.max(i,u),b=Math.min(o,h),v=Math.min(l,d),_=Math.max(b-m,0)*Math.max(v-g,0);return _/(p+f-_)}function ql(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function Zl(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Kl=Fs({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,r=0){const i=Rs(e,"boxes","nonMaxSuppression"),o=Rs(t,"scores","nonMaxSuppression"),l=Ll(i,o,n,a,s,r),c={boxes:i,scores:o},u={maxOutputSize:n=l.maxOutputSize,iouThreshold:a=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:r=l.softNmsSigma},h=Is.runKernel(un,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}}),Xl=Fs({nonMaxSuppressionPadded_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,r=!1){const i=Rs(e,"boxes","nonMaxSuppression"),o=Rs(t,"scores","nonMaxSuppression"),l=Ll(i,o,n,a,s,null),c={boxes:i,scores:o},u={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:r},h=Is.runKernel(cn,c,u);return{selectedIndices:h[0],validOutputs:h[1]}}}),Yl=Fs({resizeBilinear_:function(e,t,n=!1,a=!1){const s=Rs(e,"images","resizeBilinear");E(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),E(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),E(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let r=s,i=!1;3===s.rank&&(i=!0,r=wi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:r},l={alignCorners:n,halfPixelCenters:a,size:t},c=Is.runKernel(Nn,o,l);return i?wi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Jl=Fs({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){const s=Rs(e,"images","resizeNearestNeighbor");E(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),E(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),E("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),E(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let r=s,i=!1;3===s.rank&&(i=!0,r=wi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:r},l={alignCorners:n,halfPixelCenters:a,size:t},c=Is.runKernel(wn,o,l);return i?wi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ql=Fs({bincount_:function(e,t,n){const a=Rs(e,"x","bincount"),s=Rs(t,"weights","bincount");E("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),E(n>=0,(()=>`size must be non-negative, but got ${n}.`)),E(s.size===a.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${s.shape}.`));const r={x:a,weights:s},i={size:n};return Is.runKernel(De,r,i)}}),ec=Fs({lessEqual_:function(e,t){let n=Rs(e,"a","lessEqual","string_or_numeric"),a=Rs(t,"b","lessEqual","string_or_numeric");[n,a]=gs(n,a),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(Ot,s)}}),tc=Fs({round_:function(e){const t={x:Rs(e,"x","round")};return Is.runKernel(En,t)}});function nc(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:a};return Is.runKernel(vn,{},s)}const ac=Fs({threshold_:function(e,t="binary",n=!1,a=.5){const s=Rs(e,"image","threshold"),r=s.shape[0]*s.shape[1];let i,o,l,c,u=oo(rl([a]),255);if(E(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),E(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),E("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),E("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=el(s,[1,1,1],-1);const e=oo(i,.2989),t=oo(o,.587),n=oo(l,.114);c=ri(ri(e,t),n)}else c=e;"otsu"===t&&(u=function(e,t){let n,a,s,r,i,o,l=rl([-1]),c=rl([0]),u=rl([0]);for(let h=0;h<e.size-1;h++){n=qo(e,0,h+1),a=qo(e,h+1),i=Hi(co(n),t),o=Hi(co(a),t);const d=co(oo(n,nc(0,n.size)));s=Hi(d,co(n));const p=Ji(a.shape,n.size),f=ri(nc(0,a.size),p),m=oo(a,f);r=Hi(co(m),co(a));const g=lo(s,r),b=lo(s,r),v=oo(i,o);u=oo(oo(v,g),b);const _=to(u,c);c=cl(_,u,c),l=cl(_,rl([h]),l)}return l}(Ql(br(tc(c),"int32"),Ms([]),256),r));const h=n?ec(c,u):to(c,u);return br(oo(h,255),"int32")}}),sc=Fs({transform_:function(e,t,n="nearest",a="constant",s=0,r){const i=Rs(e,"image","transform","float32"),o=Rs(t,"transforms","transform","float32");E(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),E(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),E(null==r||2===r.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`));const l={image:i,transforms:o},c={interpolation:n,fillMode:a,fillValue:s,outputShape:r};return Is.runKernel(oa,l,c)}}),rc=Fs({bandPart_:function(e,t,n){E(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),E(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const a=Rs(e,"a","bandPart");E(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));const s=a.shape,[r,i]=a.shape.slice(-2);if(!(t<=r))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=r),n<0&&(n=i);const o=wi(nc(0,r,1,"int32"),[-1,1]),l=nc(0,i,1,"int32"),c=lo(o,l),u=ho(ec(c,ni(+t,"int32")),no(c,ni(-n,"int32"))),h=Ro([r,i],a.dtype);return wi(al(ol(wi(a,[-1,r,i])).map((e=>cl(u,e,h)))),s)}}),ic=Fs({min_:function(e,t=null,n=!1){const a={x:Rs(e,"x","min")},s={axis:t,keepDims:n};return Is.runKernel(Qt,a,s)}}),oc=Fs({pow_:function(e,t){let n=Rs(e,"base","pow"),a=Rs(t,"exp","pow");[n,a]=gs(n,a);const s={a:n,b:a};return Is.runKernel(mn,s)}});function lc(e,t,n=null){if(0===e.rank)return si(e);if(1!==e.rank&&null===n)return lc(wi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return co(si(e),n);if(t===1/0)return io(si(e),n);if(t===-1/0)return ic(si(e),n);if("euclidean"===t||2===t)return tl(co(oc(si(e),ni(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return io(co(si(e),n[0]),n[1]-1);if(t===1/0)return io(co(si(e),n[1]),n[0]);if(t===-1/0)return ic(co(si(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return tl(co(Co(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const cc=Fs({norm_:function(e,t="euclidean",n=null,a=!1){const s=lc(e=Rs(e,"x","norm"),t,n);let r=s.shape;if(a){const t=P(n,e.shape);r=xo(s.shape,t)}return wi(s,r)}}),uc=Fs({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,E(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)E(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=el(e,e.shape[0],0).map((e=>nl(e,[0])));E(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],a=e;for(let t=0;t<e.length;++t)n.push(Is.tidy((()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){const t=oo(co(oo(n[a],e)),n[a]);e=lo(e,t)}return Hi(e,cc(e,"euclidean"))})));return t?al(n,0):n}});function hc(e,t=!1){return Is.tidy((()=>{E(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],a=e.shape[1];let s=Yi(n),r=vr(e);const i=Rl([[1]],[1,1]);let o=vr(i);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=r,l=o,c=s;[o,r,s]=Is.tidy((()=>{const t=qo(r,[e,e],[n-e,1]),l=cc(t),c=qo(r,[e,e],[1,1]),u=cl(to(c,0),Rl([[-1]]),Rl([[1]])),h=lo(c,oo(u,l)),d=Hi(t,h);o=1===d.shape[0]?vr(i):$i([i,qo(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Eo(Hi(po(u,h),l)),f=qo(r,[e,0],[n-e,a]),m=oo(p,o),g=hl(o);if(0===e)r=lo(f,po(m,po(g,f)));else{const t=lo(f,po(m,po(g,f)));r=$i([qo(r,[0,0],[e,a]),t],0)}const b=hl(m),v=qo(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=lo(v,po(po(v,o),b));else{const t=lo(v,po(po(v,o),b));s=$i([qo(s,[0,0],[n,e]),t],1)}return[o,r,s]})),Jr([t,l,c])}return!t&&n>a&&(s=qo(s,[0,0],[n,a]),r=qo(r,[0,0],[a,a])),[s,r]}))}const dc=Fs({qr_:function(e,t=!1){if(E(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return hc(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=ol(wi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],r=[];return a.forEach((e=>{const[n,a]=hc(e,t);s.push(n),r.push(a)})),[wi(al(s,0),e.shape),wi(al(r,0),e.shape)]}}});var pc;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(pc||(pc={}));const fc=Fs({computeWeightedLoss_:function(e,t,n=pc.SUM_BY_NONZERO_WEIGHTS){const a=Rs(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Rs(t,"weights","computeWeightedLoss"));const r=null==s?a:oo(a,s);if(n===pc.NONE)return r;if(n===pc.SUM)return co(r);if(n===pc.MEAN){if(null==s)return bo(r);{const e=a.size/s.size,t=Hi(co(r),co(s));return e>1?Hi(t,ni(e)):t}}if(n===pc.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Hi(co(r),ni(a.size));{const e=oo(s,zo(a.shape)),t=br(co(Ao(e,ni(0))),"float32");return Hi(co(r),t)}}throw Error(`Unknown reduction: ${n}`)}});Fs({absoluteDifference_:function(e,t,n,a=pc.SUM_BY_NONZERO_WEIGHTS){const s=Rs(e,"labels","absoluteDifference"),r=Rs(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Rs(n,"weights","absoluteDifference")),A(s.shape,r.shape,"Error in absoluteDifference: ");const o=si(lo(s,r));return fc(o,i,a)}}),Fs({cosineDistance_:function(e,t,n,a,s=pc.SUM_BY_NONZERO_WEIGHTS){const r=Rs(e,"labels","cosineDistance"),i=Rs(t,"predictions","cosineDistance");let o=null;null!=a&&(o=Rs(a,"weights","cosineDistance")),A(r.shape,i.shape,"Error in cosineDistance: ");const l=ni(1),c=lo(l,co(oo(r,i),n,!0));return fc(c,o,s)}}),Fs({hingeLoss_:function(e,t,n,a=pc.SUM_BY_NONZERO_WEIGHTS){let s=Rs(e,"labels","hingeLoss");const r=Rs(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Rs(n,"weights","hingeLoss")),A(s.shape,r.shape,"Error in hingeLoss: ");const o=ni(1);s=lo(oo(ni(2),s),o);const l=Uo(lo(o,oo(s,r)));return fc(l,i,a)}}),Fs({huberLoss_:function(e,t,n,a=1,s=pc.SUM_BY_NONZERO_WEIGHTS){const r=Rs(e,"labels","huberLoss"),i=Rs(t,"predictions","huberLoss");let o=null;null!=n&&(o=Rs(n,"weights","huberLoss")),A(r.shape,i.shape,"Error in huberLoss: ");const l=ni(a),c=si(lo(i,r)),u=vo(c,l),h=lo(c,u),d=ri(oo(ni(.5),Co(u)),oo(l,h));return fc(d,o,s)}}),Fs({logLoss_:function(e,t,n,a=1e-7,s=pc.SUM_BY_NONZERO_WEIGHTS){const r=Rs(e,"labels","logLoss"),i=Rs(t,"predictions","logLoss");let o=null;null!=n&&(o=Rs(n,"weights","logLoss")),A(r.shape,i.shape,"Error in logLoss: ");const l=ni(1),c=ni(a),u=Eo(oo(r,so(ri(i,c)))),h=oo(lo(l,r),so(ri(lo(l,i),c))),d=lo(u,h);return fc(d,o,s)}});const mc=Fs({squaredDifference_:function(e,t){let n=Rs(e,"a","squaredDifference"),a=Rs(t,"b","squaredDifference");[n,a]=gs(n,a),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(Xn,s,{})}});Fs({meanSquaredError_:function(e,t,n,a=pc.SUM_BY_NONZERO_WEIGHTS){const s=Rs(e,"labels","meanSquaredError"),r=Rs(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Rs(n,"weights","meanSquaredError")),A(s.shape,r.shape,"Error in meanSquaredError: ");const o=mc(s,r);return fc(o,i,a)}}),Fs({sigmoidCrossEntropy_:function(e,t,n,a=0,s=pc.SUM_BY_NONZERO_WEIGHTS){let r=Rs(e,"multiClassLabels","sigmoidCrossEntropy");const i=Rs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Rs(n,"weights","sigmoidCrossEntropy")),A(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=ni(a),t=ni(1),n=ni(.5);r=ri(oo(r,lo(t,e)),oo(n,e))}const l=function(e,t){const n=Rs(e,"labels","sigmoidCrossEntropyWithLogits"),a=Rs(t,"logits","sigmoidCrossEntropyWithLogits");A(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Uo(a),r=oo(a,n),i=ro(Zi(Eo(si(a))));return ri(lo(s,r),i)}(r,i);return fc(l,o,s)}});const gc=Fs({logSumExp_:function(e,t=null,n=!1){const a=Rs(e,"x","logSumExp"),s=P(t,a.shape),r=io(a,s,!0),i=lo(a,r),o=Zi(i),l=co(o,s),c=so(l),u=ri(wi(r,c.shape),c);if(n){const e=xo(u.shape,s);return wi(u,e)}return u}});Fs({softmaxCrossEntropy_:function(e,t,n,a=0,s=pc.SUM_BY_NONZERO_WEIGHTS){let r=Rs(e,"onehotLabels","softmaxCrossEntropy");const i=Rs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Rs(n,"weights","softmaxCrossEntropy")),A(r.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){const e=ni(a),t=ni(1),n=ni(r.shape[1]);r=ri(oo(r,lo(t,e)),Hi(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const a=ti(((e,t,a)=>{const s=gc(t,[n],!0),r=lo(br(t,"float32"),s);a([e,r]);const i=Eo(oo(r,e));return{value:co(i,[n]),gradFunc:(e,t)=>{const[a,s]=t,r=xo(e.shape,[n]);return[oo(wi(e,r),lo(br(a,"float32"),Zi(s))),oo(wi(e,r),lo(Zi(s),br(a,"float32")))]}}}));return a(e,t)}(r,i);return fc(l,o,s)}}),Fs({sparseFillEmptyRows_:function(e,t,n,a){const s=Rs(e,"indices","sparseFillEmptyRows","int32"),r=Rs(t,"values","sparseFillEmptyRows"),i=Rs(n,"denseShape","sparseFillEmptyRows","int32"),o=Rs(a,"defaultValue","sparseFillEmptyRows",r.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:r,denseShape:i,defaultValue:o},c=Is.runKernel(Hn,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}}),Fs({sparseReshape_:function(e,t,n){const a=Rs(e,"inputIndices","sparseReshape","int32"),s=Rs(t,"inputShape","sparseReshape","int32"),r=Rs(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==r.rank)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:a,inputShape:s,newShape:r},o=Is.runKernel(jn,i);return{outputIndices:o[0],outputShape:o[1]}}}),Fs({sparseSegmentMean_:function(e,t,n){const a=Rs(e,"data","sparseSegmentMean"),s=Rs(t,"indices","sparseSegmentMean","int32"),r=Rs(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==r.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${r.shape}`);const i={data:a,indices:s,segmentIds:r};return Is.runKernel(qn,i)}}),Fs({sparseSegmentSum_:function(e,t,n){const a=Rs(e,"data","sparseSegmentSum"),s=Rs(t,"indices","sparseSegmentSum","int32"),r=Rs(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==r.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${r.shape}`);const i={data:a,indices:s,segmentIds:r};return Is.runKernel(Zn,i)}}),Fs({stringNGrams_:function(e,t,n,a,s,r,i,o){const l=Rs(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=Rs(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const u={separator:n,nGramWidths:a,leftPad:s,rightPad:r,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:c},d=Is.runKernel(Qn,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}}),Fs({stringSplit_:function(e,t,n=!0){const a=Rs(e,"input","stringSplit","string"),s=Rs(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const r={skipEmpty:n},i={input:a,delimiter:s},o=Is.runKernel(ea,i,r);return{indices:o[0],values:o[1],shape:o[2]}}}),Fs({stringToHashBucketFast_:function(e,t){const n=Rs(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Is.runKernel(ta,s,a)}});const bc={flipLeftRight:Dl,grayscaleToRGB:Ol,resizeNearestNeighbor:Jl,resizeBilinear:Yl,rotateWithOffset:Ml,cropAndResize:Fl,nonMaxSuppression:Bl,nonMaxSuppressionAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY){const r=Rs(e,"boxes","nonMaxSuppressionAsync"),i=Rs(t,"scores","nonMaxSuppressionAsync"),o=Ll(r,i,n,a,s);n=o.maxOutputSize,a=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([r.data(),i.data()]),c=l[0],u=l[1],{selectedIndices:h}=Ul(c,u,n,a,s);return r!==e&&r.dispose(),i!==t&&i.dispose(),rl(h,"int32")},nonMaxSuppressionWithScore:Kl,nonMaxSuppressionWithScoreAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,r=0){const i=Rs(e,"boxes","nonMaxSuppressionAsync"),o=Rs(t,"scores","nonMaxSuppressionAsync"),l=Ll(i,o,n,a,s,r);n=l.maxOutputSize,a=l.iouThreshold,s=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=Gl(u,h,n,a,s,r);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:rl(d,"int32"),selectedScores:rl(p)}},nonMaxSuppressionPadded:Xl,nonMaxSuppressionPaddedAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,r=!1){const i=Rs(e,"boxes","nonMaxSuppressionAsync"),o=Rs(t,"scores","nonMaxSuppressionAsync"),l=Ll(i,o,n,a,s,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Vl(d,p,c,u,h,r);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:rl(f,"int32"),validOutputs:ni(m,"int32")}},threshold:ac,transform:sc},vc={bandPart:rc,gramSchmidt:uc,qr:dc};class _c extends ai{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Is.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Is.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Yr((()=>ul(a).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Yr((()=>ul(a).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Yr((()=>{const e=ri(oo(r,this.rho),oo(Co(s),1-this.rho)),t=oo(Hi(tl(ri(i,this.epsilon)),tl(ri(r,this.epsilon))),s),n=ri(oo(i,this.rho),oo(Co(t),1-this.rho));r.assign(e),i.assign(n);const o=ri(oo(t,-this.learningRate),a);a.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Jr(this.accumulatedGrads.map((e=>e.variable))),Jr(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}_c.className="Adadelta",Zr(_c);class kc extends ai{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Is.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Yr((()=>Ji(a.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=this.accumulatedGrads[n].variable;Yr((()=>{const e=ri(r,Co(s));r.assign(e);const t=ri(oo(Hi(s,tl(ri(e,Is.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Jr(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}kc.className="Adagrad",Zr(kc);class yc extends ai{constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Yr((()=>{this.accBeta1=ni(t).variable(),this.accBeta2=ni(n).variable()})),null==a&&(this.epsilon=Is.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yr((()=>{const n=lo(1,this.accBeta1),a=lo(1,this.accBeta2);t.forEach(((t,s)=>{const r=Is.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Yr((()=>ul(r).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Yr((()=>ul(r).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=ri(oo(o,this.beta1),oo(i,1-this.beta1)),u=ri(oo(l,this.beta2),oo(Co(i),1-this.beta2)),h=Hi(c,n),d=Hi(u,a);o.assign(c),l.assign(u);const p=ri(oo(Hi(h,ri(tl(d),this.epsilon)),-this.learningRate),r);r.assign(p)})),this.accBeta1.assign(oo(this.accBeta1,this.beta1)),this.accBeta2.assign(oo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Jr(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Jr(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Yr((()=>{this.accBeta1.assign(oc(this.beta1,this.iterations_+1)),this.accBeta2.assign(oc(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}yc.className="Adam",Zr(yc);class xc extends ai{constructor(e,t,n,a=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Yr((()=>{this.iteration=ni(0).variable(),this.accBeta1=ni(t).variable()})),null==a&&(this.epsilon=Is.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yr((()=>{const n=lo(1,this.accBeta1),a=Hi(-this.learningRate,ri(oo(this.iteration,this.decay),1));t.forEach(((t,s)=>{const r=Is.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ul(r).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:ul(r).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=ri(oo(o,this.beta1),oo(i,1-this.beta1)),u=oo(l,this.beta2),h=si(i),d=go(u,h);o.assign(c),l.assign(d);const p=ri(oo(Hi(a,n),Hi(c,ri(d,this.epsilon))),r);r.assign(p)})),this.iteration.assign(ri(this.iteration,1)),this.accBeta1.assign(oo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Jr(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Jr(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}xc.className="Adamax",Zr(xc);class wc extends ai{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=Is.registeredVariables[t];Yr((()=>{const e=ri(oo(this.c,a),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Qr(ni(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}wc.className="SGD",Zr(wc);class Ic extends wc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ni(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Is.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Yr((()=>ul(a).variable(e)))}}const s=this.accumulations[n].variable,r=Array.isArray(e)?e[n].tensor:e[t];null!=r&&Yr((()=>{let e;const t=ri(oo(this.m,s),r);e=this.useNesterov?ri(oo(this.c,ri(r,oo(t,this.m))),a):ri(oo(this.c,t),a),s.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Jr(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Ic.className="Momentum",Zr(Ic);class Nc extends ai{constructor(e,t=.9,n=0,a=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==a&&(this.epsilon=Is.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Is.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Yr((()=>ul(a).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Yr((()=>ul(a).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Yr((()=>ul(a).variable(s)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Yr((()=>{const e=ri(oo(i,this.decay),oo(Co(r),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ri(oo(t,this.decay),oo(r,1-this.decay)),l=Hi(oo(r,this.learningRate),tl(lo(e,ri(Co(s),this.epsilon)))),c=ri(oo(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(c);const u=lo(a,c);a.assign(u)}else{const e=ri(oo(i,this.decay),oo(Co(r),1-this.decay)),t=ri(oo(o,this.momentum),Hi(oo(r,this.learningRate),tl(ri(e,this.epsilon))));i.assign(e),o.assign(t);const n=lo(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Jr(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Jr(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Jr(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Nc.className="RMSProp",Zr(Nc);class Sc{static sgd(e){return new wc(e)}static momentum(e,t,n=!1){return new Ic(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,s=!1){return new Nc(e,t,n,a,s)}static adam(e=.001,t=.9,n=.999,a=null){return new yc(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new _c(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,s=0){return new xc(e,t,n,a,s)}static adagrad(e,t=.1){return new kc(e,t)}}const Cc={sgd:Sc.sgd,momentum:Sc.momentum,adadelta:Sc.adadelta,adagrad:Sc.adagrad,rmsprop:Sc.rmsprop,adamax:Sc.adamax,adam:Sc.adam},Tc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ec(){return new Promise((e=>Tc((()=>e()))))}function Ac(e,t){const n=e[0].length;e.forEach(((e,t)=>{E(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),E(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const a=e[0];e.forEach(((e,s)=>{for(let r=0;r<n;r++)E(r===t||e[r]===a[r],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`))}))}function $c(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}const Rc=30;function zc(e){return e<=Rc?e:Y(e,Math.floor(Math.sqrt(e)))}function Fc(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Dc(e,t,n,a=!0){let s=[];if(a)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)s=s.concat([e[a+1]/t[a],t[a]]);s=s.concat(e.slice(n+1))}return s}function Oc(e,t,n=!0){const a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{const n=[],s=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?s.push(a):n.push(a);a.push(...n),a.push(0),a.push(...s)}return a}function Mc(e,t,n,a=!0){const s=[];a?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Lc(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Bc(e,t,n){const a=e.slice(0,1);for(let s=0;s<n;++s)a.push(e[s+1]-t[s][0]-t[s][1]);return a}function Pc(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===z(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,r=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let c=1;for(let e=r;e<n;++e)c*=o[e],l.push(o[e]);const u=[...J(e.shape).map((e=>e/c)),1].slice(0,r);return[l,i,c,u]}function Wc(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(r+` update.rank < ${s}. `);if(e.length<a+(n.rank-s))throw new Error(r+` Output shape length < ${a+(n.rank-s)}`);if(n.rank!==s+e.length-a)throw new Error(r+" update.rank != "+(s+e.length-a));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(r+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+a])throw new Error(r+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Uc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Wc(n,t,e)}function Vc(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,r=n.length;let i=1;for(let e=s;e<r;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:z(t.shape)/o,sliceSize:i,strides:[...J(n.slice(0,s)),1],outputSize:z(n)}}const Gc=1.7580993408473768,Hc=1.0507009873554805,jc=.3275911,qc=.254829592,Zc=-.284496736,Kc=1.421413741,Xc=-1.453152027,Yc=1.061405429;function Jc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Qc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function eu(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function tu(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function nu(e,t){return{real:e[2*t],imag:e[2*t+1]}}function au(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function su(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const r=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(r),a[s]=Math.sin(r)}return{real:n,imag:a}}function ru(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const iu=/->/g;function ou(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(iu,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[a,s]=e.split("->");E(-1===a.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const r=a.split(","),i=r.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!r.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){const t=a[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(r.length);for(let e=0;e<i;++e){if(new Set(r[e].split("")).size!==r[e].length)throw new Error(`Found duplicate axes in input component ${r[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<r[e].length;++t)l[e].push(o.indexOf(r[e][t]))}const c=o.length,u=[];for(let e=s.length;e<c;++e)u.push(e);return{allDims:o,summedDims:u,idDims:l}}function lu(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function cu(e,t,n){const a=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=s[n]:E(a[t[e][n]]===s[n],(()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function uu(e,t){const n=e,a=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)a.push([]);const r=[];for(let e=0;e<n.length;++e){const s=du(t,n[e]);for(const t of s)-1===r.indexOf(t)&&(a[e].push(t),r.push(t))}return{path:n,steps:a}}function hu(e){return e.every(((e,t)=>e===t))}function du(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function pu(e,t,n=0){let a=[];if("number"==typeof t)E(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);E(s<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}E(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function fu(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function mu(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function gu(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function bu(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function vu(e,t){return`size ${e} must be non-negative, not ${t}`}function _u(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ku(e,t){return`Input to reshape is a SparseTensor with ${z(e)}\n  dense values, but the requested shape requires a multiple of ${z(t)}. inputShape=${e} outputShape= ${t}`}function yu(e,t){return`Input to reshape is a tensor with ${z(e)} dense values, but the requested shape has ${z(t)}. inputShape=${e} outputShape=${t}`}function xu(){return"segment ids must be >= 0"}function wu(){return"segment ids are not increasing"}function Iu(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Nu(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Su(e,t){let n,a=!1;for(e<=Rc?(n=e,a=!0):n=Y(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=Y(e,n+1);return n}function Cu(e,t,n){const a=[],s=e.length;for(let r=0;r<s;r++)r!==t?a.push(e[r]):a.push(n);return a}function Tu(e,t,n,a){const s=t.shape.length,r=e.shape.length;if(0!==a&&(a<-s||a>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${a}`);if(a<0&&(a+=s),a>r)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${r}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,c=1,u=1;for(let t=0;t<a;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),c*=e.shape[t];for(let e=a;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<r;t++)o.push(e.shape[t]),u*=e.shape[t];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:o}}function Eu(e){try{return e.map((e=>ja(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Au(e){return e.map((e=>Ha(e)))}function $u(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=gr(e,"int32"),s=gr([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),i=t*e.length;s.values.set(r,i)}return s.toTensor()}const Ru={kernelName:me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(e,yl(br(n,"float32"),-1))}}},zu={kernelName:ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Co(br(n,"float32")),a=tl(lo(ni(1),t));return Eo(Hi(e,a))}}}},Fu={kernelName:be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tl(lo(Co(br(n,"float32")),1));return Hi(e,t)}}}},Du={kernelName:ve,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=Tr(n.shape,a.shape);return{a:()=>{let t=e;const a=Cr(n.shape,s);return a.length>0&&(t=co(t,a)),wi(t,n.shape)},b:()=>{let t=e;const n=Cr(a.shape,s);return n.length>0&&(t=co(t,n)),wi(t,a.shape)}}}},Ou={kernelName:_e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},Mu={kernelName:xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ul(n)}}},Lu={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ul(n)}}},Bu={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,tl(lo(ni(1),Co(br(n,"float32")))))}}},Pu={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tl(ri(ni(1),Co(br(n,"float32"))));return Hi(e,t)}}}},Wu={kernelName:Te,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=Tr(n.shape,a.shape);return{a:()=>{const t=ri(Co(n),Co(a));let r=oo(e,Hi(a,t));const i=Cr(n.shape,s);return i.length>0&&(r=co(r,i)),wi(r,n.shape)},b:()=>{const t=ri(Co(n),Co(a));let r=Eo(oo(e,Hi(n,t)));const i=Cr(a.shape,s);return i.length>0&&(r=co(r,i)),wi(r,a.shape)}}}},Uu={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,ri(Co(br(n,"float32")),1))}}},Vu={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,lo(ni(1),Co(br(n,"float32"))))}}},Gu=Fs({avgPool3dGrad_:function(e,t,n,a,s,r){const i=Rs(e,"dy","avgPool3dGrad"),o=Rs(t,"input","avgPool3dGrad");let l=i,c=o,u=!1;4===o.rank&&(u=!0,l=wi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=wi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),E(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),E(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),xi("avgPool3dGrad",s,r);const h={dy:l,input:c},d={filterSize:n,strides:a,pad:s,dimRoundingMode:r},p=Is.runKernel(Re,h,d);return u?wi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Hu={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:s,strides:r,pad:i,dimRoundingMode:o}=n;return{x:()=>Gu(e,a,s,r,i,o)}}},ju=Fs({avgPoolGrad_:function(e,t,n,a,s){const r=Rs(e,"dy","avgPoolGrad"),i=Rs(t,"input","avgPoolGrad");E(i.rank===r.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`));let o=i,l=r,c=!1;3===i.rank&&(c=!0,o=wi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=wi(r,[1,r.shape[0],r.shape[1],r.shape[2]])),E(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),E(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const u={dy:l,input:o},h={filterSize:n,strides:a,pad:s},d=Is.runKernel(Ae,u,h);return c?wi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),qu={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:s,strides:r,pad:i}=n;return{x:()=>ju(e,a,s,r,i)}}},Zu={kernelName:ze,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,s]=t,{transposeA:r,transposeB:i}=n;return r||i?!r&&i?{a:()=>po(e,s,!1,!1),b:()=>po(e,a,!0,!1)}:r&&!i?{a:()=>po(s,e,!1,!0),b:()=>po(a,e,!1,!1)}:{a:()=>po(s,e,!0,!0),b:()=>po(e,a,!0,!0)}:{a:()=>po(e,s,!1,!0),b:()=>po(a,e,!0,!1)}}},Ku=Fs({spaceToBatchND_:function(e,t,n){const a=Rs(e,"x","spaceToBatchND");E(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),E(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),E(a.shape.reduce(((e,a,s)=>s>0&&s<=t.length?e&&(a+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:a},r={blockShape:t,paddings:n};return Is.runKernel(Un,s,r)}}),Xu={kernelName:Fe,gradFunc:(e,t,n)=>{const{blockShape:a,crops:s}=n;return{x:()=>Ku(e,a,s)}}},Yu={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,s=a.inputShape,r=a.shape,i=Array.from(r);for(let e=s.length-1;e>=0;e--)if(s[e]===r[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${r}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>co(e,o,!0)}}},Ju={kernelName:Me,gradFunc:e=>({x:()=>e.clone()})},Qu={kernelName:Le,gradFunc:e=>({x:()=>ul(e)})},eh={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:s,clipValueMax:r}=n;return{x:()=>cl(ho(no(a,s),ec(a,r)),e,ul(e))}}},th={kernelName:We,inputsToSave:["x"],gradFunc:Ru.gradFunc},nh={kernelName:Ue,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:s}=n,r=P(s,t[0].shape)[0],i=a.map((e=>e[r]));return el(e,i,r).map((e=>()=>e))}},ah={kernelName:Ve,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,{dilations:r,strides:i,pad:o,dataFormat:l}=n;return E(_i(r),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`)),{x:()=>Li(a.shape,e,s,i,o,l),filter:()=>_l(a,e,s.shape,i,o,l)}}},sh={kernelName:He,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,{strides:r,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Oi(e,s,r,i,o,1,l),filter:()=>_l(e,a,s.shape,r,i,o,l)}}},rh=Fs({conv3DBackpropFilter_:function(e,t,n,a,s){let r=e;4===e.rank&&(r=wi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=wi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),E(5===r.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`)),E(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),E(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),E(r.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${n[3]}.`)),E(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:r,dy:i},l={strides:a,pad:s,filterShape:n};return Is.runKernel(qe,o,l)}}),ih={kernelName:je,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:s,pad:r}=n;E(_i(a),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const[i,o]=t;return{x:()=>Wi(i.shape,e,o,s,r),filter:()=>rh(i,e,o.shape,s,r)}}},oh=Fs({sin_:function(e){const t={x:Rs(e,"x","sin","float32")};return Is.runKernel(Dn,t)}}),lh={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(Eo(oh(br(n,"float32"))),e)}}},ch=Fs({sinh_:function(e){const t={x:Rs(e,"x","sinh")};return Is.runKernel(On,t)}}),uh={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(ch(br(n,"float32")),e)}}},hh=Fs({cumsum_:function(e,t=0,n=!1,a=!1){const s={x:Rs(e,"x","cumsum")},r={axis:t,exclusive:n,reverse:a};return Is.runKernel(Je,s,r)}}),dh={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s,exclusive:r,reverse:i}=n;return{x:()=>{const t=Io([s],a.rank);let n=hh(e,s,r,!i);return null!=t&&(n=hl(n,t)),n}}}},ph={kernelName:nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:s,pad:r,dimRoundingMode:i}=n,o=null==a?[1,1]:a;E(_i(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,c]=t;return E(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),E(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),E(l.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),E(ki(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),xi("depthwiseConv2d",r,i),{x:()=>Tl(l.shape,e,c,s,r,o,i),filter:()=>Cl(l,e,c.shape,s,r,o,i)}}},fh={kernelName:it,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,r={x:a,filter:s,dy:e},i={x:a,filter:s,dy:e};return{x:()=>Is.runKernel(ot,r,n),filter:()=>Is.runKernel(lt,i,n)}}},mh={kernelName:ht,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>Is.runKernel(dt,a)}}},gh={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=oo(Zi(Eo(Co(n))),2/Math.sqrt(Math.PI));return{x:()=>oo(e,a)}}},bh={kernelName:mt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(e,n)}}},vh={kernelName:gt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>wi(e,n.shape)}}},_h={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(e,Zi(n))}}},kh={kernelName:yt,gradFunc:e=>({x:()=>ul(e)})},yh={kernelName:xt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=Tr(n.shape,a.shape);return{a:()=>{const t=Hi(e,br(a,"float32")),r=Cr(n.shape,s);return r.length>0?wi(co(t,r),n.shape):t},b:()=>{let t=oo(e,br(n,"float32"));const r=Cr(a.shape,s);r.length>0&&(t=wi(co(t,r),a.shape));const i=Co(a);return Eo(Hi(t,br(i,"float32")))}}}},xh=Fs({rsqrt_:function(e){const t={x:Rs(e,"x","rsqrt","float32")};return Is.runKernel(An,t)}}),wh={kernelName:wt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[s,r,i,o]=t,l=null==o?ni(1):o,c=Cr(r.shape,s.shape),u=[];if(1===r.rank){for(let e=0;e<s.shape.length-1;++e)u.push(s.shape[e]);u.push(1)}const h=lo(s,r),d=oo(e,l),p=xh(ri(i,ni(a))),f=oo(oo(oo(p,p),p),ni(-.5));return{x:()=>1===r.rank?wi(oo(oo(e,Xi(wi(p,[1,1,1,r.shape[0]]),u)),l),s.shape):wi(oo(oo(e,p),l),s.shape),mean:()=>{let e=oo(oo(p,ni(-1)),d);return 1===r.rank&&(e=co(e,c)),wi(e,r.shape)},variance:()=>{let e=oo(oo(f,h),d);return 1===r.rank&&(e=co(e,c)),wi(e,r.shape)},scale:()=>{const t=oo(h,p);let n=oo(e,t);return 1===r.rank&&(n=co(n,c)),wi(n,r.shape)},offset:()=>{let t=e;return 1===r.rank&&(t=co(t,c)),wi(t,r.shape)}}}},Ih=Fs({unsortedSegmentSum_:function(e,t,n){const a=Rs(e,"x","unsortedSegmentSum"),s=Rs(t,"segmentIds","unsortedSegmentSum","int32");E(D(n),(()=>"numSegments must be of dtype int"));const r={x:a,segmentIds:s},i={numSegments:n};return Is.runKernel(ha,r,i)}}),Nh={kernelName:It,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,s]=t,{axis:r}=n,i=P(r,a.shape)[0];return{x:()=>{const t=a.shape,n=s.size,o=t.slice(0,i),l=o.length,c=t.slice(r,t.length).slice(1),u=c.length,h=Sh(0,l),d=Sh(l+1,l+1+u),p=Ch([o,[n],c]),f=wi(e,p),m=wi(s,[n]),g=Ch([[l],h,d]),b=hl(f,g);let v=Ih(b,m,a.shape[i]);const _=No(g);return v=hl(v,_),v},indices:()=>s}}};function Sh(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Ch(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const Th={kernelName:Ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>ul(n),b:()=>ul(a)}}},Eh={kernelName:Tt,gradFunc:e=>({x:()=>br(e,"float32")})},Ah={kernelName:$t,gradFunc:e=>({x:()=>ul(e)})},$h={kernelName:Rt,gradFunc:e=>({x:()=>ul(e)})},Rh={kernelName:zt,gradFunc:e=>({x:()=>ul(e)})},zh={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:s}=n,r=to(a,0);return{x:()=>cl(r,e,oo(e,s))}}},Fh={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,ri(n,1))}}},Dh={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,br(n,"float32"))}}},Oh={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n;return{logits:()=>{const t=Zi(a);return lo(e,oo(co(e,s,!0),t))}}}},Mh=Fs({localResponseNormalizationBackprop_:function(e,t,n,a=5,s=1,r=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:a,bias:s,alpha:r,beta:i};return Is.runKernel(Gt,o,l)}}),Lh={kernelName:Vt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{depthRadius:r,bias:i,alpha:o,beta:l}=n;return{x:()=>Mh(a,s,e,r,i,o,l)}}};function Bh(e,t,n,a){return t.rank<n.rank&&(t=wi(t,xo(t.shape,a))),e.rank<n.rank&&(e=wi(e,xo(e.shape,a))),{x:()=>oo(e,br(qi(n,t),e.dtype))}}const Ph={kernelName:Ht,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:s}=a,r=t[0],i=Bh(e,t[1],r,P(s,r.shape));return{x:()=>i.x()}}},Wh=Fs({less_:function(e,t){let n=Rs(e,"a","less","string_or_numeric"),a=Rs(t,"b","less","string_or_numeric");[n,a]=gs(n,a),Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(Dt,s)}}),Uh={kernelName:jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>oo(e,br(no(n,a),"float32")),b:()=>oo(e,br(Wh(n,a),"float32"))}}},Vh=Fs({maxPool3dGrad_:function(e,t,n,a,s,r,i){const o=Rs(e,"dy","maxPool3dGrad"),l=Rs(t,"input","maxPool3dGrad"),c=Rs(n,"output","maxPool3dGrad");let u=o,h=l,d=c,p=!1;4===l.rank&&(p=!0,u=wi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=wi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=wi(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),E(5===u.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),E(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),E(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),xi("maxPool3dGrad",r,i);const f={dy:u,input:h,output:d},m={filterSize:a,strides:s,pad:r,dimRoundingMode:i},g=Is.runKernel(Xt,f,m);return p?wi(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Gh={kernelName:Kt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Vh(e,a,s,r,i,o,l)}}},Hh=Fs({maxPoolGrad_:function(e,t,n,a,s,r,i){const o=Rs(e,"dy","maxPoolGrad"),l=Rs(t,"input","maxPoolGrad"),c=Rs(n,"output","maxPoolGrad");E(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),E(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),E(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),xi("maxPoolGrad",r,i);const u={dy:o,input:l,output:c},h={filterSize:a,strides:s,pad:r,dimRoundingMode:i};return Is.runKernel(Zt,u,h)}}),jh={kernelName:qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{filterSize:r,strides:i,pad:o}=n;return{x:()=>Hh(e,a,s,r,i,o)}}},qh={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n,r=P(s,a.shape),i=z(yo(a.shape,r)[1]);return{x:()=>{const t=a.shape.slice();r.forEach((e=>{t[e]=1}));const n=wi(e,t);return Hi(oo(n,zo(a.shape,"float32")),i)}}}},Zh={kernelName:Qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:s}=a,[r,i]=t,o=Bh(e,i,r,P(s,r.shape));return{x:()=>o.x()}}},Kh={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>oo(e,br(ec(n,a),"float32")),b:()=>oo(e,br(to(n,a),"float32"))}}},Xh={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:s}=n,r=s.map((e=>e[0]));return{x:()=>qo(e,r,a.shape)}}},Yh={kernelName:nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=Tr(n.shape,a.shape);return{a:()=>{const t=Cr(n.shape,s);return t.length>0?wi(co(e,t),n.shape):e},b:()=>{const t=oo(e,Eo(Qi(Hi(n,a)))),r=Cr(a.shape,s);return r.length>0?wi(co(t,r),a.shape):t}}}},Jh={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=Tr(n.shape,a.shape);return{a:()=>{const t=oo(e,br(a,"float32")),r=Cr(n.shape,s);return r.length>0?wi(co(t,r),n.shape):t},b:()=>{const t=oo(e,br(n,"float32")),r=Cr(a.shape,s);return r.length>0?wi(co(t,r),a.shape):t}}}},Qh={kernelName:rn,gradFunc:e=>({x:()=>Eo(e)})},ed={kernelName:dn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Ro(n.shape,"float32")}}},td={kernelName:hn,gradFunc:e=>({x:()=>ul(e)})},nd={kernelName:pn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return ol(e,a).map((e=>()=>e))}},ad={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:s}=n,r=s.map((e=>e[0]));return{x:()=>qo(e,r,a.shape)}}},sd={kernelName:mn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,s]=t,r=n,i=a,o=Tr(r.shape,i.shape);return{a:()=>{const t=br(i,"float32");let n=oo(e,oo(t,oc(r,lo(t,ni(1)))));const a=Cr(r.shape,o);return a.length>0&&(n=co(n,a)),wi(n,r.shape)},b:()=>{const t=to(r,0),n=cl(t,so(r),ul(r));let a=oo(e,oo(s,n));const l=Cr(i.shape,o);return l.length>0&&(a=co(a,l)),wi(a,i.shape)}}}},rd={kernelName:gn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,s=to(n,0);return{x:()=>cl(s,e,oo(e,a)),alpha:()=>{let t=cl(s,ul(e),oo(e,n));const r=Cr(a.shape,e.shape);return r.length>0&&(t=co(t,r)),wi(t,a.shape)}}}},id=Fs({cumprod_:function(e,t=0,n=!1,a=!1){const s={x:Rs(e,"x","cumprod")},r={axis:t,exclusive:n,reverse:a};return Is.runKernel(Ye,s,r)}});const od={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n;let r=[];return r=null==s?a.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const a=e.shape.length,s=a-n.length,r=Io(n,a);let i=e;null!=r&&(i=hl(e,r));const o=i.shape.slice(),l=o.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let c=function(e,t,n){const a=e.shape.slice();a[n]=1;const s=wi(t,a),r=id(e,n,!0,!1),i=id(e,n,!0,!0),o=oo(r,i);return oo(s,o)}(i.reshape(o),t,s);if(c=c.reshape(i.shape),null!=r){const e=No(r);c=hl(c,e)}return c}(a,e,r)}}},ld={kernelName:ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=Tr(n.shape,a.shape);return{a:()=>{const t=Hi(e,br(a,"float32")),r=Cr(n.shape,s);return r.length>0?wi(co(t,r),n.shape):t},b:()=>{let t=oo(e,br(n,"float32"));const r=Cr(a.shape,s);r.length>0&&(t=wi(co(t,r),a.shape));const i=Co(a);return Eo(Hi(t,br(i,"float32")))}}}},cd={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,Eo(Co(n)))}}},ud={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=oo(ec(n,6),yl(n));return{x:()=>oo(e,br(a,"float32"))}}},hd={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(e,br(yl(n),"float32"))}}},dd={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wi(e,n.shape)}}},pd={kernelName:Nn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,s={dy:e,images:a};return{images:()=>Is.runKernel(Sn,s,n)}}},fd={kernelName:wn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,s={dy:e,images:a};return{images:()=>Is.runKernel(In,s,n)}}},md={kernelName:Tn,gradFunc:(e,t,n)=>{const{dims:a}=n,s=P(a,e.shape);return{x:()=>Vo(e,s)}}},gd={kernelName:En,gradFunc:e=>({x:()=>ul(e)})},bd={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Eo(Hi(e,oo(oc(n,1.5),2)))}}},vd=Fs({logicalNot_:function(e){const t={x:Rs(e,"x","logicalNot","bool")};return Is.runKernel(Wt,t)}}),_d={kernelName:Rn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>br(ul(n),"float32"),t:()=>oo(e,br(n,e.dtype)),e:()=>oo(e,br(vd(n),e.dtype))}}},kd={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=to(n,ni(0)),a=ni(Gc),s=ni(Hc),r=oo(e,s),i=oo(oo(e,a),Zi(br(n,"float32")));return cl(t,r,i)}}}},yd={kernelName:Ln,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(e,oo(n,lo(ni(1),n)))}}},xd={kernelName:Mn,gradFunc:e=>({x:()=>ul(e)})},wd=Fs({cos_:function(e){const t={x:Rs(e,"x","cos","float32")};return Is.runKernel(Ke,t)}}),Id={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(wd(br(n,"float32")),e)}}},Nd=Fs({cosh_:function(e){const t={x:Rs(e,"x","cosh","float32")};return Is.runKernel(Xe,t)}}),Sd={kernelName:On,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(Nd(br(n,"float32")),e)}}},Cd={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:s,size:r}=n,i=a.shape,[o,l]=Vr(a,s,r),c=[];for(let t=0;t<e.rank;t++)c.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Do(e,c)}}},Td={kernelName:Gn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:s}=n,r=oo(e,a);return{logits:()=>lo(r,oo(co(r,[s],!0),a))}}},Ed={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(e,jo(n))}}},Ad=Fs({batchToSpaceND_:function(e,t,n){const a=Rs(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));E(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),E(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),E(a.shape[0]%s==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const r={x:a},i={blockShape:t,crops:n};return Is.runKernel(Fe,r,i)}}),$d={kernelName:Un,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:s}=n;return{x:()=>Ad(e,a,s)}}},Rd={kernelName:Vn,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>$i(e,a)}}},zd=[Ru,zu,Fu,Du,Ou,Mu,Lu,Bu,Pu,Wu,Uu,Vu,Hu,qu,Zu,Xu,Yu,Ju,Qu,eh,th,nh,sh,ah,ih,lh,uh,dh,ph,fh,ld,mh,gh,bh,vh,_h,yh,kh,wh,Nh,Th,Eh,Ah,$h,Rh,zh,Fh,Dh,Oh,Lh,Ph,Ph,Uh,Gh,jh,qh,Zh,Kh,Xh,Yh,Jh,Qh,ed,td,nd,ad,ad,sd,rd,od,cd,ud,hd,dd,pd,fd,md,gd,bd,_d,kd,yd,xd,Id,Sd,Cd,Td,Ed,$d,$d,Rd,Rd,{kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,oo(tl(br(n,"float32")),2))}}},{kernelName:Xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=ni(2);return{a:()=>oo(e,oo(s,lo(n,a))),b:()=>oo(e,oo(s,lo(a,n)))}}},{kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(e,oo(br(n,"float32"),2))}}},{kernelName:pa,gradFunc:e=>({x:()=>ul(e)})},{kernelName:na,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=Tr(n.shape,a.shape);return{a:()=>{let t=e;const a=Cr(n.shape,s);return a.length>0&&(t=co(t,a)),wi(t,n.shape)},b:()=>{let t=e;const n=Cr(a.shape,s);return n.length>0&&(t=co(t,n)),wi(Eo(t),a.shape)}}}},{kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,s=a.shape.slice(),{axis:r}=n;P(r,a.shape).forEach((e=>{s[e]=1}));const i=wi(e,s),o=oo(i,zo(a.shape,"float32"));return{x:()=>o}}},{kernelName:aa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,Co(wd(n)))}}},{kernelName:sa,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oo(lo(ni(1),Co(n)),e)}}},{kernelName:ra,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:s}=n;return{x:()=>{let t=ul(a);if(1===a.rank)for(let n=0;n<s[0];++n)t=ri(t,qo(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)t=ri(t,qo(e,[n*a.shape[0],r*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)for(let i=0;i<s[2];++i)t=ri(t,qo(e,[n*a.shape[0],r*a.shape[1],i*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=ri(t,qo(e,[n*a.shape[0],r*a.shape[1],i*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:la,gradFunc:(e,t,n)=>{const a=n,{perm:s}=a,r=No(s);return{x:()=>hl(e,r)}}},{kernelName:ua,gradFunc:(e,t,n)=>{const a=n,{axis:s}=a;return{value:()=>al(e,s)}}},{kernelName:ha,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=go(t,ul(t)),a=eo(e,n);let s=no(t,ni(0,"int32"));const r=a.rank-s.rank;for(let e=0;e<r;++e)s=Ki(s,e+1);s=ho(s,zo(a.shape,"bool"));const i=ul(a);return cl(s,a,i)}(e,n)}}},{kernelName:da,gradFunc:e=>({x:()=>ul(e)})}];for(const e of zd)Sa(e);is().prototype.abs=function(){return this.throwIfDisposed(),si(this)};const Fd=Fs({acos_:function(e){const t={x:Rs(e,"x","acos")};return Is.runKernel(ge,t)}});is().prototype.acos=function(){return this.throwIfDisposed(),Fd(this)};const Dd=Fs({acosh_:function(e){const t={x:Rs(e,"x","acosh")};return Is.runKernel(be,t)}});is().prototype.acosh=function(){return this.throwIfDisposed(),Dd(this)},is().prototype.add=function(e){return this.throwIfDisposed(),ri(this,e)},is().prototype.all=function(e,t){return this.throwIfDisposed(),ii(this,e,t)},is().prototype.any=function(e,t){return this.throwIfDisposed(),oi(this,e,t)},is().prototype.argMax=function(e){return this.throwIfDisposed(),li(this,e)};const Od=Fs({argMin_:function(e,t=0){const n={x:Rs(e,"x","argMin")},a={axis:t};return Is.runKernel(we,n,a)}});is().prototype.argMin=function(e){return this.throwIfDisposed(),Od(this,e)},is().prototype.asScalar=function(){return this.throwIfDisposed(),E(1===this.size,(()=>"The array must have only 1 element.")),wi(this,[])},is().prototype.asType=function(e){return this.throwIfDisposed(),br(this,e)},is().prototype.as1D=function(){return this.throwIfDisposed(),wi(this,[this.size])},is().prototype.as2D=function(e,t){return this.throwIfDisposed(),wi(this,[e,t])},is().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),wi(this,[e,t,n])},is().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),wi(this,[e,t,n,a])},is().prototype.as5D=function(e,t,n,a,s){return this.throwIfDisposed(),wi(this,[e,t,n,a,s])};const Md=Fs({asin_:function(e){const t={x:Rs(e,"x","asin")};return Is.runKernel(Ie,t)}});is().prototype.asin=function(){return this.throwIfDisposed(),Md(this)};const Ld=Fs({asinh_:function(e){const t={x:Rs(e,"x","asinh")};return Is.runKernel(Ne,t)}});is().prototype.asinh=function(){return this.throwIfDisposed(),Ld(this)};const Bd=Fs({atan_:function(e){const t={x:Rs(e,"x","atan")};return Is.runKernel(Se,t)}});is().prototype.atan=function(){return this.throwIfDisposed(),Bd(this)};const Pd=Fs({atan2_:function(e,t){let n=Rs(e,"a","atan2"),a=Rs(t,"b","atan2");[n,a]=gs(n,a);const s={a:n,b:a};return Is.runKernel(Te,s)}});is().prototype.atan2=function(e){return this.throwIfDisposed(),Pd(this,e)};const Wd=Fs({atanh_:function(e){const t={x:Rs(e,"x","atanh")};return Is.runKernel(Ce,t)}});is().prototype.atanh=function(){return this.throwIfDisposed(),Wd(this)},is().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Ii(this,e,t,n,a)},is().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Ad(this,e,t)},is().prototype.batchNorm=function(e,t,n,a,s){return this.throwIfDisposed(),Si(this,e,t,n,a,s)},is().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ll(this,e)},is().prototype.cast=function(e){return this.throwIfDisposed(),br(this,e)};const Ud=Fs({ceil_:function(e){const t={x:Rs(e,"x","ceil","float32")};return Is.runKernel(Le,t)}});is().prototype.ceil=function(){return this.throwIfDisposed(),Ud(this)},is().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ai(this,e,t)},is().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof rs&&(e=[e]),$i([this,...e],t)},is().prototype.conv1d=function(e,t,n,a,s,r){return this.throwIfDisposed(),Mi(this,e,t,n,a,s,r)},is().prototype.conv2dTranspose=function(e,t,n,a,s){return this.throwIfDisposed(),Bi(this,e,t,n,a,s)},is().prototype.conv2d=function(e,t,n,a,s,r){return this.throwIfDisposed(),Oi(this,e,t,n,a,s,r)},is().prototype.cos=function(){return this.throwIfDisposed(),wd(this)},is().prototype.cosh=function(){return this.throwIfDisposed(),Nd(this)},is().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),id(this,e,t,n)},is().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),hh(this,e,t,n)};const Vd=Fs({depthToSpace_:function(e,t,n="NHWC"){const a=Rs(e,"x","depthToSpace","float32"),s="NHWC"===n?a.shape[1]:a.shape[2],r="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];E(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),E(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),E(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),E(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`));const o={x:a},l={blockSize:t,dataFormat:n};return Is.runKernel(tt,o,l)}});is().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Vd(this,e,t)},is().prototype.depthwiseConv2d=function(e,t,n,a,s,r){return this.throwIfDisposed(),Vi(this,e,t,n,a,s,r)};const Gd=Fs({dilation2d_:function(e,t,n,a,s=[1,1],r="NHWC"){const i=Rs(e,"x","dilation2d"),o=Rs(t,"filter","dilation2d");E(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),E(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),E("NHWC"===r,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`));let l=i,c=!1;3===i.rank&&(l=wi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const u={x:l,filter:o},h={strides:n,pad:a,dilations:s},d=Is.runKernel(it,u,h);return c?wi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});is().prototype.dilation2d=function(e,t,n,a,s){return this.throwIfDisposed(),Gd(this,e,t,n,a,s)};const Hd=Fs({divNoNan_:function(e,t){let n=Rs(e,"a","div"),a=Rs(t,"b","div");[n,a]=gs(n,a);const s=Hi(n,a),r=ul(s),i=qi(a,r);return cl(i,r,s)}});is().prototype.divNoNan=function(e){return this.throwIfDisposed(),Hd(this,e)},is().prototype.div=function(e){return this.throwIfDisposed(),Hi(this,e)};const jd=Fs({dot_:function(e,t){const n=Rs(e,"t1","dot"),a=Rs(t,"t2","dot");E(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));const s=1===n.rank?n.size:n.shape[1],r=1===a.rank?a.size:a.shape[0];if(E(s===r,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${r}.`)),1===n.rank&&1===a.rank){const e=wi(n,[1,-1]),t=wi(a,[-1,1]),s=po(e,t);return wi(s,[])}if(1===n.rank&&2===a.rank){const e=wi(n,[1,-1]),t=wi(a,[a.shape[0],a.shape[1]]),s=po(e,t);return wi(s,[s.size])}if(2===n.rank&&1===a.rank){const e=wi(a,[-1,1]),t=po(n,e);return wi(t,[t.size])}{const e=wi(a,[a.shape[0],a.shape[1]]);return po(n,e)}}});is().prototype.dot=function(e){return this.throwIfDisposed(),jd(this,e)},is().prototype.elu=function(){return this.throwIfDisposed(),ji(this)},is().prototype.equal=function(e){return this.throwIfDisposed(),qi(this,e)};const qd=Fs({erf_:function(e){let t=Rs(e,"x","erf");E("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=br(t,"float32"));const n={x:t};return Is.runKernel(pt,n)}});is().prototype.erf=function(){return this.throwIfDisposed(),qd(this)},is().prototype.exp=function(){return this.throwIfDisposed(),Zi(this)},is().prototype.expandDims=function(e){return this.throwIfDisposed(),Ki(this,e)};const Zd=Fs({expm1_:function(e){const t={x:Rs(e,"x","expm1")};return Is.runKernel(bt,t)}});is().prototype.expm1=function(){return this.throwIfDisposed(),Zd(this)},is().prototype.fft=function(){return this.throwIfDisposed(),ml(this)},is().prototype.flatten=function(){return this.throwIfDisposed(),wi(this,[this.size])},is().prototype.floor=function(){return this.throwIfDisposed(),Qi(this)},is().prototype.floorDiv=function(e){return this.throwIfDisposed(),Gi(this,e)},is().prototype.gather=function(e,t){return this.throwIfDisposed(),eo(this,e,t)},is().prototype.greaterEqual=function(e){return this.throwIfDisposed(),no(this,e)},is().prototype.greater=function(e){return this.throwIfDisposed(),to(this,e)},is().prototype.ifft=function(){return this.throwIfDisposed(),bl(this)},is().prototype.irfft=function(){return this.throwIfDisposed(),vl(this)};const Kd=Fs({isFinite_:function(e){const t={x:Rs(e,"x","isFinite")};return Is.runKernel($t,t)}});is().prototype.isFinite=function(){return this.throwIfDisposed(),Kd(this)};const Xd=Fs({isInf_:function(e){const t={x:Rs(e,"x","isInf")};return Is.runKernel(Rt,t)}});is().prototype.isInf=function(){return this.throwIfDisposed(),Xd(this)};const Yd=Fs({isNaN_:function(e){const t={x:Rs(e,"x","isNaN")};return Is.runKernel(zt,t)}});is().prototype.isNaN=function(){return this.throwIfDisposed(),Yd(this)},is().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ao(this,e)},is().prototype.lessEqual=function(e){return this.throwIfDisposed(),ec(this,e)},is().prototype.less=function(e){return this.throwIfDisposed(),Wh(this,e)};const Jd=Fs({localResponseNormalization_:function(e,t=5,n=1,a=1,s=.5){const r=Rs(e,"x","localResponseNormalization");E(4===r.rank||3===r.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${r.rank}.`)),E(D(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=r,o=!1;3===r.rank&&(o=!0,i=wi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:i},c={depthRadius:t,bias:n,alpha:a,beta:s},u=Is.runKernel(Vt,l,c);return o?wi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});is().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),Jd(this,e,t,n,a)};const Qd=Fs({logSigmoid_:function(e){const t=Rs(e,"x","logSigmoid"),n=ti((e=>({value:Eo(Qo(Eo(e))),gradFunc:t=>oo(t,jo(Eo(e)))})));return n(t)}});is().prototype.logSigmoid=function(){return this.throwIfDisposed(),Qd(this)},is().prototype.logSoftmax=function(e){return this.throwIfDisposed(),uo(this,e)},is().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),gc(this,e,t)},is().prototype.log=function(){return this.throwIfDisposed(),so(this)},is().prototype.log1p=function(){return this.throwIfDisposed(),ro(this)},is().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ho(this,e)},is().prototype.logicalNot=function(){return this.throwIfDisposed(),vd(this)};const ep=Fs({logicalOr_:function(e,t){const n=Rs(e,"a","logicalOr","bool"),a=Rs(t,"b","logicalOr","bool");Tr(n.shape,a.shape);const s={a:n,b:a};return Is.runKernel(Ut,s)}});is().prototype.logicalOr=function(e){return this.throwIfDisposed(),ep(this,e)};const tp=Fs({logicalXor_:function(e,t){const n=Rs(e,"a","logicalXor","bool"),a=Rs(t,"b","logicalXor","bool");return Tr(n.shape,a.shape),ho(ep(e,t),vd(ho(e,t)))}});is().prototype.logicalXor=function(e){return this.throwIfDisposed(),tp(this,e)},is().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),po(this,e,t,n)},is().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),fo(this,e,t,n,a)},is().prototype.max=function(e,t){return this.throwIfDisposed(),io(this,e,t)},is().prototype.maximum=function(e){return this.throwIfDisposed(),go(this,e)},is().prototype.mean=function(e,t){return this.throwIfDisposed(),bo(this,e,t)},is().prototype.min=function(e,t){return this.throwIfDisposed(),ic(this,e,t)},is().prototype.minimum=function(e){return this.throwIfDisposed(),vo(this,e)};const np=Fs({mirrorPad_:function(e,t,n){E("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const a=Rs(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<a.rank;e++)E(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),E(t[e][0]>=0&&t[e][0]<=a.shape[e]-s&&t[e][1]>=0&&t[e][1]<=a.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-s} or less than 0 for input of shape ${a.shape}`));const r={paddings:t,mode:n},i={x:a};return Is.runKernel(tn,i,r)}});is().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),np(this,e,t)};const ap=Fs({mod_:function(e,t){let n=Rs(e,"a","mod"),a=Rs(t,"b","mod");[n,a]=gs(n,a);const s={a:n,b:a};return Is.runKernel(nn,s)}});is().prototype.mod=function(e){return this.throwIfDisposed(),ap(this,e)},is().prototype.mul=function(e){return this.throwIfDisposed(),oo(this,e)},is().prototype.neg=function(){return this.throwIfDisposed(),Eo(this)},is().prototype.norm=function(e,t,n){return this.throwIfDisposed(),cc(this,e,t,n)},is().prototype.notEqual=function(e){return this.throwIfDisposed(),Ao(this,e)},is().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),$o(this,e,t,n)},is().prototype.onesLike=function(){return this.throwIfDisposed(),Fo(this)},is().prototype.pad=function(e,t){return this.throwIfDisposed(),Do(this,e,t)};const sp=Fs({pool_:function(e,t,n,a,s,r,i){null==s&&(s=[1,1]),null==r&&(r=1),0===a&&(a="valid");const o=Rs(e,"x","maxPool");let l=o,c=!1;3===o.rank&&(c=!0,l=wi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(ki(r,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`));const u=ui(l.shape,t,r,s,a),h=[u.dilationHeight,u.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],s[t]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),s=n.map((e=>e[1])),r=e.concat(a,s),i=t.map(((e,t)=>(e-r[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[a[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],h,d),g=p?a:"valid",b=p?l:Ku(l,h,f),v=("avg"===n?()=>Ii(b,t,r,g,i):()=>fo(b,t,r,g,i))(),_=p?v:Ad(v,h,m);return c?wi(_,[_.shape[1],_.shape[2],_.shape[3]]):_}});is().prototype.pool=function(e,t,n,a,s,r){return this.throwIfDisposed(),sp(this,e,t,n,a,s,r)},is().prototype.pow=function(e){return this.throwIfDisposed(),oc(this,e)},is().prototype.prelu=function(e){return this.throwIfDisposed(),Oo(this,e)};const rp=Fs({prod_:function(e,t=null,n=!1){let a=Rs(e,"x","prod");"bool"===a.dtype&&(a=br(a,"int32"));const s={x:a},r={axis:t,keepDims:n};return Is.runKernel(bn,s,r)}});is().prototype.prod=function(e,t){return this.throwIfDisposed(),rp(this,e,t)};const ip=Fs({reciprocal_:function(e){const t={x:Rs(e,"x","reciprocal")};return Is.runKernel(kn,t)}});is().prototype.reciprocal=function(){return this.throwIfDisposed(),ip(this)},is().prototype.relu=function(){return this.throwIfDisposed(),Uo(this)},is().prototype.relu6=function(){return this.throwIfDisposed(),kl(this)},is().prototype.reshapeAs=function(e){return this.throwIfDisposed(),wi(this,e.shape)},is().prototype.reshape=function(e){return this.throwIfDisposed(),wi(this,e)},is().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Yl(this,e,t,n)},is().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Jl(this,e,t,n)},is().prototype.reverse=function(e){return this.throwIfDisposed(),Vo(this,e)},is().prototype.rfft=function(){return this.throwIfDisposed(),gl(this)},is().prototype.round=function(){return this.throwIfDisposed(),tc(this)},is().prototype.rsqrt=function(){return this.throwIfDisposed(),xh(this)},is().prototype.selu=function(){return this.throwIfDisposed(),Go(this)},is().prototype.separableConv2d=function(e,t,n,a,s,r){return this.throwIfDisposed(),Ho(this,e,t,n,a,s,r)},is().prototype.sigmoid=function(){return this.throwIfDisposed(),jo(this)};const op=Fs({sign_:function(e){const t={x:Rs(e,"x","sign")};return Is.runKernel(Mn,t)}});is().prototype.sign=function(){return this.throwIfDisposed(),op(this)},is().prototype.sin=function(){return this.throwIfDisposed(),oh(this)},is().prototype.sinh=function(){return this.throwIfDisposed(),ch(this)},is().prototype.slice=function(e,t){return this.throwIfDisposed(),qo(this,e,t)},is().prototype.softmax=function(e){return this.throwIfDisposed(),Jo(this,e)},is().prototype.softplus=function(){return this.throwIfDisposed(),Qo(this)},is().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Ku(this,e,t)},is().prototype.split=function(e,t){return this.throwIfDisposed(),el(this,e,t)},is().prototype.sqrt=function(){return this.throwIfDisposed(),tl(this)},is().prototype.square=function(){return this.throwIfDisposed(),Co(this)},is().prototype.squaredDifference=function(e){return this.throwIfDisposed(),mc(this,e)},is().prototype.squeeze=function(e){return this.throwIfDisposed(),nl(this,e)},is().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof rs?[this,e]:[this,...e];return al(n,t)},is().prototype.step=function(e){return this.throwIfDisposed(),yl(this,e)};const lp=Fs({stridedSlice_:function(e,t,n,a,s=0,r=0,i=0,o=0,l=0){const c={x:Rs(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:n,strides:a,beginMask:s,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Is.runKernel(Jn,c,u)}});is().prototype.stridedSlice=function(e,t,n,a,s,r,i,o){return this.throwIfDisposed(),lp(this,e,t,n,a,s,r,i,o)},is().prototype.sub=function(e){return this.throwIfDisposed(),lo(this,e)},is().prototype.sum=function(e,t){return this.throwIfDisposed(),co(this,e,t)};const cp=Fs({tan_:function(e){const t={x:Rs(e,"x","tan","float32")};return Is.runKernel(aa,t)}});is().prototype.tan=function(){return this.throwIfDisposed(),cp(this)},is().prototype.tanh=function(){return this.throwIfDisposed(),sl(this)},is().prototype.tile=function(e){return this.throwIfDisposed(),Xi(this,e)},is().prototype.toBool=function(){return this.throwIfDisposed(),br(this,"bool")},is().prototype.toFloat=function(){return this.throwIfDisposed(),br(this,"float32")},is().prototype.toInt=function(){return this.throwIfDisposed(),br(this,"int32")};const up=Fs({topk_:function(e,t=1,n=!0){const a=Rs(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const r={x:a},i={k:t,sorted:n},[o,l]=Is.runKernel(ia,r,i);return{values:o,indices:l}}});is().prototype.topk=function(e,t){return this.throwIfDisposed(),up(this,e,t)},is().prototype.transpose=function(e){return this.throwIfDisposed(),hl(this,e)};const hp=Fs({unique_:function(e,t=0){const n=Rs(e,"x","unique","string_or_numeric");E(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},s={axis:t},[r,i]=Is.runKernel(ca,a,s);return{values:r,indices:i}}});is().prototype.unique=function(e){return this.throwIfDisposed(),hp(this,e)},is().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Ih(this,e,t)},is().prototype.unstack=function(e){return this.throwIfDisposed(),ol(this,e)},is().prototype.where=function(e,t){return this.throwIfDisposed(),cl(e,this,t)},is().prototype.zerosLike=function(){return this.throwIfDisposed(),ul(this)};class dp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dp.prototype)}}class pp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pp.prototype)}}class fp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fp.prototype)}}class mp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mp.prototype)}}class gp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gp.prototype)}}Error;class bp{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function vp(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function _p(e,t){if(!e)throw new gp(t)}function kp(e,t){let n=0;for(const a of e)a===t&&n++;return n}function yp(e){return 1===e.length?e[0]:e}function xp(e){return Array.isArray(e)?e:[e]}function wp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Ip(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Np={};function Sp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Cp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Cp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Cp(t):e[n]=t.value)}}}function Tp(e,t={},n={},a="object",s=!1){if("string"==typeof e){const s=e;let r;if(s in n)r=n[s];else if(s in Np)r=Np[s];else if(r=t[s],null==r)throw new fp(`Unknown ${a}: ${e}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}{const r=e;if(null==r.className||null==r.config)throw new fp(`${a}: Improper config format: ${JSON.stringify(r)}.\n'className' and 'config' must set.`);const i=r.className;let o,l;if(i in n?[o,l]=n[i]:i in Np?[o,l]=Np.className:i in t&&([o,l]=t[i]),null==o)throw new fp(`Unknown ${a}: ${i}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Np))e[t]=Np[t];for(const t of Object.keys(n))e[t]=n[t];r.config.customObjects=e;const t=Object.assign({},Np);for(const e of Object.keys(n))Np[e]=n[e];Cp(r.config);const a=l(o,r.config,n,s);return Np=Object.assign({},t),a}{const e=Object.assign({},Np);for(const e of Object.keys(n))Np[e]=n[e];const t=new o(r.config);return Np=Object.assign({},e),t}}}function Ep(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ap(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function $p(e){if(null==e)throw new fp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Rp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new fp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function zp(e,t,n=0,a=1/0){return _p(n>=0),_p(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function Fp(e,t){Array.isArray(e)?(E(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Fp(e,`element ${n+1} of ${t}`)))):E(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Dp(e)}.`))}function Dp(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Dp(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Op(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Mp=0;function Lp(){return Mp++}const Bp={};function Pp(e=""){return e in Bp||(Bp[e]=0),Bp[e]+=1,e+Bp[e].toString()}const Wp=["channelsFirst","channelsLast"],Up=["nearest","bilinear"],Vp=["valid","same","causal"],Gp=["max","avg"],Hp=["sum","mul","concat","ave"],jp=new Map;function qp(e){Rp(Wp,"DataFormat",e)}function Zp(e){Rp(Vp,"PaddingMode",e)}function Kp(e){Rp(Gp,"PoolMode",e)}const Xp=[];function Yp(e,t){Xp.push(e);try{const e=t();return Xp.pop(),e}catch(e){throw Xp.pop(),e}}function Jp(e){if(!tf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Xp.length?"":Xp.join("/")+"/")+e}function Qp(e){if(!tf(e))throw new Error("Not a valid tensor name: '"+e+"'");jp.has(e)||jp.set(e,0);const t=jp.get(e);if(jp.set(e,jp.get(e)+1),t>0){const n=`${e}_${t}`;return jp.set(n,1),n}return e}const ef=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tf(e){return!!e.match(ef)}function nf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let s=t;s<n;++s)a*=e[s];return a}function af(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function sf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function rf(e,t){if(t<e)throw new fp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let a=e;a<t;++a)n.push(a);return n}let of;function lf(){return null==of&&(of=Is.backend.epsilon()),of}function cf(e,t){return br(e,t)}function uf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),wi(e,n)}function hf(e,t,n){return Yr((()=>{switch(e.rank){case 1:return Zo(e,t,n);case 2:return Ko(e,[t,0],[n,e.shape[1]]);case 3:return Xo(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Yo(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return qo(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return qo(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new fp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function df(e,t,n){return Yr((()=>{switch(e.rank){case 1:return Zo(e,t,n);case 2:return Ko(e,[0,t],[e.shape[0],n]);case 3:return Xo(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Yo(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new fp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function pf(e,t,n,a){return Yr((()=>{switch(e.rank){case 1:return Zo(e,t,n);case 2:switch(a){case 1:return hf(e,t,n);case 2:return df(e,t,n);default:throw new fp(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return hf(e,t,n);case 2:return Xo(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return df(e,t,n);default:throw new fp(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return hf(e,t,n);case 2:return Yo(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Yo(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return df(e,t,n);default:throw new fp(`The axis is not within the rank of the tensor ${a}`)}default:throw new fp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ff(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),$i(e,t)}function mf(e,t){switch(e.rank){case 1:return Ri([e,t]);case 2:return zi([e,t],0);case 3:return Fi([e,t],0);case 4:return Di([e,t],0);default:throw new fp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function gf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new fp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Xi(e,t)}function bf(e,t=0,n=1,a,s){return Po(e,t,n,a,s)}function vf(e,t,n,a){if(e.rank<2||t.rank<2)throw new mp(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new mp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return El({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?yf(e.rank,a,"channelsLast"):null,activation:n});{const s=e.shape.slice(),r=s.pop();e=wi(e,[-1,r]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),c=[...i,o],u=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=wi(hl(t,u),[l,-1]);const h=[...s,...c];return wi(El({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?yf(e.rank,a,"channelsLast"):null,activation:n}),h)}}function _f(e,t,n){return Yr((()=>(t=Array.isArray(t)?rl(t,"int32"):br(t,"int32"),eo(e,t,n))))}function kf(e){return oo(e,e)}function yf(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new fp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?wi(t,[1,a[0],1,1,1]):wi(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?wi(t,[1,1,1,1,a[0]]):wi(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?wi(t,[1,a[0],1,1]):wi(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?wi(t,[1,1,1,a[0]]):wi(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?wi(t,[1,a[0],1]):wi(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?wi(t,[1,1,a[0]]):wi(t,[1].concat(a))}else if(e<3)return t;throw new fp(`Unsupported input rank by biasAdd: ${t.rank}`)}function xf(e,t,n){return Yr((()=>(null==n&&(n="channelsLast"),qp(n),ri(e,yf(e.rank,t,n)))))}function wf(e,t,n,a){return Yr((()=>dl(e,t,n,a)))}function If(e,t,n=!1){return n?e():t()}const Nf=["fanIn","fanOut","fanAvg"],Sf=["normal","uniform","truncatedNormal"];class Cf extends jr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Tf extends Cf{apply(e,t){return Ro(e,t)}}Tf.className="Zeros",Zr(Tf);class Ef extends Cf{apply(e,t){return zo(e,t)}}Ef.className="Ones",Zr(Ef);class Af extends Cf{constructor(e){if(super(),"object"!=typeof e)throw new fp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new fp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Yr((()=>oo(ni(this.value),zo(e,t))))}getConfig(){return{value:this.value}}}Af.className="Constant",Zr(Af);class $f extends Cf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Wo(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}$f.className="RandomUniform",Zr($f);class Rf extends Cf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mp(`randomNormal does not support dType ${t}.`);return bf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Rf.className="RandomNormal",Zr(Rf);class zf extends Cf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mp(`truncatedNormal does not support dType ${t}.`);return il(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}zf.className="TruncatedNormal",Zr(zf);class Ff extends Cf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Yr((()=>{if(2!==e.length||e[0]!==e[1])throw new fp("Identity matrix initializer can only be used for 2D square matrices.");return oo(this.gain,Yi(e[0]))}))}getConfig(){return{gain:this.gain}}}Ff.className="Identity",Zr(Ff);class Df extends Cf{constructor(e){if(super(),e.scale<0)throw new fp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Rp(Nf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Rp(Sf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,a;if(qp(t),2===e.length)n=e[0],a=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=nf(e,2);n=e[1]*t,a=e[0]*t}else if("channelsLast"===t){const t=nf(e,0,e.length-2);n=e[e.length-2]*t,a=e[e.length-1]*t}}else{const t=nf(e);n=Math.sqrt(t),a=Math.sqrt(t)}return[n,a]}(e),a=n[0],s=n[1];let r=this.scale;if("fanIn"===this.mode?r/=Math.max(1,a):"fanOut"===this.mode?r/=Math.max(1,s):r/=Math.max(1,(a+s)/2),"normal"===this.distribution){const n=Math.sqrt(r);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mp(`${this.getClassName()} does not support dType ${t}.`);return il(e,0,n,t,this.seed)}{const n=Math.sqrt(3*r);return Wo(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Df.className="VarianceScaling",Zr(Df);class Of extends Df{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Df.className}}Of.className="GlorotUniform",Zr(Of);class Mf extends Df{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Df.className}}Mf.className="GlorotNormal",Zr(Mf);class Lf extends Df{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Df.className}}Lf.className="HeNormal",Zr(Lf);class Bf extends Df{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Df.className}}Bf.className="HeUniform",Zr(Bf);class Pf extends Df{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Df.className}}Pf.className="LeCunNormal",Zr(Pf);class Wf extends Df{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Df.className}}Wf.className="LeCunNormal",Zr(Wf);class Uf extends Cf{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new mp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Yr((()=>{if(e.length<2)throw new mp("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=bf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=vc.gramSchmidt(t);return e[0]>e[1]&&(n=hl(n)),oo(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Uf.className="Orthogonal",Zr(Uf);const Vf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Gf(e,t={}){return Tp(e,qr.getMap().classNameMap,t,"initializer")}function Hf(e){return Sp(e)}function jf(e){if("string"==typeof e){const t=e in Vf?Vf[e]:e;if("GlorotNormal"===t)return new Mf;if("GlorotUniform"===t)return new Of;if("HeNormal"===t)return new Lf;if("HeUniform"===t)return new Bf;if("LeCunNormal"===t)return new Pf;if("LeCunUniform"===t)return new Wf;{const e={};return e.className=t,e.config={},Gf(e)}}return e instanceof Cf?e:Gf(e)}function qf(e){return Array.isArray(e)&&Array.isArray(e[0])}function Zf(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Kf(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new fp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Xf(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new fp(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Yf(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Jf{constructor(e,t="float32",n="Variable",a=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Lp(),n=null==n?"Variable":n,this.originalName=Jp(n),this.name=Qp(this.originalName),this.trainable_=a,this.constraint=s,this.val=function(e,t=!0,n,a){return Is.makeVariable(e,t,n,a)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Qf(e){return e.map((e=>e.read()))}function em(e){e.forEach((e=>{e[0].write(e[1])}))}class tm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class nm{constructor(e,t,n,a,s,r,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=s,this.outputTensorIndex=i,this.id=Lp(),null!=r&&(this.originalName=Jp(r),this.name=Qp(this.originalName)),this.rank=t.length}}let am=0;class sm{constructor(e,t){this.callArgs=t,this.id=am++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let rm=0;class im extends jr{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=rm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=wp(e)+"_"+Pp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new pp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new fp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return yp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return yp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new dp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new dp(`Layer ${this.name} is not connected, no input to return.`);return yp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new dp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new dp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return yp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=xp(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=xp(this.inputSpec);if(e.length!==t.length)throw new fp(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const a=e[n],s=t[n];if(null==s)continue;const r=a.rank;if(null!=s.ndim&&r!==s.ndim)throw new fp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${r}`);if(null!=s.maxNDim&&r>s.maxNDim)throw new fp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${r}`);if(null!=s.minNDim&&r<s.minNDim)throw new fp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${r}.`);if(null!=s.dtype&&a.dtype!==s.dtype)throw new fp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${a.dtype}.`);if(s.axes){const e=a.shape;for(const t in s.axes){const a=Number(t),r=s.axes[t],i=a>=0?e[a]:e[e.length+a];if(null!=r&&-1===[r,null].indexOf(i))throw new fp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${a} of input shape to have value ${r} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],r=a.shape[e];if(null!=t&&null!=r&&t!==r)throw new fp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=xp(e);let a=!0;for(const e of n)if(!(e instanceof nm)){a=!1;break}let s=!0;for(const e of n)if(e instanceof nm){s=!1;break}if(a===s)throw new fp("Arguments to apply() must be all SymbolicTensors or all Tensors");return Yp(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of xp(e))t.push(n.shape);this.build(yp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t);const s=xp(a),r=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),r.push(e);if(a=yp(r),null!=this.activityRegularizer)throw new mp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=xp(e);const t=[];for(const n of e)t.push(n.shape);return yp(t)}(e),a=this.computeOutputShape(n);let s;const r="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new nm(r,n,this,xp(e),t,this.name,a))):new nm(r,a,this,xp(e),t,this.name),this.addInboundNode(e,s,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new mp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new dp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new dp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new pp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Yf(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Qf(e?this.trainableWeights:this.weights)}setWeights(e){Yr((()=>{const t=this.weights;if(t.length!==e.length)throw new fp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],a=Qf(t);for(let s=0;s<a.length;++s){const r=a[s],i=t[s],o=e[s];if(!F(r.shape,o.shape))throw new fp(`Layer weight shape ${r.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}em(n)}))}addWeight(e,t,n,a,s,r,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new fp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():jf("zeros"));const l=a.apply(t,n),c=new Jf(l,n,e,r,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(c.read()))),null==r&&(r=!0),r?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=xp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,a,s,r,i=null){const o=xp(e);t=xp(t),n=xp(n),a=xp(a),s=Zf(s),r=Zf(r);const l=[],c=[],u=[];for(const e of o)l.push(e.sourceLayer),c.push(e.nodeIndex),u.push(e.tensorIndex);new sm({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:s,outputShapes:r},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function om(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=om(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class lm extends im{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Pp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new fp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new fp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new fp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new nm(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new fp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}lm.className="InputLayer",Zr(lm);class cm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof cm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new fp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return br(t,e.dtype)}catch(n){throw new fp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof nm){if(null==this.id2Value[e.id])throw new fp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new fp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof nm){if(null==this.id2Value[e.id])throw new fp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new fp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Jr(this.id2Mask)}}const um=new bp,hm=new bp;function dm(e,t,n,a){const s=null!=n&&n.training,r=Array.isArray(e),i=r?e:[e],o=i.map((e=>e.name)),l=[],c=t.names();for(const e of o)-1!==c.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=o.join(",")+"|"+t.names().join(",");let h,d=um.get(u);if(null==d){const e=function(e,t){E(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const s=fm(e[0],t);n=s.sorted,a=s.recipientMap}else{const s=new Set;for(const r of e){const{sorted:e,recipientMap:i}=fm(r,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==a[e]&&(a[e]=new Set),i[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:pm(a)}}(i,t);d=e.sorted,h=e.recipientCounts,um.put(u,d),hm.put(u,h)}h={},s||Object.assign(h,hm.get(u));const p=new cm(t);for(let e=0;e<d.length;++e){if(null!=a){const e=Xr().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const r=d[e],i=r.sourceLayer;if(i instanceof lm)continue;const c=[],u=[],f=[];let m=!1;for(const e of r.inputs){const n=p.getValue(e),a=p.getMask(e);c.push(n),u.push(a),null!=a&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=u[0]);const g=xp(i.apply(c,n));let b=null;i.supportsMasking&&(b=i.computeMask(c,u));const v=mm(r),_=Array.isArray(v)?v:[v];for(let e=0;e<_.length;++e){p.hasKey(_[e])||p.add(_[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(_[e].name);-1!==t&&(l[t]=g[e])}s||Jr(f)}return p.disposeMasks(),r?l:l[0]}function pm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function fm(e,t){const n=new Set,a=[],s={};for(const e of t.names())n.add(e);const r=[],i=[];for(r.push(e);r.length>0;){const e=r[r.length-1];if(n.has(e.name)){r.pop();continue}const t=i[i.length-1]===r.length-1;if(0===e.inputs.length||t)r.pop(),a.push(e),n.add(e.name),t&&i.pop();else{i.push(r.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||r.push(t)}}return{sorted:a,recipientMap:s}}function mm(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function gm(e,t){return Yr((()=>tl(co(oo(e,e),t,!0))))}ue().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=um&&um.setMaxEntries(e),null!=hm&&hm.setMaxEntries(e)}));class bm extends jr{getConfig(){return{}}}class vm extends bm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yr((()=>{const t=gm(e,this.axis),n=Ai(t,0,this.maxValue);return oo(e,Hi(n,ri(lf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}vm.className="MaxNorm",Zr(vm);class _m extends bm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yr((()=>Hi(e,ri(lf(),gm(e,this.axis)))))}getConfig(){return{axis:this.axis}}}_m.className="UnitNorm",Zr(_m);class km extends bm{apply(e){return Uo(e)}}km.className="NonNeg",Zr(km);class ym extends bm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yr((()=>{const t=gm(e,this.axis),n=ri(oo(this.rate,Ai(t,this.minValue,this.maxValue)),oo(1-this.rate,t));return oo(e,Hi(n,ri(lf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ym.className="MinMaxNorm",Zr(ym);const xm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function wm(e){return Sp(e)}function Im(e,t={}){return Tp(e,qr.getMap().classNameMap,t,"constraint")}function Nm(e){return null==e?null:"string"==typeof e?Im({className:e in xm?xm[e]:e,config:{}}):e instanceof bm?e:Im(e)}async function Sm(e){if(null==e)return;const t=[],n=[],a=[];for(const s in e){const r=e[s];if("number"!=typeof r){const e=r;t.push(e.data()),n.push(s),a.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Jr(a)}}function Cm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Tm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Tm||(Tm={}));class Em{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Am{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class $m extends Em{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const a=t[e];if("number"==typeof a)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+a*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Yr((()=>ri(this.totals[e],oo(a,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Yr((()=>{const n=oo(Hi(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Qr(t[e])})))}}class Rm extends Em{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const s=this.history[a];for(let r=0;r<s.length;++r)if("number"!=typeof s[r]){const i=s[r];e.push(i.data()),t.push(a),n.push(r)}}const a=await Promise.all(e);for(let e=0;e<a.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=a[e][0]}}class zm extends Em{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ec,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Z(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,s=null!=n?n():Ga();return(...r)=>{const i=null!=n?n():Ga();return i-s<t||(s=i,a=e(...r)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Sm(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Sm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Sm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Sm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Sm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Z(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Sm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Sm(e),await this.trainEnd(e))}}function Fm(e,t){return null==e&&(e={}),e instanceof Em?[e]:Array.isArray(e)&&e[0]instanceof Em?e:xp(e).map((e=>new zm(e,t)))}class Dm{constructor(){}static registerCallbackConstructor(e,t){E(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Dm.checkForDuplicate(t),null==Dm.constructors[e]&&(Dm.constructors[e]=[]),Dm.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Dm.constructors)Dm.constructors[+t].forEach((t=>{if(t===e)throw new fp("Duplicate callback constructor.")}))}static clear(){Dm.constructors={}}static createCallbacks(e){const t=[];for(const n in Dm.constructors){const a=+n;e>=a&&t.push(...Dm.constructors[a])}return t.map((e=>new e))}}function Om(e,t,n,a,s,r,i,o,l){const c=new Rm,u=[new $m,...Dm.createCallbacks(t)];null!=e&&u.push(...e),u.push(c);const h=new Am(u);return h.setParams({epochs:n,initialEpoch:a,samples:s,steps:r,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:c}}function Mm(e,t={},n=!1){return Tp(e,qr.getMap().classNameMap,t,"layer",n)}function Lm(e,t){return Yr((()=>{"float32"!==e.dtype&&(e=br(e,"float32"));const n=co(kf(e),t,!0),a=Ji(n.shape,lf()),s=tl(go(n,a));return Hi(e,s)}))}function Bm(e,t){return Yr((()=>bo(kf(lo(t,e)),-1)))}function Pm(e,t){return Yr((()=>bo(si(lo(t,e)),-1)))}function Wm(e,t){return Yr((()=>{const n=lo(e,t),a=Ai(si(e),lf(),Number.MAX_VALUE),s=si(Hi(n,a));return oo(100,bo(s,-1))}))}function Um(e,t,n=!1){return Yr((()=>{if(n)t=Jo(t);else{const e=co(t,t.shape.length-1,!0);t=Hi(t,e)}return t=Ai(t,lf(),1-lf()),Eo(co(oo(br(e,"float32"),so(t)),t.shape.length-1))}))}function Vm(e,t,n=!1){return Yr((()=>{const a=br(Qi(function(e){const t=[nf(e.shape)];return wi(e,t)}(e)),"int32"),s=(t=Ai(t,lf(),1-lf())).shape;return Um(wi($o(a,s[s.length-1]),s),t,n)}))}function Gm(e,t){return Yr((()=>{let n;return n=Ai(t,lf(),1-lf()),n=so(Hi(n,lo(1,n))),bo(function(e,t){if(!F(e.shape,t.shape))throw new fp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Yr((()=>{const n=Uo(t),a=Eo(si(t));return ri(lo(n,oo(t,e)),ro(Zi(a)))}))}(e,n),-1)}))}function Hm(e,t){return Yr((()=>{const n=Lm(e,-1),a=Lm(t,-1),s=oo(n,a);return Eo(co(s,-1))}))}Dm.constructors={};const jm={meanSquaredError:Bm,meanAbsoluteError:Pm,meanAbsolutePercentageError:Wm,meanSquaredLogarithmicError:function(e,t){return Yr((()=>{const n=Ai(t,lf(),Number.MAX_VALUE),a=so(ri(1,n)),s=Ai(e,lf(),Number.MAX_VALUE),r=so(ri(1,s));return bo(kf(lo(a,r)),-1)}))},squaredHinge:function(e,t){return Yr((()=>{const n=go(0,lo(1,oo(e,t)));return bo(kf(n),-1)}))},hinge:function(e,t){return Yr((()=>{const n=go(0,lo(1,oo(e,t)));return bo(n,-1)}))},categoricalHinge:function(e,t){return Yr((()=>{const n=co(oo(e,t),-1),a=io(oo(lo(1,e),t),-1);return go(0,ri(1,lo(a,n)))}))},logcosh:function(e,t){return Yr((()=>{const n=Math.log(2),a=lo(t,e),s=lo(ri(a,Qo(oo(-2,a))),n);return bo(s,-1)}))},categoricalCrossentropy:Um,sparseCategoricalCrossentropy:Vm,binaryCrossentropy:Gm,kullbackLeiblerDivergence:function(e,t){return Yr((()=>{const n=Ai(e,lf(),1),a=Ai(t,lf(),1);return co(oo(e,so(Hi(n,a))),-1)}))},poisson:function(e,t){return Yr((()=>{const n=so(ri(lf(),t));return bo(lo(t,oo(e,n)),-1)}))},cosineProximity:Hm};function qm(e){if("string"==typeof e){if(e in jm)return jm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new fp(t)}return e}function Zm(e,t){return Yr((()=>{const n=oo(.5,Fo(t)),a=cf(to(t,n),e.dtype);return bo(qi(e,a),-1)}))}function Km(e,t){return Yr((()=>cf(qi(li(e,-1),li(t,-1)),"float32")))}function Xm(e,t){return Gm(e,t)}function Ym(e,t){return e.rank===t.rank&&(e=nl(e,[e.rank-1])),(t=li(t,-1)).dtype!==e.dtype&&(t=br(t,e.dtype)),br(qi(e,t),"float32")}const Jm=Um,Qm=Vm,eg={binaryAccuracy:Zm,categoricalAccuracy:Km,precision:function(e,t){return Yr((()=>{const n=function(e,t){return Yr((()=>br(co(ho(qi(e,1),qi(t,1))),"float32")))}(e,t),a=function(e,t){return Yr((()=>br(co(ho(qi(e,0),qi(t,1))),"float32")))}(e,t),s=ri(n,a);return br(cl(to(s,0),Hi(n,s),0),"float32")}))},categoricalCrossentropy:Jm,sparseCategoricalCrossentropy:Qm,mse:Bm,MSE:Bm,mae:Pm,MAE:Pm,mape:Wm,MAPE:Wm,cosine:Hm};function tg(e){if("string"==typeof e&&e in eg)return eg[e];if("string"!=typeof e&&null!=e)return e;throw new fp(`Unknown metric ${e}`)}function ng(e){if(_p(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(jm))if(jm[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(eg))if(eg[n]===e){t=n;break}return void 0!==t?t:e.name}}function ag(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!sg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function sg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!sg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!sg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function rg(e,t,n=console.log){let a="";for(let n=0;n<e.length;++n)n>0&&(a=a.slice(0,a.length-1)+" "),a+=e[n],a=a.slice(0,t[n]),a+=" ".repeat(t[n]-a.length);n(a)}function ig(e,t,n){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}rg([`${e.name} (${e.getClassName()})`,s,a,e.countParams().toString()],t,n)}function og(e,t,n,a){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,a=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${a}][${s}]`)}const o=e.name,l=e.getClassName(),c=0===i.length?"":i[0];rg([`${o} (${l})`,r,s,e.countParams().toString(),c],t,a);for(let e=1;e<i.length;++e)rg(["","","","",i[e]],t,a)}function lg(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function cg(e,t){if(null===e)return null;if("string"==typeof e)return Ip(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];lg(t,s,a)?n.push(a):n.push(cg(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"==typeof a)t[n]=a;else{const e=Ip(n);t[e]=cg(a,e)}}return t}}function ug(e,t){if(null==e)return null;if("string"==typeof e)return wp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];lg(t,s,a)?n.push(a):n.push(ug(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];t[wp(n)]="name"!==n&&"className"!==n||"string"!=typeof a?ug(a,n):a}return t}}class hg extends im{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Pp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ap(this.inputs).length!==this.inputs.length)throw new fp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Ap(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(a)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;_p(0===n,"input layer has >1 nodes"),_p(0===a,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(a)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof lm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},s={},r={},i=[],o=(e,t,n,a,s,l)=>{null!=a&&null!=s&&null!=l||(a=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const c=a.inboundNodes[s];if(-1!==n.indexOf(c))throw new pp(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(c))return;this.containerNodes.add(hg.nodeKey(a,s)),a.id in r||(r[a.id]=Object.keys(r).length),-1===n.indexOf(c)&&n.push(c);const u=c.inboundLayers.length;for(let e=0;e<u;e++){const a=c.inputTensors[e],s=c.inboundLayers[e],r=c.nodeIndices[e],i=c.tensorIndices[e];o(a,t,n,s,r,i)}for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},l=[],c=[];for(const e of this.outputs)o(e,l,c);const u=i.slice().reverse();for(const e of u){n[e.id]=e,e.id in t||(t[e.id]=0);let r=t[e.id];const i=null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id];r=Math.max(r,i),a[e.outboundLayer.id]=r,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=r;for(let a=0;a<e.inboundLayers.length;a++){const s=e.inboundLayers[a],i=e.nodeIndices[a],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(r+1,l),n[o.id]=o}}const h={};for(const e in t){const a=t[e];a in h||(h[a]=[]),h[a].push(n[e])}const d={};for(const e in a){const t=a[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Ep);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=r[e.id],a=r[t.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof hg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Ep);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new pp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new pp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new fp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let a=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new fp(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,a++}const s=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[a]]);else if(t)throw new fp(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new fp(`${e.length} of ${a} weights are not set: ${e}`)}em(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.16.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=ug(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Yr((()=>{e=xp(e);const n=new cm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return dm(this.outputs,n,t)}))}computeMask(e,t){return Yr((()=>{let n;return e=xp(e),n=null==t?vp(null,e.length):xp(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Zf(e);if(t.length!==this.inputLayers.length)throw new fp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const a=this.inputLayers[e],s=t[e];n[a.name+"_0_0"]=s}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ep);if(a.length>1)for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const a=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],r=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${r}_${i}`];a.push(o)}const s=Zf(t.computeOutputShape(yp(a))),r=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${r}_${e}`]=s[e]}}const s=[],r=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],a=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${a}`;r.push(s)}for(let e=0;e<r.length;e++){const t=r[e];_p(t in n),s.push(n[t])}return yp(s)}runInternalGraph(e,t){null==t&&(t=vp(null,e.length));const n={};for(let a=0;a<this.inputs.length;++a){const s=this.inputs[a],r=e[a],i=t[a];n[s.id]=[r,i]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ep);for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,s=e.outputTensors,r=new Array;for(const e of a)e.id in n&&r.push(n[e.id]);if(r.length===a.length){let a,i,o,l,c={};if(null!=e.callArgs&&(c=e.callArgs),1===r.length){const[e,n]=r[0];null==c.mask&&(c.mask=n),o=xp(t.call(e,c)),l=xp(t.computeMask(e,n)),a=[e],i=[n]}else a=r.map((e=>e[0])),i=r.map((e=>e[1])),null==c.mask&&(c.mask=i),o=xp(t.call(a,c)),l=xp(t.computeMask(a,i));if(t.activityRegularizer)throw new mp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],a=o[e],r=l[e];n[t.id]=[a,r]}}}}const s=[],r=[],i=[];for(const e of this.outputs){_p(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,a]=n[e.id];i.push(t.shape),s.push(t),r.push(a)}return[s,r,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof hg?1:0;for(let a=0;a<e.inboundNodes.length;a++){const s=hg.nodeKey(e,a);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new fp(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new fp("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new fp(`No such layer: ${e}`)}calculateLosses(){return Yr((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=hg.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const a=e.getClassName(),s=e.getConfig(),r=[];for(let n=0;n<e.inboundNodes.length;n++){const a=e.inboundNodes[n],s=hg.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(a.callArgs)try{JSON.stringify(a.callArgs),i=a.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${a.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(a.inboundLayers.length>0){const e=[];for(let n=0;n<a.inboundLayers.length;n++){const s=a.inboundLayers[n],r=a.nodeIndices[n],o=a.tensorIndices[n];let l=t[hg.nodeKey(s,r)];null==l&&(l=0),e.push([s.name,l,o,i])}r.push(e)}}}const i={};i.name=e.name,i.className=a,i.config=s,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],r=hg.nodeKey(n,s);if(!this.containerNodes.has(r))continue;let i=t[r];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];a.push([n.name,i,o])}e.inputLayers=a;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],a=this.outputLayersNodeIndices[e],r=hg.nodeKey(n,a);if(!this.containerNodes.has(r))continue;let i=t[r];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},a=!1){const s={},r={};function i(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let a;for(const r of t){const o=r[0],l=r[1],c=r[2];if(a=null==r[3]?{}:r[3],!(o in s))return void i(e,t);const u=s[o];if(u.inboundNodes.length<=l)return void i(e,t);const h=u.inboundNodes[l];n.push(h.outputTensors[c])}n.length>0&&e.apply(yp(n),a)}function l(e){const n=e.name,r=Mm(e,null!=t.customObjects?t.customObjects:{});r.setFastWeightInitDuringBuild(a),s[n]=r,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new fp(`Corrupted configuration, expected array for nodeData: ${e}`);i(r,e)}))}const c=t.name,u=t.layers;for(const e of u)l(e);for(;!$p(r);)for(const e of u){const t=s[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],a=e[2];_p(t in s);const r=s[t].inboundNodes[n].outputTensors;h.push(r[a])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],a=e[2];_p(t in s);const r=s[t].inboundNodes[n].outputTensors;d.push(r[a])}return new e({inputs:h,outputs:d,name:c})}get stateful(){if(this._stateful)throw new fp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Yr((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function dg(e,t){return function(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function pg(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Yr((()=>{if(1===e.shape.length)return vr(e);if(2===e.shape.length){if(e.shape[1]>1)return li(e,1);if(1===e.shape[1])return wi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),a=Array.from(await t.data());Jr(t);const s=[];return a.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),rl(s,"float32")}return null}function fg(e,t){return oo(e,t)}function mg(e,t){let n,a;const s=t;n=s.xs,a=s.ys,E(null!=n&&null!=a,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const r=gg("input",e.inputNames,n),i=gg("output",e.outputNames,a),o=r[0].shape[0];E(r.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),E(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<r.length;t++)E(r[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${r[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)E(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:r,ys:i}}function gg(e,t,n){if(n instanceof rs)return[n];if(Array.isArray(n))return E(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const a=[];for(const s of t){if(null==n[s])throw new fp(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);a.push(n[s])}return a}}function bg(e){return"function"==typeof e.iterator}function vg(e){E(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function _g(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>hf(e,t,n-t))):hf(e,t,n-t)}function kg(e,t){return Yr((()=>null==e?null:Array.isArray(e)?e.map((e=>kg(e,t))):_f(e,"int32"===t.dtype?t:br(t,"int32"))))}function yg(e,t){const n=[];let a=0,s=null;for(;a<e;)s=a+t,s>=e&&(s=e),n.push([a,s]),a=s;return n}function xg(e){const t=[];e instanceof rs&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(uf(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function wg(e,t){if(null==e)return;const n=[];if(t instanceof rs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const a=t[e];n.push(a.id)}const a=[];if(e instanceof rs)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&a.push(s)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function Ig(e){return Array.isArray(e)}function Ng(e){return!function(e){return e instanceof rs}(e)&&!Ig(e)}function Sg(e,t,n,a=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Ig(e)&&e.length>0)t=!0;else if(Ng(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new fp(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let r;if(Ng(e)){e=e,r=[];for(const n of t){if(null==e[n])throw new fp(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(Ig(e)){if((e=e).length!==t.length)throw new fp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(e=e,t.length>1)throw new fp(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=xg(r),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=r[e];if(i.shape.length!==n[e].length)throw new fp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;const r=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&r!==o)throw new fp(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return r}function Cg(e,t,n,a=!0,s=""){let r;if(Array.isArray(e)){if(e.length!==t.length)throw new fp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new fp(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=r[e];if(i.shape.length!==n[e].length)throw new fp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let r=0;r<n[e].length;++r){if(0===r&&!a)continue;const o=i.shape[r],l=n[e][r];if(null!=l&&l!==o)throw new fp(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Tg extends hg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new fp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,a=console.log){const s=function(e){let t=!0;const n=[],a=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}a.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==a.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),r=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){r.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}a("_".repeat(t)),rg(r,n,a),a("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?ig(o[e],n,a):og(o[e],n,i,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Yf(e.collectedTrainableWeights):Yf(e.trainableWeights),t}(e),c=Yf(e.nonTrainableWeights);a(`Total params: ${l+c}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${c}`),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Cc.adagrad(.01),Adadelta:()=>Cc.adadelta(1,.95,lf()),Adam:()=>Cc.adam(.001,.9,.999,lf()),Adamax:()=>Cc.adamax(.002,.9,.999,lf(),0),RMSProp:()=>Cc.rmsprop(.001,.9,0,lf()),SGD:()=>Cc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new fp(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ai))throw new fp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new fp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>qm(e)))}else{const n=qm(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new fp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(qm(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Yp("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Yp("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,a,r;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Gm?-1!==["accuracy","acc"].indexOf(i)?a=Zm:-1!==["crossentropy","ce"].indexOf(i)&&(a=Xm):this.lossFunctions[e]===Vm?-1!==["accuracy","acc"].indexOf(i)?a=Ym:-1!==["crossentropy","ce"].indexOf(i)&&(a=Qm):-1!==["accuracy","acc"].indexOf(i)?a=Km:-1!==["crossentropy","ce"].indexOf(i)&&(a=Jm),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),r=a,n=""+s}else{const e=tg(i);r=e,n=""+ng(i)}let t;Yp(n,(()=>{t=r})),s(e,n,t)}})(a[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const a=null==n.batchSize?32:n.batchSize;vg(a);const s=this.standardizeUserDataXY(e,t,!0,a);try{const r=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return yp(this.testLoop(i,r,a,n.verbose,n.steps))}finally{wg(s[0],e),wg(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,s=e.testFunction;let r=[];if(n.verbose>0)throw new mp("Verbose mode is not implemented yet.");E(!a||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!a||l<n.batches;){const t=await i.next();if(r=Yr((()=>{if(t.value){const{xs:n,ys:a}=mg(e,t.value),i=n.concat(a),c=Yr((()=>s(i)));if(Jr(i),0===l)for(let e=0;e<c.length;++e)r.push(ni(0));const u=i[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=r[e];r[e]=Yr((()=>ri(r[e],oo(u,t)))),l>0&&Jr(n)}Jr(c),o+=u,++l}return r})),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<r.length;++e){const t=r[e];r[e]=Hi(r[e],o),Jr(t)}return yp(r)}(this,e,t)}checkNumSamples(e,t,n,a="steps"){let s;if(null!=n){if(s=null,null!=t)throw new fp(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new fp(`Either the input data should have a defined shape, or ${a} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new fp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],s=this.retrieveSymbolicTensors(a),r=new cm;if(e instanceof rs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new fp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)r.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new fp(`No value is provided for the model's input ${t.name}`);r.add(t,n)}const i=dm(s,r);return n?i:i[0]}retrieveSymbolicTensors(e){const t=vp(null,e.length);let n=e.length;for(const a of this.layers){const s=Array.isArray(a.output)?a.output:[a.output],r=s.map((e=>e.name));for(let a=0;a<e.length;++a){const i=r.indexOf(e[a]);if(-1!==i&&(t[a]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new fp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Yr((()=>{const a=this.checkNumSamples(e);if(n)throw new mp("Verbose predictLoop() is not implemented yet.");const s=yg(a,t),r=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Yr((()=>{const n=s[t][0],a=s[t][1],r=_g(e,n,a),i=[];if(Array.isArray(r))for(let e=0;e<r.length;++e)i.push({key:this.inputs[e],value:r[e]});else i.push({key:this.inputs[0],value:r});const o=new cm(i);return dm(this.outputs,o)})).forEach(((e,t)=>r[t].push(e)));return yp(r.map((e=>$i(e,0))))}))}predict(e,t={}){const n=xg(e);Cg(n,this.inputNames,this.feedInputShapes,!1);try{const a=null==t.batchSize?32:t.batchSize;return vg(a),this.predictLoop(n,a)}finally{wg(n,e)}}predictOnBatch(e){Cg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new pp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Vm?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const a=Ap(e.map((e=>e.shape[0])));a.sort();const s=Ap(t.map((e=>e.shape[0])));if(s.sort(),a.length>1)throw new fp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new fp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(a.length>0&&s.length>0&&!F(a,s))throw new fp(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Sg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Sg(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const a=[Bm,Gm,Um];for(let s=0;s<e.length;++s){const r=e[s],i=t[s],o=n[s];if(null!=i){if(i===Um&&1===r.shape[r.shape.length-1])throw new fp(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(i)){const e=r.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const a=e[n],s=t[n];if(null!=s&&a!==s)throw new fp(`A target Tensor with shape ${r.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new fp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,s=!0,r){const[i,o]=this.standardizeUserDataXY(e,t,s,r);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=a){const e=dg(a,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await pg(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,a=0,s){return Yr((()=>{const r=this.checkNumSamples(t,n,s,"steps"),i=[];if(a>0)throw new mp("Verbose mode is not implemented yet.");if(null!=s)throw new mp("steps mode in testLoop() is not implemented yet");{const a=yg(r,n),s=rl(rf(0,r));for(let n=0;n<a.length;++n){const r=a[n][0],o=a[n][1],l=hf(s,r,o-r),c=kg(t,l),u=e(c);if(0===n)for(let e=0;e<u.length;++e)i.push(ni(0));for(let e=0;e<u.length;++e){const t=u[e];i[e]=ri(i[e],oo(o-r,t))}}for(let e=0;e<i.length;++e)i[e]=Hi(i[e],r)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let s=a;kp(e,a)>1&&(s+=`_${kp(e.slice(0,n),a)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),r=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new cm(e),o=dm(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(a[e],o[e]);null!=s[e]&&(n=fg(n,s[e]));const r=bo(n);t.push(r),l=0===e?n:ri(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=bo(t(a[s],o[s]))}Qr(n),r.push(n)}return l=bo(l),this.calculateLosses().forEach((e=>{l=ri(l,e)})),l}),!0,i)].concat(r)}}makeTestFunction(){this.testFunction=e=>Yr((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=[];for(let e=0;e<this.inputs.length;++e)r.push({key:this.inputs[e],value:a[e]});const i=new cm(r),o=dm(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],r=bo(a(s[e],o[e]));n=0===e?r:ri(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],r=bo(n(s[a],o[a]));t.push(r)}return t}))}async fit(e,t,n={}){return async function(e,t,n,a={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,r,i,o,l,c,u,h,d;e.isTraining=!0;try{const p=null==a.batchSize?32:a.batchSize;vg(p);const f=!1,m=await e.standardizeUserData(t,n,a.sampleWeight,a.classWeight,f,p);s=m[0],r=m[1],d=m[2];let g,b=!1;if(null!=a.validationData&&a.validationData.length>0){if(b=!0,2!==a.validationData.length)throw 3===a.validationData.length?new mp("validationData including sample weights is not supported yet."):new fp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);l=a.validationData[0],c=a.validationData[1];const t=!0,n=await e.standardizeUserData(l,c,null,null,t,p);u=n[0],h=n[1],g=u.concat(h)}else if(null!=a.validationSplit&&a.validationSplit>0&&a.validationSplit<1){b=!0;const e=Math.floor(s[0].shape[0]*(1-a.validationSplit)),t=s[0].shape[0];u=_g(s,e,t),i=s,s=_g(s,0,e),h=_g(r,e,t),o=r,r=_g(r,0,e),g=u.concat(h)}else null!=a.validationSteps&&(b=!0);const v=s.concat(r).concat(d);e.checkTrainableWeightsConsistency();const _=e.makeTrainFunction(),k=e.getDedupedMetricsNames();let y,x;b?(e.makeTestFunction(),y=e.testFunction,x=k.slice().concat(k.map((e=>"val_"+e)))):(y=null,g=[],x=k.slice());const w=Fm(a.callbacks,a.yieldEvery),I=await async function(e,t,n,a,s,r,i,o,l,c,u,h,d,p,f){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==d&&(d=0);let m=!1;null!=l&&null!=c&&(m=!0);const g=e.checkNumSamples(n,s,p,"steps_per_epoch");let b;null!=g&&(b=rf(0,g)),null==i&&(i=1);const{callbackList:v,history:_}=Om(o,i,r,d,g,p,s,m,h);v.setModel(e),e.history=_,await v.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<r;++i){await v.onEpochBegin(i);const r={};{if("batch"===u)throw new mp("batch shuffling is not implemneted yet");u&&N(b);const i=rl(b),o=yg(g,s);for(let u=0;u<o.length;++u){const h={};if(await v.onBatchBegin(u,h),Yr((()=>{const d=o[u][0],p=o[u][1],f=hf(i,d,p-d);h.batch=u,h.size=p-d;const g=kg(n,f),b=t(g);for(let e=0;e<a.length;++e){const t=a[e],n=b[e];h[t]=n,Qr(n)}if(u===o.length-1&&m){const t=e.testLoop(l,c,s);for(let e=0;e<a.length;++e){const n=a[e],s=t[e];Qr(s),r["val_"+n]=s}}})),await v.onBatchEnd(u,h),Cm(h),e.stopTraining_)break}i.dispose()}if(await v.onEpochEnd(i,r),e.stopTraining_)break}return await v.onTrainEnd(),await e.history.syncData(),e.history}(e,_,v,k,p,a.epochs,a.verbose,w,y,g,a.shuffle,x,a.initialEpoch,null);return I}finally{e.isTraining=!1,wg(s,t),wg(r,n),wg(i,t),wg(o,n),wg(u,l),wg(h,c),null!=d&&Jr(d)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const a=null!=n.batchesPerEpoch;if(E(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),E(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),E(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),E(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),E(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let r,i;if(s)if(bg(n.validationData))E(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new mp("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);r=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let c;c=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const u=Fm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Om(u,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,c);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const c={};await d.onEpochBegin(f);let u=0,h=0;for(a||(m=await t.iterator());!a||u<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${u} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:s}=mg(e,t.value),r={};r.batch=h,r.size=a[0].shape[0],await d.onBatchBegin(h,r);const i=[];if(null!=n.classWeight){const t=dg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await pg(s[e],null,t[e]))}const c=a.concat(s).concat(i),p=o(c);Jr(c);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];r[t]=n,Qr(n)}await d.onBatchEnd(h,r),Cm(r),h++,u++}if(a?u>=n.batchesPerEpoch:t.done){if(s){let t;t=bg(n.validationData)?xp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):xp(e.evaluate(r,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,c),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],s=n[1],r=this.makeTrainFunction()(a.concat(s)),i=[];for(const e of r){const t=await e.data();i.push(t[0])}return Jr(r),wg(n[0],e),wg(n[1],t),yp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<a.length;++e)n&&!a[e].trainable||t.push({name:a[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Xr().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Xr().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=wp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>wp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!=typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=wp(n[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[wp(ng(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>wp(ng(e))));{const e={};for(const t in this.metrics)e[t]=wp(ng(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Mm(cg(e.optimizer_config));let n,a;if("string"==typeof e.loss)n=Ip(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Ip(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Ip(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Ip(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Ip(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Hs.getSaveHandlers(n));if(0===t.length)throw new fp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new fp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new fp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=await Ls(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.16.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Ls(await this.optimizer.getWeights(),e);a.specs.push(...n),a.data=Us([a.data,t])}if(null!=this.userDefinedMetadata){const e=!0;ag(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=a.data,s.weightSpecs=a.specs,e.save(s)}setUserDefinedMetadata(e){ag(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Tg.className="Model",Zr(Tg);class Eg extends Tg{}Eg.className="Functional",Zr(Eg);class Ag extends Tg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Pp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new fp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Ag||e instanceof Tg;let n;if(t){if(n=e,1!==n.outputs.length)throw new fp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new fp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new fp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new fp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new lm({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new fp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new fp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=om(this.outputs[0])}this.inboundNodes=[],new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:vp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Xf(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Tg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new pp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new pp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new pp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new pp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let s,r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new fp("Legacy serialization format not supported yet.");s=t}else E(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,r=t;const i=new e(r);if(!(i instanceof Ag))throw new mp(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=Mm(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new fp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new fp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Ag.className="Sequential",Zr(Ag);class $g extends jr{getConfig(){return{}}}class Rg extends $g{apply(e,t=1){return function(e,t=1){if(1!==t)throw new mp(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ji(e)}(e,t)}}Rg.className="elu",Zr(Rg);class zg extends $g{apply(e){return Go(e)}}zg.className="selu",Zr(zg);class Fg extends $g{apply(e){return Uo(e)}}Fg.className="relu",Zr(Fg);class Dg extends $g{apply(e){return Yr((()=>vo(6,Uo(e))))}}Dg.className="relu6",Zr(Dg);class Og extends $g{apply(e){return e}}Og.className="linear",Zr(Og);class Mg extends $g{apply(e){return jo(e)}}Mg.className="sigmoid",Zr(Mg);class Lg extends $g{apply(e){return function(e){return Yr((()=>{const t=ri(.5,oo(.2,e));return Ai(t,0,1)}))}(e)}}Lg.className="hardSigmoid",Zr(Lg);class Bg extends $g{apply(e){return Qo(e)}}Bg.className="softplus",Zr(Bg);class Pg extends $g{apply(e){return function(e){return Yr((()=>Hi(e,ri(si(e),1))))}(e)}}Pg.className="softsign",Zr(Pg);class Wg extends $g{apply(e){return sl(e)}}Wg.className="tanh",Zr(Wg);class Ug extends $g{apply(e,t=-1){return Jo(e,t)}}Ug.className="softmax",Zr(Ug);class Vg extends $g{apply(e,t=-1){return uo(e,t)}}Vg.className="logSoftmax",Zr(Vg);class Gg extends $g{apply(e,t=1){return Yr((()=>oo(jo(oo(e,t)),e)))}}Gg.className="swish",Zr(Gg);class Hg extends $g{apply(e){return Yr((()=>oo(e,sl(Qo(e)))))}}function jg(e){return e.getClassName()}function qg(e,t={}){return Tp(e,qr.getMap().classNameMap,t,"activation")}function Zg(e){if(null==e){return qg({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},qg(t)}return e instanceof $g?e:qg(e)}Hg.className="mish",Zr(Hg);class Kg extends jr{}class Xg extends Kg{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Yr((()=>{let t=Ro([1]);return this.hasL1&&(t=ri(t,co(oo(this.l1,si(e))))),this.hasL2&&(t=ri(t,co(oo(this.l2,kf(e))))),wi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Xg.className="L1L2",Zr(Xg);const Yg={l1l2:"L1L2"};function Jg(e){return Sp(e)}function Qg(e,t={}){return Tp(e,qr.getMap().classNameMap,t,"regularizer")}function eb(e){return null==e?null:"string"==typeof e?Qg({className:e in Yg?Yg[e]:e,config:{}}):e instanceof Kg?e:Qg(e)}class tb extends im{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Kf(e);let n=Uo(e);return null!=this.maxValue&&(n=Ai(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}tb.className="ReLU",Zr(tb);class nb extends im{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Kf(e);return ao(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}nb.className="LeakyReLU",Zr(nb);class ab extends im{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jf(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=eb(e.alphaRegularizer),this.alphaConstraint=Nm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new fp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Xf(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new tm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Kf(e),Oo(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Hf(this.alphaInitializer),alphaRegularizer:Jg(this.alphaRegularizer),alphaConstraint:wm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}ab.className="PReLU",Zr(ab);class sb extends im{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new mp(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Kf(e);return ji(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}sb.className="ELU",Zr(sb);class rb extends im{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Kf(e);return oo(n,br(to(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}rb.className="ThresholdedReLU",Zr(rb);class ib extends im{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Ug).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Kf(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ob(e,t,n){if("number"==typeof e)return vp(e,t);if(e.length!==t)throw new fp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const r=e[s];if((a=r)!==parseInt(a.toString(),10))throw new fp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e;var a}function lb(e,t,n,a,s=1){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((r+a-1)/a)}function cb(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+sf([n-t,0]);else{if("same"!==a)throw new fp(`Unsupport padding mode: ${a}.`);e*=t}return e}function ub(e,t){return Yr((()=>(qp(t),"channelsFirst"===t?hl(e,[0,2,3,1]):e)))}function hb(e,t){return Yr((()=>(qp(t),"channelsFirst"===t?hl(e,[0,2,3,4,1]):e)))}function db(e,t,n,a=[1,1],s="valid",r,i,o=null){return Yr((()=>{if(null==r&&(r="channelsLast"),qp(r),3!==e.rank&&4!==e.rank)throw new fp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new fp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=ub(e,r);if("causal"===s)throw new mp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Sl({x:l,filter:t,strides:a,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===r&&(l=hl(l,[0,3,1,2])),l}))}ib.className="Softmax",Zr(ib);class pb extends im{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",pb.verifyArgs(t),this.rank=e,Fp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new mp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ob(t.kernelSize,e,"kernelSize"),this.strides=ob(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Zp(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,qp(this.dataFormat),this.activation=Zg(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=jf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Nm(t.biasConstraint),this.biasRegularizer=eb(t.biasRegularizer),this.activityRegularizer=eb(t.activityRegularizer),this.dilationRate=ob(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new fp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new fp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new fp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(_p("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!zp(e.kernelSize,"number",1,3))throw new fp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:jg(this.activation),useBias:this.useBias,biasInitializer:Hf(this.biasInitializer),biasRegularizer:Jg(this.biasRegularizer),activityRegularizer:Jg(this.activityRegularizer),biasConstraint:wm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class fb extends pb{constructor(e,t){super(e,t),this.kernel=null,fb.verifyArgs(t),this.filters=t.filters,Fp(this.filters,"filters"),this.kernelInitializer=jf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Nm(t.kernelConstraint),this.kernelRegularizer=eb(t.kernelRegularizer)}build(e){e=Xf(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fp(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Yr((()=>{let t;e=Kf(e);const n=null==this.bias?null:this.bias.read(),a=Op(this.activation.getClassName());if(null!=a&&2===this.rank)t=db(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=function(e,t,n,a=1,s="valid",r,i=1){return Yr((()=>{if(null==r&&(r="channelsLast"),qp(r),3!==e.shape.length)throw new fp(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new fp(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new fp(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===r&&(e=hl(e,[0,2,1])),"causal"===s)throw new mp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Mi(e,t,a,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=xf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=db(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new mp("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,a=[1,1,1],s="valid",r,i){return Yr((()=>{if(null==r&&(r="channelsLast"),qp(r),4!==e.rank&&5!==e.rank)throw new fp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new fp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=hb(e,r);if("causal"===s)throw new mp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Pi(o,t,a,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=xf(o,n)),"channelsFirst"===r&&(o=hl(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Xf(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const a=lb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(a)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Hf(this.kernelInitializer),kernelRegularizer:Jg(this.kernelRegularizer),kernelConstraint:wm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new fp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class mb extends fb{constructor(e){super(2,e),mb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!zp(e.kernelSize,"number",1,2))throw new fp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}mb.className="Conv2D",Zr(mb);class gb extends fb{constructor(e){super(3,e),gb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new fp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}gb.className="Conv3D",Zr(gb);class bb extends mb{constructor(e){if(super(e),this.inputSpec=[new tm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new fp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Xf(e)).length)throw new fp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Yr((()=>{let t=Kf(e);if(4!==t.shape.length)throw new fp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let s,r;"channelsFirst"===this.dataFormat?(s=2,r=3):(s=1,r=2);const i=n[s],o=n[r],l=this.kernelSize[0],c=this.kernelSize[1],u=this.strides[0],h=this.strides[1],d=[a,cb(i,u,l,this.padding),cb(o,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=hl(t,[0,2,3,1]));let p=Bi(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=hl(p,[0,3,1,2])),null!=this.bias&&(p=xf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Xf(e)).slice();let n,a,s;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3):(n=3,a=1,s=2);const r=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[a]=cb(t[a],o,r,this.padding),t[s]=cb(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}bb.className="Conv2DTranspose",Zr(bb);class vb extends gb{constructor(e){if(super(e),this.inputSpec=[new tm({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new fp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Xf(e)).length)throw new fp("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tm({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Yr((()=>{let t=Kf(e);if(5!==t.shape.length)throw new fp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let s,r,i;"channelsFirst"===this.dataFormat?(i=2,s=3,r=4):(i=1,s=2,r=3);const o=n[i],l=n[s],c=n[r],u=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,cb(o,p,u,this.padding),cb(l,f,h,this.padding),cb(c,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=hl(t,[0,2,3,4,1]));let b=Ui(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=hl(b,[0,4,1,2,3])),null!==this.bias&&(b=xf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Xf(e)).slice();let n,a,s,r;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3,r=4):(n=4,a=1,s=2,r=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],u=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=cb(t[a],c,i,this.padding),t[s]=cb(t[s],u,o,this.padding),t[r]=cb(t[r],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}vb.className="Conv3DTranspose",Zr(vb);class _b extends fb{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new fp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new fp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new fp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=jf(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=eb(t.depthwiseRegularizer),this.depthwiseConstraint=Nm(t.depthwiseConstraint),this.pointwiseInitializer=jf(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=eb(t.pointwiseRegularizer),this.pointwiseConstraint=Nm(t.pointwiseConstraint)}build(e){if((e=Xf(e)).length<this.rank+2)throw new fp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new fp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new tm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Yr((()=>{let t;if(e=Kf(e),1===this.rank)throw new mp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=hl(e,[0,2,3,1])),t=Ho(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=xf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=hl(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Hf(this.depthwiseInitializer),e.pointwiseInitializer=Hf(this.pointwiseInitializer),e.depthwiseRegularizer=Jg(this.depthwiseRegularizer),e.pointwiseRegularizer=Jg(this.pointwiseRegularizer),e.depthwiseConstraint=wm(this.depthwiseConstraint),e.pointwiseConstraint=wm(this.pointwiseConstraint),e}}_b.className="SeparableConv";class kb extends _b{constructor(e){super(2,e)}}kb.className="SeparableConv2D",Zr(kb);class yb extends fb{constructor(e){super(1,e),yb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!zp(e.kernelSize,"number",1,1))throw new fp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}yb.className="Conv1D",Zr(yb);class xb extends im{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Yr((()=>{if(e=Kf(e),"channelsLast"===this.dataFormat){const t=pf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return pf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=pf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return pf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}xb.className="Cropping2D",Zr(xb);class wb extends im{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qp(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Rp(Up,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Yr((()=>{let t=Kf(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=hl(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],s="nearest"===this.interpolation?bc.resizeNearestNeighbor(t,[e,a]):bc.resizeBilinear(t,[e,a]);return hl(s,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?bc.resizeNearestNeighbor(t,[e,a]):bc.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}wb.className="UpSampling2D",Zr(wb);class Ib extends pb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=jf(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Nm(e.depthwiseConstraint),this.depthwiseRegularizer=eb(e.depthwiseRegularizer)}build(e){if((e=Xf(e)).length<4)throw new fp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new fp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yr((()=>{let t=function(e,t,n=[1,1],a="valid",s,r){return Yr((()=>{null==s&&(s="channelsLast"),qp(s);let i=ub(e,s);if(4!==e.rank)throw new fp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new fp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Vi(i,t,n,"same"===a?"same":"valid","NHWC",r),"channelsFirst"===s&&(i=hl(i,[0,3,1,2])),i}))}(e=Kf(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=xf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Xf(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=lb(t,this.kernelSize[0],this.padding,this.strides[0]),r=lb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,s,r]:[e[0],s,r,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Hf(this.depthwiseInitializer),e.depthwiseRegularizer=Jg(this.depthwiseRegularizer),e.depthwiseConstraint=wm(this.depthwiseRegularizer),e}}function Nb(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new fp("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Sb(e,t,n,a=!1,s,r,i=!1,o=!1){return Yr((()=>{const l=t.shape.length;if(l<3)throw new fp(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(rf(2,l));if(t=hl(t,c),null!=r)throw new mp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=br(br(s,"bool"),"float32")).rank===l-1&&(s=Ki(s,-1)),s=hl(s,c)),a&&(t=Vo(t,0),null!=s&&(s=Vo(s,0)));const u=[];let h,d=n;const p=t.shape[0],f=ol(t);let m,g;null!=s&&(m=ol(s));for(let t=0;t<p;++t){const n=f[t],a=Yr((()=>e(n,d)));if(null==s)h=a[0],d=a[1];else{const e=Yr((()=>{const e=m[t],n=lo(Fo(e),e);return{output:ri(oo(a[0],e),oo(d[0],n)),newStates:d.map(((t,s)=>ri(oo(a[1][s],e),oo(t,n))))}}));h=e.output,d=e.newStates}o&&u.push(h)}return o&&(g=al(u,1)),[h,g,d]}))}Ib.className="DepthwiseConv2D",Zr(Ib);class Cb extends im{constructor(e){let t;if(super(e),null==e.cell)throw new fp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Db({cells:e.cell}):e.cell,null==t.stateSize)throw new fp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new tm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?rf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){qf(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return Yr((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new mp("Constants support is not implemented in RNN yet.");qf(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new tm({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!F(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new fp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new tm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Yr((()=>{if(!this.stateful)throw new dp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new fp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ro([n,e]))):this.states_=[Ro([n,this.cell.stateSize])];else if(null==e)Jr(this.states_),null!=this.keptStates&&(Jr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ro([n,e]))):this.states_[0]=Ro([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Jr(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,r=[n,s];if(!F(a.shape,r))throw new fp(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map((e=>Qr(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const s=Nb(e,n,a,this.numConstants);e=s.inputs,n=s.initialState,a=s.constants;let r=[],i=[];if(null!=n){t.initialState=n,r=r.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new tm({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=a&&(t.constants=a,r=r.concat(a),this.numConstants=a.length),r[0]instanceof nm){const n=[e].concat(r),a=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Yr((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let s=null==t?null:t.initialState;e=Kf(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==r)throw new fp(`RNN Layer has ${r} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:a},o=Sb(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],c=o[1],u=o[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?c:l;return this.returnState?[h].concat(u):h}))}getInitialState(e){return Yr((()=>{let t=Ro(e.shape);return t=co(t,[1,2]),t=uf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?gf(t,[1,e]):t)):this.cell.stateSize>1?[gf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Cb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const a=Mm(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Cb.className="RNN",Zr(Cb);class Tb extends im{}class Eb extends Tb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Fp(this.units,"units"),this.activation=Zg(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=eb(e.kernelRegularizer),this.recurrentRegularizer=eb(e.recurrentRegularizer),this.biasRegularizer=eb(e.biasRegularizer),this.kernelConstraint=Nm(e.kernelConstraint),this.recurrentConstraint=Nm(e.recurrentConstraint),this.biasConstraint=Nm(e.biasConstraint),this.dropout=af([1,sf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=af([1,sf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Xf(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yr((()=>{if(2!==(e=e).length)throw new fp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const a=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ob({ones:()=>Fo(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ob({ones:()=>Fo(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;s=vf(null!=r?oo(e,r):e,this.kernel.read()),null!=this.bias&&(s=xf(s,this.bias.read())),null!=i&&(n=oo(n,i));let o=ri(s,vf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:jg(this.activation),useBias:this.useBias,kernelInitializer:Hf(this.kernelInitializer),recurrentInitializer:Hf(this.recurrentInitializer),biasInitializer:Hf(this.biasInitializer),kernelRegularizer:Jg(this.kernelRegularizer),recurrentRegularizer:Jg(this.recurrentRegularizer),biasRegularizer:Jg(this.biasRegularizer),activityRegularizer:Jg(this.activityRegularizer),kernelConstraint:wm(this.kernelConstraint),recurrentConstraint:wm(this.recurrentConstraint),biasConstraint:wm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Eb.className="SimpleRNNCell",Zr(Eb);class Ab extends Cb{constructor(e){e.cell=new Eb(e),super(e)}call(e,t){return Yr((()=>{null!=this.cell.dropoutMask&&(Jr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Ab.className="SimpleRNN",Zr(Ab);class $b extends Tb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new fp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Fp(this.units,"units"),this.activation=Zg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Zg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=eb(e.kernelRegularizer),this.recurrentRegularizer=eb(e.recurrentRegularizer),this.biasRegularizer=eb(e.biasRegularizer),this.kernelConstraint=Nm(e.kernelConstraint),this.recurrentConstraint=Nm(e.recurrentConstraint),this.biasConstraint=Nm(e.biasConstraint),this.dropout=af([1,sf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=af([1,sf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Xf(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yr((()=>{if(2!==(e=e).length)throw new fp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ob({ones:()=>Fo(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ob({ones:()=>Fo(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,r=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=oo(e,s[0]));let c=vf(e,this.kernel.read());this.useBias&&(c=xf(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=oo(a,r[0]));const u=this.recurrentKernel.read(),[h,d]=el(u,[2*this.units,this.units],u.rank-1),p=vf(a,h),[f,m,g]=el(c,3,c.rank-1),[b,v]=el(p,2,p.rank-1);i=this.recurrentActivation.apply(ri(f,b)),o=this.recurrentActivation.apply(ri(m,v));const _=vf(oo(o,a),d);l=this.activation.apply(ri(g,_));const k=ri(oo(i,a),oo(ri(1,Eo(i)),l));return[k,k]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:jg(this.activation),recurrentActivation:jg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hf(this.kernelInitializer),recurrentInitializer:Hf(this.recurrentInitializer),biasInitializer:Hf(this.biasInitializer),kernelRegularizer:Jg(this.kernelRegularizer),recurrentRegularizer:Jg(this.recurrentRegularizer),biasRegularizer:Jg(this.biasRegularizer),activityRegularizer:Jg(this.activityRegularizer),kernelConstraint:wm(this.kernelConstraint),recurrentConstraint:wm(this.recurrentConstraint),biasConstraint:wm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}$b.className="GRUCell",Zr($b);class Rb extends Cb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new $b(e),super(e)}call(e,t){return Yr((()=>{null!=this.cell.dropoutMask&&(Jr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Rb.className="GRU",Zr(Rb);class zb extends Tb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Fp(this.units,"units"),this.activation=Zg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Zg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=eb(e.kernelRegularizer),this.recurrentRegularizer=eb(e.recurrentRegularizer),this.biasRegularizer=eb(e.biasRegularizer),this.kernelConstraint=Nm(e.kernelConstraint),this.recurrentConstraint=Nm(e.recurrentConstraint),this.biasConstraint=Nm(e.biasConstraint),this.dropout=af([1,sf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=af([1,sf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Xf(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Cf{apply(t,a){const s=e.apply([n]),r=(new Ef).apply([n]),i=e.apply([2*n]);return mf(mf(s,r),i)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Yr((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new fp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ob({ones:()=>Fo(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ob({ones:()=>Fo(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,c,u;0<this.dropout&&this.dropout<1&&(e=oo(e,r[0]));let h=vf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=oo(a,i[0])),h=ri(h,vf(a,this.recurrentKernel.read())),this.useBias&&(h=xf(h,this.bias.read()));const[d,p,f,m]=el(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),c=ri(oo(l,s),oo(o,this.activation.apply(f))),u=this.recurrentActivation.apply(m);const g=oo(u,this.activation.apply(c));return[g,g,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:jg(this.activation),recurrentActivation:jg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hf(this.kernelInitializer),recurrentInitializer:Hf(this.recurrentInitializer),biasInitializer:Hf(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Jg(this.kernelRegularizer),recurrentRegularizer:Jg(this.recurrentRegularizer),biasRegularizer:Jg(this.biasRegularizer),activityRegularizer:Jg(this.activityRegularizer),kernelConstraint:wm(this.kernelConstraint),recurrentConstraint:wm(this.recurrentConstraint),biasConstraint:wm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}zb.className="LSTMCell",Zr(zb);class Fb extends Cb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new zb(e),super(e)}call(e,t){return Yr((()=>{null!=this.cell.dropoutMask&&(Jr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Fb.className="LSTM",Zr(Fb);class Db extends Tb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Yr((()=>{let n=(e=e).slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const s=[];let r;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=a[i],r=0===i?[e[0]].concat(n):[r[0]].concat(n),r=o.call(r,t),s.push(r.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[r[0]].concat(n)}))}build(e){let t;qf(e)&&(e=e[0]),e=e,this.cells.forEach(((n,a)=>{Yp(`RNNCell_${a}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const a=[];for(const e of t.cells)a.push(Mm(e,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Qf(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,s=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}em(t)}}function Ob(e){const{ones:t,rate:n,training:a=!1,count:s=1,dropoutFunc:r}=e,i=()=>null!=r?r(t(),n):wf(t(),n),o=()=>If(i,t,a);return!s||s<=1?Qr(o().clone()):Array(s).fill(void 0).map(o).map((e=>Qr(e.clone())))}Db.className="StackedRNNCells",Zr(Db);var Mb,Lb,Bb,Pb;class Wb extends Cb{constructor(e){if(e.unroll)throw new mp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new mp("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new tm({ndim:5})]}call(e,t){return Yr((()=>{if(null!=this.cell.dropoutMask&&(Jr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new fp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Yr((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),s=Ro([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Yr((()=>{if(!this.stateful)throw new dp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)];if(null==n[0])throw new fp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ro(s))):this.states_=[Ro(s)];else if(null==e)Jr(this.states_),null!=this.keptStates&&(Jr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ro(s))):this.states_[0]=Ro(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Jr(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=s;if(!F(n.shape,a))throw new fp(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Qr(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:s,strides:r,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],c=e[o?4:3],u=lb(l,a[0],s,r[0],i[0]),h=lb(c,a[1],s,r[1],i[1]);return[...e.slice(0,2),...o?[n,u,h]:[u,h,n]]}}Wb.className="ConvRNN2D";class Ub extends zb{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:s,dataFormat:r,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Fp(this.filters,"filters"),this.kernelSize=ob(n,2,"kernelSize"),this.kernelSize.forEach((e=>Fp(e,"kernelSize"))),this.strides=ob(a||1,2,"strides"),this.strides.forEach((e=>Fp(e,"strides"))),this.padding=s||"valid",Zp(this.padding),this.dataFormat=r||"channelsLast",qp(this.dataFormat),this.dilationRate=ob(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Fp(e,"dilationRate")))}build(e){var t;e=Xf(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new fp(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],s=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const r=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",r,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Cf{apply(e,t){return ff([n.apply([a]),zo([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Yr((()=>{if(3!==e.length)throw new fp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,a=e[0],s=e[1],r=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ob({ones:()=>Fo(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?oo(t[n],e):e;let l=o(a,i,0),c=o(a,i,1),u=o(a,i,2),h=o(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ob({ones:()=>Fo(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[b,v,_,k]=el(this.kernel.read(),4,3),[y,x,w,I]=this.useBias?el(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,y,this.padding),c=this.inputConv(c,v,x,this.padding),u=this.inputConv(u,_,w,this.padding),h=this.inputConv(h,k,I,this.padding);const[N,S,C,T]=el(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,S),m=this.recurrentConv(m,C),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(ri(l,p)),A=this.recurrentActivation.apply(ri(c,f)),$=ri(oo(A,r),oo(E,this.activation.apply(ri(u,m)))),R=oo(this.recurrentActivation.apply(ri(h,g)),this.activation.apply($));return[R,R,$]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(e);s<a.length;s++)t.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(e,a[s])&&(n[a[s]]=e[a[s]])}return n}(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,a)}inputConv(e,t,n,a){const s=Oi(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?xf(s,n,this.dataFormat):s}recurrentConv(e,t){return Oi(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ub.className="ConvLSTM2DCell",Zr(Ub);class Vb extends Wb{constructor(e){const t=new Ub(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Vb.className="ConvLSTM2D",Zr(Vb);class Gb extends im{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);const n=Kf(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return If((()=>wf(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Gb.className="Dropout",Zr(Gb);class Hb extends Gb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Hb.className="SpatialDropout1D",Zr(Hb);class jb extends im{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Fp(this.units,"units"),this.activation=Zg(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Nm(e.kernelConstraint),this.biasConstraint=Nm(e.biasConstraint),this.kernelRegularizer=eb(e.kernelRegularizer),this.biasRegularizer=eb(e.biasRegularizer),this.activityRegularizer=eb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Xf(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Xf(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);const n=Kf(e),a=Op(this.activation.getClassName());let s;return null!=a?s=vf(n,this.kernel.read(),a,this.bias?this.bias.read():null):(s=vf(n,this.kernel.read()),null!=this.bias&&(s=xf(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:jg(this.activation),useBias:this.useBias,kernelInitializer:Hf(this.kernelInitializer),biasInitializer:Hf(this.biasInitializer),kernelRegularizer:Jg(this.kernelRegularizer),biasRegularizer:Jg(this.biasRegularizer),activityRegularizer:Jg(this.activityRegularizer),kernelConstraint:wm(this.kernelConstraint),biasConstraint:wm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}jb.className="Dense",Zr(jb);class qb extends im{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Xf(e);for(const t of e.slice(1))if(null==t)throw new fp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],nf(e,1)]}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);let n=Kf(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=hl(n,e)}return function(e){if(e.rank<=1)throw new fp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],nf(e.shape,1)];return wi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}qb.className="Flatten",Zr(qb);class Zb extends im{constructor(e){super(e),this.supportsMasking=!0,this.activation=Zg(e.activation)}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);const n=Kf(e);return this.activation.apply(n)}))}getConfig(){const e={activation:jg(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Zb.className="Activation",Zr(Zb);class Kb extends im{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Yr((()=>{return e=Kf(e),t=e,n=this.n,Yr((()=>{if(2!==t.shape.length)throw new fp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return gf(uf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Kb.className="RepeatVector",Zr(Kb);class Xb extends im{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let s=1,r=null;for(let e=0;e<a.length;++e){const t=a[e];if(this.isUnknown(t)){if(null!==r)throw new fp("Can only specifiy one unknown dimension.");r=e}else s*=t}const i=nf(e);if(null!==r){if(0===s||i%s!=0)throw new fp(n);a[r]=i/s}else if(i!==s)throw new fp(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);const n=Kf(e),a=n.shape,s=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return wi(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Xb.className="Reshape",Zr(Xb);class Yb extends im{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=rf(1,e.dims.length+1);if(!F(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new tm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Xf(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return hl(Kf(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Yb.className="Permute",Zr(Yb);class Jb extends im{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Kf(e);return oi(Ao(n,this.maskValue),-1)}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);const n=Kf(e),a=oi(Ao(n,this.maskValue),-1,!0);return oo(n,br(a,n.dtype))}))}}Jb.className="Masking",Zr(Jb);class Qb extends im{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(xp(e.inputLength))}this.inputDim=e.inputDim,Fp(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Fp(this.outputDim,"outputDim"),this.embeddingsInitializer=jf(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=eb(e.embeddingsRegularizer),this.activityRegularizer=eb(e.activityRegularizer),this.embeddingsConstraint=Nm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Yr((()=>this.maskZero?(e=Kf(e),Ao(e,ul(e))):null))}computeOutputShape(e){if(e=Xf(e),null==this.inputLength)return[...e,this.outputDim];const t=xp(this.inputLength);if(t.length!==e.length-1)throw new fp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){const s=t[a],r=e[a+1];if(null!=s&&null!=r&&s!==r)throw new fp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=r),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);let n=Kf(e);"int32"!==n.dtype&&(n=cf(n,"int32"));const a=_f(this.embeddings.read(),wi(n,[n.size]));return wi(a,Xf(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Hf(this.embeddingsInitializer),embeddingsRegularizer:Jg(this.embeddingsRegularizer),activityRegularizer:Jg(this.activityRegularizer),embeddingsConstraint:wm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Qb.className="Embedding",Zr(Qb);class ev extends im{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new mp}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const s=e[e.length-t.length+a],r=t[a];if(null==s||null==r||s<0||r<0)n.push(null);else if(1===s)n.push(r);else if(1===r)n.push(s);else{if(s!==r)throw new fp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Xf(e)]),(e=e).length<2)throw new fp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ap(t),t.length>1)throw new fp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const a=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ap(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Yr((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=sf(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=uf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,s=e[0],r=e.slice(1).concat([s]);let i=wi(a,[s].concat(nf(e.slice(1))));i=hl(i,[1,0]),i=wi(i,r),t.push(i),n=!0}else if(e>1){const s=rf(1,e).concat([0]);t.push(hl(a,s)),n=!0}else t.push(a)}let a=this.mergeFunction(t);const s=a.rank;if(n)if(null==s){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=wi(hl(wi(a,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(rf(0,s-1));a=hl(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const a=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ap(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Yr((()=>{if(null==t)return null;if(!Array.isArray(t))throw new fp("`mask` should be an Array");if(!Array.isArray(e))throw new fp("`inputs` should be an Array");if(t.length!==e.length)throw new fp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Ki(e,0))))[0];for(let e=1;e<t.length-1;++e)n=ho(n,t[e]);return n}))}}class tv extends ev{constructor(e){super(e)}mergeFunction(e){return Yr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ri(t,e[n]);return t}))}}tv.className="Add",Zr(tv);class nv extends ev{constructor(e){super(e)}mergeFunction(e){return Yr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=oo(t,e[n]);return t}))}}nv.className="Multiply",Zr(nv);class av extends ev{constructor(e){super(e)}mergeFunction(e){return Yr((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ri(t,e[n]);return oo(1/e.length,t)}))}}av.className="Average",Zr(av);class sv extends ev{constructor(e){super(e)}mergeFunction(e){return Yr((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=go(t,e[n]);return t}))}}sv.className="Maximum",Zr(sv);class rv extends ev{constructor(e){super(e)}mergeFunction(e){return Yr((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=vo(t,e[n]);return t}))}}rv.className="Minimum",Zr(rv);class iv extends ev{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new fp("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const a=e[t].slice();a.splice(this.axis,1);let s=!1;for(const e of n)if(F(e,a)){s=!0;break}s||n.push(a)}if(n.length>1)throw new fp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Yr((()=>ff(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new fp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[a]||null==e[a]){n[a]=null;break}n[a]+=e[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new fp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new fp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new fp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Yr((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let n=0;n<e.length;++n)null==t[n]?a.push(br(Fo(e[n]),"bool")):t[n].rank<e[n].rank?a.push(Ki(t[n],-1)):a.push(t[n]);const s=$i(a,this.axis);return ii(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ov(e,t){for(;e<0;)e+=t;return e}iv.className="Concatenate",Zr(iv);class lv extends ev{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){E(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new mp("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new fp(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new fp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>ov(t,e[n].shape.length))):[ov(this.axes,n.shape.length),ov(this.axes,a.shape.length)],this.normalize&&(n=Lm(n,t[0]),a=Lm(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new mp("batchDot is not implemented for tensors of 4D or higher rank yet");if(E(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),E(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new mp("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,s=t.shape.length;null==n&&(n=[a-1,s-2]);const r=n;return Yr((()=>{let n,i;if(a>s){n=a-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=wi(t,t.shape.concat(e))}else if(s>a){n=s-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=wi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=r[0]===r[1]?co(oo(e,t),r[0]):co(oo(hl(e,[1,0]),t),r[1]);else{const n=r[0]!==e.shape.length-1,a=r[1]===t.shape.length-1;i=po(e,t,n,a)}if(n>0){let e;e=a>s?a+s-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);i=nl(i,t)}return 1===i.shape.length&&(i=Ki(i,1)),i}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[ov(this.axes,e.length),ov(this.axes,t.length)],n}computeOutputShape(e){E(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new mp("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}lv.className="Dot",Zr(lv);class cv extends im{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);const n=Kf(e);return If((()=>ri(bf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}cv.className="GaussianNoise",Zr(cv);class uv extends im{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yr((()=>{this.invokeCallHook(e,t);const n=Kf(e);return this.rate>0&&this.rate<1?If((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return oo(n,bf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}uv.className="GaussianDropout",Zr(uv);class hv extends im{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Kf(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yr((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return If((()=>{const t=Kf(e),a=-1.7580993408473766;let s=no(Wo(n),this.rate);s=cf(s,"float32");const r=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-r*a*this.rate,o=ri(oo(t,s),oo(ri(s,-1),a));return ri(oo(o,r),i)}),(()=>Kf(e)),t.training||!1)}return e}))}}function dv(e,t,n,a,s,r=.001){let i;if(2===e.rank)i=Ci(e,t,n,a,s,r);else if(3===e.rank)i=Ti(e,t,n,a,s,r);else{if(4!==e.rank)throw new mp(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ei(e,t,n,a,s,r)}return i}hv.className="AlphaDropout",Zr(hv);class pv extends im{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jf(e.betaInitializer||"zeros"),this.gammaInitializer=jf(e.gammaInitializer||"ones"),this.movingMeanInitializer=jf(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jf(e.movingVarianceInitializer||"ones"),this.betaConstraint=Nm(e.betaConstraint),this.gammaConstraint=Nm(e.gammaConstraint),this.betaRegularizer=eb(e.betaRegularizer),this.gammaRegularizer=eb(e.gammaRegularizer)}build(e){e=Xf(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new fp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new tm({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Yr((()=>{const n=null!=t.training&&t.training,a=Kf(e),s=a.shape,r=s.length,i=rf(0,r),o=this.axis>=0?this.axis:this.axis+r;i.splice(o,1);const l=vp(1,r);l[o]=s[o];const c=i.slice();c.sort();const u=!F(c,rf(0,r).slice(0,r-1));if(!n)return(()=>{if(u){const e=wi(this.movingMean.read(),l),t=wi(this.movingVariance.read(),l),n=this.center?wi(this.beta.read(),l):null,s=this.scale?wi(this.gamma.read(),l):null;return dv(a,e,t,n,s,this.epsilon)}return dv(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,a,s=.001){return F(a.slice().sort(),rf(0,e.rank-1))?function(e,t,n,a,s=.001){return Yr((()=>{const r=To(e,a),i=r.mean,o=r.variance;return[dv(e,i,o,n,t,s),i,o]}))}(e,t,n,a,s):function(e,t,n,a,s=.001){return Yr((()=>{const r=To(e,a),i=r.mean,o=r.variance,l=[];for(const t of rf(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);const c=wi(i,l),u=wi(o,l),h=null==t?null:wi(t,l),d=null==n?null:wi(n,l);return[dv(e,c,u,d,h,s),i,o]}))}(e,t,n,a,s)}(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Yr((()=>{const a=1-n,s=e.read(),r=oo(lo(s,t),a);e.write(lo(s,r))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hf(this.betaInitializer),gammaInitializer:Hf(this.gammaInitializer),movingMeanInitializer:Hf(this.movingMeanInitializer),movingVarianceInitializer:Hf(this.movingVarianceInitializer),betaRegularizer:Jg(this.betaRegularizer),gammaRegularizer:Jg(this.gammaRegularizer),betaConstraint:wm(this.betaConstraint),gammaConstraint:wm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}pv.className="BatchNormalization",Zr(pv);class fv extends im{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jf(e.betaInitializer||"zeros"),this.gammaInitializer=jf(e.gammaInitializer||"ones"),this.betaRegularizer=eb(e.betaRegularizer),this.gammaRegularizer=eb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Xf(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ap(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Kf(e),a=n.shape,s=a.length;return Yr((()=>{let{mean:e,variance:t}=To(n,this.axis,!0);const r=vp(1,s);for(const e of this.axis)r[e]=a[e];const i=e=>null!=e&&e.shape.length!==s?wi(e,r):e;let o=i(this.gamma.read()),l=i(this.beta.read());const c=[],u=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(c.push(a[e]),u.push(1)):(c.push(1),u.push(a[e]));return e=Xi(e,c),t=Xi(t,c),o=Xi(o,u),l=Xi(l,u),dv(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hf(this.betaInitializer),gammaInitializer:Hf(this.gammaInitializer),betaRegularizer:Jg(this.betaRegularizer),gammaRegularizer:Jg(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}fv.className="LayerNormalization",Zr(fv);class mv extends im{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new fp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new fp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new fp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new tm({ndim:4})]}computeOutputShape(e){let t,n;return e=Xf(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Yr((()=>{return t=Kf(e),n=this.padding,a=this.dataFormat,Yr((()=>{if(4!==t.rank)throw new fp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new fp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new fp(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Do(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function gv(e,t,n,a,s,r){return Yr((()=>{let i;qp(s),Kp(r),Zp(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==r&&(r="max"),e=ub(e,s);const o="same"===a?"same":"valid";return i="max"===r?fo(e,t,n,o):Ii(e,t,n,o),"channelsFirst"===s&&(i=hl(i,[0,3,1,2])),i}))}function bv(e,t,n,a,s,r){return Yr((()=>{let i;qp(s),Kp(r),Zp(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==r&&(r="max"),e=hb(e,s);const o="same"===a?"same":"valid";return i="max"===r?mo(e,t,n,o):Ni(e,t,n,o),"channelsFirst"===s&&(i=hl(i,[0,4,1,2,3])),i}))}mv.className="ZeroPadding2D",Zr(mv);class vv extends im{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new fp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Fp(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new fp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Fp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Zp(this.padding),this.inputSpec=[new tm({ndim:3})]}computeOutputShape(e){const t=lb((e=Xf(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Yr((()=>{this.invokeCallHook(e,t),e=uf(Kf(e),2);const n=this.poolingFunction(Kf(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return nl(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class _v extends vv{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return qp(s),Zp(a),gv(e,t,n,a,s,"max")}}_v.className="MaxPooling1D",Zr(_v);class kv extends vv{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return qp(s),Zp(a),gv(e,t,n,a,s,"avg")}}kv.className="AveragePooling1D",Zr(kv);class yv extends im{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new fp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Fp(this.poolSize,"poolSize"),Fp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qp(this.dataFormat),Zp(this.padding),this.inputSpec=[new tm({ndim:4})]}computeOutputShape(e){e=Xf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=lb(t,this.poolSize[0],this.padding,this.strides[0]),n=lb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Yr((()=>(this.invokeCallHook(e,t),this.poolingFunction(Kf(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class xv extends yv{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return qp(s),Zp(a),gv(e,t,n,a,s,"max")}}xv.className="MaxPooling2D",Zr(xv);class wv extends yv{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return qp(s),Zp(a),gv(e,t,n,a,s,"avg")}}wv.className="AveragePooling2D",Zr(wv);class Iv extends im{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new fp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Fp(this.poolSize,"poolSize"),Fp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qp(this.dataFormat),Zp(this.padding),this.inputSpec=[new tm({ndim:5})]}computeOutputShape(e){e=Xf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=lb(t,this.poolSize[0],this.padding,this.strides[0]),n=lb(n,this.poolSize[1],this.padding,this.strides[1]),a=lb(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return Yr((()=>(this.invokeCallHook(e,t),this.poolingFunction(Kf(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Nv extends Iv{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return qp(s),Zp(a),bv(e,t,n,a,s,"max")}}Nv.className="MaxPooling3D",Zr(Nv);class Sv extends Iv{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return qp(s),Zp(a),bv(e,t,n,a,s,"avg")}}Sv.className="AveragePooling3D",Zr(Sv);class Cv extends im{constructor(e){super(e),this.inputSpec=[new tm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new mp}}class Tv extends Cv{constructor(e){super(e||{})}call(e,t){return Yr((()=>{const t=Kf(e);return bo(t,1)}))}}Tv.className="GlobalAveragePooling1D",Zr(Tv);class Ev extends Cv{constructor(e){super(e||{})}call(e,t){return Yr((()=>{const t=Kf(e);return io(t,1)}))}}Ev.className="GlobalMaxPooling1D",Zr(Ev);class Av extends im{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qp(this.dataFormat),this.inputSpec=[new tm({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new mp}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class $v extends Av{call(e,t){return Yr((()=>{const t=Kf(e);return"channelsLast"===this.dataFormat?bo(t,[1,2]):bo(t,[2,3])}))}}$v.className="GlobalAveragePooling2D",Zr($v);class Rv extends Av{call(e,t){return Yr((()=>{const t=Kf(e);return"channelsLast"===this.dataFormat?io(t,[1,2]):io(t,[2,3])}))}}Rv.className="GlobalMaxPooling2D",Zr(Rv);class zv extends im{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const a=Mm(t.layer,n);delete t.layer;const s={layer:a};return Object.assign(s,t),new e(s)}}class Fv extends zv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Xf(e)).length<3)throw new fp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Xf(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return Yr((()=>Sb(((e,n)=>[Kf(this.layer.call(e,t)),[]]),e=Kf(e),[],!1,null,null,!1,!0)[1]))}}Fv.className="TimeDistributed",Zr(Fv);class Dv extends zv{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Mm(n),t.goBackwards=!0!==t.goBackwards;const a={};var s;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=Mm(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Rp(Hp,"BidirectionalMergeMode",s),e.weights)throw new mp("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(a=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):yp(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const s=Nb(e,n,a,this.numConstants);if(e=s.inputs,n=s.initialState,a=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const r=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new fp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,r.push(...n);const a=n.map((e=>new tm({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),i.push(...a)}if(null!=a)throw new mp("Support for constants in Bidirectional layers is not implemented yet.");const o=r[0]instanceof nm;for(const e of r)if(e instanceof nm!==o)throw new fp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(r),a=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Yr((()=>{const n=t.initialState;let a,s,r,i;if(null==n)a=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),i=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(a)&&(r=a.slice(1).concat(s.slice(1))),a=a[0],s=s[0]),this.returnSequences&&(s=Vo(s,1)),"concat"===this.mergeMode?i=ff([a,s]):"sum"===this.mergeMode?i=ri(a,s):"ave"===this.mergeMode?i=oo(.5,ri(a,s)):"mul"===this.mergeMode?i=oo(a,s):null==this.mergeMode&&(i=[a,s]),this.returnState?null==this.mergeMode?i.concat(r):[i].concat(r):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Yp(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Yp(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Mm(t.layer);if(delete t.layer,null!=t.numConstants)throw new mp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}function Ov(e,t,n=new Map,a=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Pv(e)){const s=Array.isArray(e)?[]:{};a.add(e);for(const r in e){const i=Ov(e[r],t,n,a);s[r]=i}return a.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Mv(e,t=Bv){return Lv(e,t)}function Lv(e,t,n=new Set){const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Pv(a)){const s=Array.isArray(a)?[]:{};n.add(a);for(const r in a){const a=Lv(e.map((e=>e[r])),t,n);s[r]=a}return n.delete(a),s}throw new Error(`Can't recurse into non-iterable type: ${a}`)}return s.value}function Bv(e){return null===e?null:Pv(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Pv(e){let t=!1;if(ue().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(963);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof rs)&&!(e instanceof Promise)&&!t)}function Wv(e){return Ov(e,Uv)}function Uv(e){return e instanceof rs?{value:e.clone(),recurse:!1}:Pv(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}Dv.className="Bidirectional",Zr(Dv),ue().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Mb||(Mb={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Lb||(Lb={}));class Vv{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Gv extends Vv{constructor(){super(Gv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Gv.INITIAL_CAPACITY=32;class Hv{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new e_(this,e)}filter(e){return new Jv(this,e)}map(e){return new Qv(this,e)}mapAsync(e){return new t_(this,e)}serialMapAsync(e){return new t_(this,e).serial()}flatmap(e){return new a_(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Yv(this,e,t)}columnMajorBatch(e,t=!0,n=Bv){return this.rowMajorBatch(e,t).map((e=>Mv(e,n)))}concatenate(e,t){return new s_(new jv([this,e]),t)}take(e){return e<0||null==e?this:new Xv(this,e)}skip(e){return e<0||null==e?this:new Kv(this,e)}prefetch(e){return new r_(this,e)}shuffle(e,t){return new i_(this,e,t)}serial(){return new Zv(this)}}class jv extends Hv{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Wv(e),done:!1}}}class qv extends Hv{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Zv extends Hv{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Kv extends Hv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Jr(e.value)}return this.upstream.next()}}class Xv extends Hv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Yv extends Hv{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Jv extends Hv{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Jr(e.value)}}}class Qv extends Hv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=vs(e.value),n=this.transform(e.value),a=vs(n);for(const e of t)bs(e,a)||e.dispose();return{value:n,done:!1}}}class e_ extends Hv{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class t_ extends Hv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=vs(e.value),n=await this.transform(e.value),a=vs(n);for(const e of t)bs(e,a)||e.dispose();return{value:n,done:!1}}}class n_ extends Hv{constructor(){super(),this.outputQueue=new Gv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class a_ extends n_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=vs(e.value),n=this.transform(e.value),a=vs(n);this.outputQueue.pushAll(n);for(const e of t)bs(e,a)||e.dispose();return!0}}class s_ extends Hv{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Pb=Bb||(Bb={}))[Pb.FAIL=0]="FAIL",Pb[Pb.SHORTEST=1]="SHORTEST",Pb[Pb.LONGEST=2]="LONGEST";class r_ extends Hv{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Vv(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class i_ extends r_{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Mo.alea(n||Ga().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class o_{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return E(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),l_((async()=>(await n.iterator()).columnMajorBatch(e,t,c_)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,l_((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,l_((async()=>(await t.iterator()).filter((t=>Yr((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return l_((async()=>(await t.iterator()).map((t=>Yr((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return l_((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return l_((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,l_((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new qv(s)).take(e),new s_(n,a);var n,a,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,l_((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,s=Mo.alea(t||Ga().toString());return l_((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,l_((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function l_(e,t=null){return new class extends o_{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function c_(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof rs||H(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof rs?al(e):Ms(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function u_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&E("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}o_.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const h_=$u;class d_ extends w{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new x(this,Kr())}nextDataId(){return d_.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,ue().get("IS_NODE")&&va("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&q(n[0])){const s=n.map((e=>Ha(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,a,s){this.data.set(e,{values:t,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Jc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ja(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return gr(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return Kr().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ga();return e(),{kernelMs:Ga()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){u_([e],"where");const t=this.readSync(e.dataId);return h_(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function p_(e,t,n){return({inputs:a,attrs:s,backend:r})=>{const{x:i}=a;if(u_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=r,l=o.data.get(i.dataId).values,c=z(i.shape),u=n||i.dtype,h=V(u,c);for(let e=0;e<c;++e)h[e]=t(l[e],s);return o.makeTensorInfo(i.shape,u,h)}}function f_(e,t,n){return({inputs:a,attrs:s,backend:r})=>{const{x:i}=a;if(u_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=r,l=o.data.get(i.dataId).values,c=n||i.dtype,u=t(l,c,s);return o.makeTensorInfo(i.shape,c,u)}}d_.nextDataId=0,ei("cpu",(()=>new d_),1);const m_=p_(ht,(e=>e>=0?e:Math.exp(e)-1)),g_={kernelName:ht,backendName:"cpu",kernelFunc:m_};function b_(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const v_={kernelName:Tt,backendName:"cpu",kernelFunc:b_};function __(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:r}=a;u_([s],"leakyRelu");const i=z(s.shape),o=n.data.get(s.dataId).values,l=U("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?r*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const k_={kernelName:Ft,backendName:"cpu",kernelFunc:__};function y_(e){return(t,n,a,s,r)=>{const i=Tr(t,n),o=i.length,l=J(i),c=U(r,z(i)),u=t.length,h=n.length,d=J(t),p=J(n),f=Sr(t,i),m=Sr(n,i);if(f.length+m.length===0)for(let t=0;t<c.length;++t)c[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<c.length;++t){const n=ie(t,o,l),r=n.slice(-u);f.forEach((e=>r[e]=0));const i=re(r,u,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=re(g,h,p);c[t]=e(a[i],s[b])}return[c,i]}}const x_=y_(((e,t)=>e<0?t*e:e));function w_(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t;u_([a,s],"prelu");const r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,[o,l]=x_(a.shape,s.shape,r,i,"float32");return n.makeTensorInfo(l,"float32",o)}const I_={kernelName:gn,backendName:"cpu",kernelFunc:w_},N_=p_(yn,(e=>Math.max(0,e))),S_={kernelName:yn,backendName:"cpu",kernelFunc:N_},C_=p_(Cn,(e=>Math.min(Math.max(0,e),6))),T_={kernelName:Cn,backendName:"cpu",kernelFunc:C_};function E_(e){return(t,n,a)=>{const s=U(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],a);return s}}const A_=E_((e=>1/(1+Math.exp(-e)))),$_=p_(Ln,(e=>1/(1+Math.exp(-e)))),R_={kernelName:Ln,backendName:"cpu",kernelFunc:$_};function z_(e,t,n,a,s){if("linear"===n)return b_({inputs:{x:t},backend:e});if("relu"===n)return N_({inputs:{x:t},backend:e});if("elu"===n)return m_({inputs:{x:t},backend:e});if("relu6"===n)return C_({inputs:{x:t},backend:e});if("prelu"===n)return w_({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return __({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return $_({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function F_(e){const{inputs:t,backend:n}=e,{real:a,imag:s}=t,r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",r),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const D_={kernelName:Pe,backendName:"cpu",kernelFunc:F_};function O_(e,t,n="float32"){if("complex64"===n)return F_({inputs:{real:O_(e,t,"float32"),imag:O_(e,t,"float32")},backend:e});const a=ne(z(t),n);return e.makeTensorInfo(t,n,a)}function M_(e){const{inputs:t,backend:n}=e,{input:a}=t,s=n.data.get(a.dataId).complexTensorInfos.real,r=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,r)}const L_={kernelName:_n,backendName:"cpu",kernelFunc:M_};function B_(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dtype:r}=a;if("complex64"===r){if("complex64"===s.dtype)return b_({inputs:{x:s},backend:n});const e=O_(n,s.shape,s.dtype),t=B_({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=F_({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===s.dtype){const e=M_({inputs:{input:s},backend:n}),t=B_({inputs:{x:e},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(e),t}if(!G(s.dtype,r)){const e=b_({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:r}}if("int32"===r){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===r){const e=n.data.get(s.dataId).values,t=Va([0],s.dtype),[a,r]=y_(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(r,"bool",a)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${r}`)}const P_={kernelName:Me,backendName:"cpu",kernelFunc:B_};function W_(e,t,n,a){return null==n?({inputs:n,backend:s})=>{const{a:r,b:i}=n,o=s;u_([r,i],e);const l=o.data.get(r.dataId).values,c=o.data.get(i.dataId).values,u="string"===r.dtype?Eu(l):l,h="string"===r.dtype?Eu(c):c,d=a||r.dtype,[p,f]=t(r.shape,i.shape,u,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a:r,b:i}=e,o=s;if("complex64"===r.dtype||"complex64"===i.dtype){const e=B_({inputs:{x:r},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(a.dataId).values,c=o.data.get(s.dataId).values,u=B_({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,v]=n(r.shape,i.shape,l,c,f,m),_=o.makeTensorInfo(v,"float32",g),k=o.makeTensorInfo(v,"float32",b),y=F_({inputs:{real:_,imag:k},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(u),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(k),y}{const e=o.data.get(r.dataId).values,n=o.data.get(i.dataId).values,s=a||r.dtype,[l,c]=t(r.shape,i.shape,e,n,s);return o.makeTensorInfo(c,s,l)}}}function U_(e){return(t,n,a,s,r,i)=>{const o=Tr(t,n),l=z(o),c=o.length,u=J(o),h=U("float32",l),d=U("float32",l),p=Sr(t,o),f=Sr(n,o),m=Jc(a,s),g=Jc(r,i),b=t.length,v=J(t),_=n.length,k=J(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,a=t%g.length,s=e(m[2*n],m[2*n+1],g[2*a],g[2*a+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=ie(t,c,u),a=n.slice(-b);p.forEach((e=>a[e]=0));const s=re(a,b,v),r=n.slice(-_);f.forEach((e=>r[e]=0));const i=re(r,_,k),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const V_=y_(((e,t)=>e+t)),G_=U_(((e,t,n,a)=>({real:e+n,imag:t+a}))),H_=W_(ve,V_,G_),j_={kernelName:ve,backendName:"cpu",kernelFunc:H_};function q_(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:r}=a,i=z(s.shape),o=B(r,i),l=z(o);E(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Z_={kernelName:xn,backendName:"cpu",kernelFunc:q_};function K_(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:r}=t,{transposeA:i,transposeB:o}=a;u_([s,r],"matMul");const l=s.shape.length,c=r.shape.length,u=i?s.shape[l-2]:s.shape[l-1],h=o?r.shape[c-1]:r.shape[c-2],d=i?s.shape[l-1]:s.shape[l-2],p=o?r.shape[c-2]:r.shape[c-1],f=s.shape.slice(0,-2),m=r.shape.slice(0,-2),g=z(f),b=z(m),v=Tr(s.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,p]);E(u===h,(()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${s.shape} and ${r.shape} and transposeA=${i} and transposeB=${o} must match.`));const _=o?[b,p,h]:[b,h,p],k=q_({inputs:{x:s},backend:n,attrs:{shape:i?[g,u,d]:[g,d,u]}}),y=q_({inputs:{x:r},backend:n,attrs:{shape:_}}),x=i?k.shape[1]:k.shape[2],w=i?k.shape[2]:k.shape[1],I=o?y.shape[1]:y.shape[2],N=Math.max(g,b),S=n.data.get(k.dataId).values,C=n.data.get(y.dataId).values,T=J(k.shape),A=J(y.shape),[$,R,F]=i?[T[0],1,T[1]]:[T[0],T[1],1],[D,O,M]=o?[1,A[1],A[0]]:[A[1],1,A[0]],L=w*I,B=gr([N,w,I],k.dtype),P=B.values,W=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<w;t+=W)for(let n=0;n<I;n+=W)for(let a=0;a<x;a+=W){const s=Math.min(t+W,w),r=Math.min(n+W,I),i=Math.min(a+W,x);for(let o=t;o<s;o++)for(let t=n;t<r;t++){let n=0;for(let s=a;s<i;s++){const a=Math.min(e,g-1)*$,r=Math.min(e,b-1)*M;n+=S[a+o*R+s*F]*C[s*D+t*O+r]}P[e*L+(o*I+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(y),n.makeTensorInfo(v,B.dtype,B.values)}const X_={kernelName:ze,backendName:"cpu",kernelFunc:K_},Y_={kernelName:ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:r,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=K_({inputs:{a:s,b:r},attrs:{transposeA:l,transposeB:c},backend:n}),i&&(p=H_({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),u&&(f=z_(n,d,u,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function J_(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Q_={kernelName:me,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;u_(t,"abs");let a=new Float32Array(z(t.shape));return a=J_(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},ek=p_(ge,(e=>Math.acos(e))),tk={kernelName:ge,backendName:"cpu",kernelFunc:ek},nk=p_(be,(e=>Math.acosh(e))),ak={kernelName:be,backendName:"cpu",kernelFunc:nk},sk={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;u_(t,"addN");const s=a.map((e=>n.data.get(e.dataId).values)),r=gr(a[0].shape,a[0].dtype),i=r.values;for(let e=0;e<a.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(r.shape,r.dtype,r.values)}};function rk(e,t,n,a,s){const r=t.length,i=z(t),o=J(t),l=J(s),c=U(n,z(s));for(let t=0;t<i;++t){const n=ie(t,r,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];c[re(s,r,l)]=e[t]}return c}function ik(e){const{inputs:t,attrs:n,backend:a}=e,{x:s}=t,{perm:r}=n;u_(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[r[e]];const l=rk(a.data.get(s.dataId).values,s.shape,s.dtype,r,o);return{dataId:a.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const ok={kernelName:la,backendName:"cpu",kernelFunc:ik},lk={kernelName:ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;u_(s,"all");const o=P(r,s.shape);let l=o;const c=Io(l,s.shape.length);let u=s;null!=c&&(u=ik({inputs:{x:s},backend:n,attrs:{perm:c}}),l=So(l.length,s.shape.length)),wo("all",l,u.shape.length);const[h,d]=yo(u.shape,l),p=z(d),f=ne(z(h),u.dtype),m=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];n=n&&a}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(i){const e=q_({inputs:{x:g},backend:n,attrs:{shape:xo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},ck={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;u_(s,"any");const o=P(r,s.shape);let l=o;const c=Io(l,s.shape.length);let u=s;null!=c&&(u=ik({inputs:{x:s},backend:n,attrs:{perm:c}}),l=So(l.length,s.shape.length)),wo("any",l,u.shape.length);const[h,d]=yo(u.shape,l),p=z(d),f=ne(z(h),u.dtype),m=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];n=n||a}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(i){const e=q_({inputs:{x:g},backend:n,attrs:{shape:xo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},uk={kernelName:xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r}=a;u_(s,"argMax");let i=P(r,s.shape);const o=Io(i,s.shape.length);let l=s;const c=[];null!=o&&(l=ik({inputs:{x:s},backend:n,attrs:{perm:o}}),c.push(l),i=So(i.length,l.shape.length)),i=[i[0]],wo("argMax",i,l.shape.length);const[u,h]=yo(l.shape,i),d=ne(z(u),"int32"),p=z(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],a=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,a=e)}d[e]=a}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}},hk={kernelName:we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r}=a;u_(s,"argMin");let i=P(r,s.shape);const o=Io(i,s.shape.length);let l=s;const c=[];null!=o&&(l=ik({inputs:{x:s},backend:n,attrs:{perm:o}}),c.push(l),i=So(i.length,l.shape.length)),i=[i[0]],wo("argMin",i,l.shape.length);const[u,h]=yo(l.shape,i),d=ne(z(u),"int32"),p=z(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],a=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,a=e)}d[e]=a}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}},dk=p_(Ie,(e=>Math.asin(e))),pk={kernelName:Ie,backendName:"cpu",kernelFunc:dk},fk=p_(Ne,(e=>Math.asinh(e))),mk={kernelName:Ne,backendName:"cpu",kernelFunc:fk},gk=p_(Se,(e=>Math.atan(e))),bk={kernelName:Se,backendName:"cpu",kernelFunc:gk},vk=y_(((e,t)=>Math.atan2(e,t))),_k=W_(Te,vk),kk={kernelName:Te,backendName:"cpu",kernelFunc:_k},yk=p_(Ce,(e=>Math.atanh(e))),xk={kernelName:Ce,backendName:"cpu",kernelFunc:yk};function wk(e,t,n,a,s,r){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,u=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=gr(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],v=s.outShape[2]*s.outShape[3],_=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,m=t*a[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const k=b*i-d,y=Math.max(0,k),x=Math.min(s.inHeight,u+k),w=n+b*v;for(let n=0;n<s.outWidth;++n){const i=n*o-p,u=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,v=0,k=0;for(let n=y;n<x;n+=l){const s=m+n*a[1];for(let n=u;n<d;n+=c){const i=e[s+n*a[2]+t];"max"===r&&i>b?b=i:"avg"===r&&(v+=i,k++)}if(isNaN(b))break}g[w+n*_+t]="avg"===r?v/k:b}}}return m}function Ik(e,t,n,a,s=!1,r=!1){const i=gr(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,c=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=gr(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=c;const v=Math.min(a.inHeight,h+g);for(let o=0;o<a.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=u;const _=Math.min(a.inWidth,d+h);let k=Number.NEGATIVE_INFINITY,y=-1;for(let n=b;n<v;n+=c){const i=n-g;for(let o=p;o<_;o+=u){const l=o-h,c=m.get(e,n,o,t);c>k&&(k=c,y=s?r?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:i*d+l)}}i.set(y,e,n,o,t)}}return i}function Nk(e,t,n,a,s,r){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,c=s.dilationDepth,u=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,v="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,_=gr(s.outShape,n),k=_.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],x=s.outShape[2]*s.outShape[3]*s.outShape[4],w=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*y,_=t*a[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outDepth;++y){const N=y*i-m;let S=N;for(;S<0;)S+=c;const C=Math.min(s.inDepth,d+N),T=n+y*x;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=u;const m=Math.min(s.inHeight,p+i),y=T+n*w;for(let n=0;n<s.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=y+n*I;let x=v,w=0,N=0;for(let n=S;n<C;n+=c){const s=_+n*a[1];for(let n=d;n<m;n+=u){const i=s+n*a[2];for(let n=o;n<p;n+=h){const s=e[i+n*a[3]+t];if("max"===r&&s>x?x=s:"avg"===r&&(w+=s,N++),isNaN(x))break}if(isNaN(x))break}if(isNaN(x))break}k[g+t]="avg"===r?w/N:x}}}}return _}const Sk={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;u_(s,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=a;E(ki(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=ui(s.shape,r,i,1,o,l);let u;if(1===c.filterWidth&&1===c.filterHeight&&F(c.inShape,c.outShape))u=b_({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=J(s.shape),a=wk(e,s.shape,s.dtype,t,c,"avg");u=n.makeTensorInfo(c.outShape,s.dtype,a.values)}return u}},Ck={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=a;u_(s,"avgPool3d");const u=hi(s.shape,r,i,1,o,l,c),h=Nk(n.data.get(s.dataId).values,s.shape,s.dtype,J(s.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Tk={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=a;u_([s,r],"avgPool3DGrad");const u=hi(r.shape,i,o,1,l,c),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,b=u.dilationDepth,v=u.dilationHeight,_=u.dilationWidth,k=u.effectiveFilterDepth,y=u.effectiveFilterHeight,x=u.effectiveFilterWidth,w=k-1-u.padInfo.front,I=x-1-u.padInfo.left,N=y-1-u.padInfo.top,S=gr(r.shape,"float32"),C=1/(f*m*g),T=n.bufferSync(s);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let n=0;n<u.inDepth;++n)for(let a=0;a<u.inHeight;++a)for(let s=0;s<u.inWidth;++s){const r=n-w,i=a-N,o=s-I;let l=0;for(let n=0;n<k;n+=b){const a=(r+n)/h;if(!(a<0||a>=u.outDepth||Math.floor(a)!==a))for(let n=0;n<y;n+=v){const s=(i+n)/d;if(!(s<0||s>=u.outHeight||Math.floor(s)!==s))for(let n=0;n<x;n+=_){const r=(o+n)/p;r<0||r>=u.outWidth||Math.floor(r)!==r||(l+=T.get(e,a,s,r,t))}}}S.set(l*C,e,n,a,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},Ek={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,i=r;u_([s,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:c}=a,u=ui(i.shape,o,l,1,c),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,b=u.effectiveFilterHeight,v=u.effectiveFilterWidth,_=v-1-u.padInfo.left,k=b-1-u.padInfo.top,y=gr(i.shape,"float32"),x=1/(p*f),w=n.data.get(s.dataId).values,I=gr(s.shape,"float32",w);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const s=n-k,r=a-_;let i=0;for(let n=0;n<b;n+=m){const a=(s+n)/h;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let n=0;n<v;n+=g){const s=(r+n)/d;s<0||s>=u.outWidth||Math.floor(s)!==s||(i+=I.get(e,a,s,t))}}y.set(i*x,e,n,a,t)}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Ak={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,scale:r,offset:i,mean:o,variance:l}=t;E(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),E(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),E(null==r||o.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),u_([s,o,l,r,i],"batchNorm");let{varianceEpsilon:c}=a;null==c&&(c=.001);const u=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=r?n.data.get(r.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,b=p.length,v=d.length,_=h.length;let k=0,y=0,x=0,w=0;for(let e=0;e<u.length;++e)m[e]=f[k++]+(u[e]-h[y++])*p[x++]/Math.sqrt(d[w++]+c),k>=g&&(k=0),y>=_&&(y=0),x>=b&&(x=0),w>=v&&(w=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function $k(e,t,n,a,s){const r=Wr(a,t,n),i=z(n),o=J(a);if(r){const n=Ur(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=gr(a,s,"string"===s?Eu(e):e),c=gr(n,s);for(let e=0;e<c.size;++e){const n=c.indexToLoc(e),a=n.map(((e,n)=>e+t[n]));c.set(l.get(...a),...n)}return"string"===s?Au(c.values):c.values}function Rk(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:r,size:i}=a;u_(s,"slice");const[o,l]=Vr(s,r,i);Er(s,o,l);const c=$k(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,c)}const zk={kernelName:Fn,backendName:"cpu",kernelFunc:Rk},Fk={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:r,crops:i}=a;u_([s],"batchToSpaceND");const o=r.reduce(((e,t)=>e*t)),l=Dc(s.shape,r,o),c=Oc(l.length,r.length),u=Mc(s.shape,r,o),h=Lc(i,r.length),d=Bc(u,i,r.length),p=q_({inputs:{x:s},backend:n,attrs:{shape:l}}),f=ik({inputs:{x:p},backend:n,attrs:{perm:c}}),m=q_({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Rk({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Dk(e,t,n,a,s){const r=z(a),i=ne(s,n);for(let n=0;n<e.length;n++){const a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=s||(i[a]+=r>0?t[n]:1)}return i}function Ok(e,t,n,a=!1){const s=e.shape[0],r=e.shape[1],i=gr([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<r;s++){const r=e.get(o,s);if(r<0)throw new Error("Input x must be non-negative!");r>=n||(a?i.set(1,o,r):t.size>0?i.set(i.get(o,r)+t.get(o,s),o,r):i.set(i.get(o,r)+1,o,r))}return i}const Mk={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:r}=t,{size:i}=a,o=Dk(n.data.get(s.dataId).values,n.data.get(r.dataId).values,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,o)}},Lk={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,o=Tr(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Bk=E_((e=>Math.ceil(e))),Pk=f_(Le,Bk),Wk={kernelName:Le,backendName:"cpu",kernelFunc:Pk},Uk=p_(Be,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Vk={kernelName:Be,backendName:"cpu",kernelFunc:Uk},Gk={kernelName:We,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(z(t.shape)),s=n.data.get(t.dataId),r=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};function Hk(e,t,n,a){const s=V(n,z(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=z(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const r="string"===n?Eu(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[o+t]=r[i++]}a+=e.shape[1]}))}return s}function jk(e){const{inputs:t,backend:n}=e,{input:a}=t,s=n.data.get(a.dataId).complexTensorInfos.imag,r=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,r)}const qk={kernelName:At,backendName:"cpu",kernelFunc:jk};function Zk(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,r=P(s,t[0].shape)[0];let i=$c(t.map((e=>e.shape)),r);if(0===z(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>z(e.shape)>0));if(1===o.length)return b_({inputs:{x:o[0]},backend:n});if(Ac(o.map((e=>e.shape)),r),"complex64"===o[0].dtype){const e=o.map((e=>M_({inputs:{input:e},backend:n}))),t=o.map((e=>jk({inputs:{input:e},backend:n}))),a=Zk({inputs:e,backend:n,attrs:{axis:r}}),s=Zk({inputs:t,backend:n,attrs:{axis:r}}),i=F_({inputs:{real:a,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=z(e.shape.slice(r));return q_({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=$c(l.map((e=>e.shape)),1);const u=1===l[0].shape[0],h=Hk(c,i,t[0].dtype,u),d=$c(o.map((e=>e.shape)),r),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const Kk={kernelName:Ue,backendName:"cpu",kernelFunc:Zk};function Xk(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=a;u_([s,r],"conv2d");const h=yi(l),d=di(s.shape,r.shape,i,c,o,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,v=d.padInfo.top,_="channelsLast"===d.dataFormat,k=new ts(d.outShape,s.dtype),y=J(s.shape),x=J(r.shape),w=y[0],I=_?y[1]:y[2],N=_?y[2]:1,S=_?1:y[1],C=k.strides[0],T=_?k.strides[1]:k.strides[2],E=_?k.strides[2]:1,A=_?1:k.strides[1],$=n.data.get(s.dataId).values,R=n.data.get(r.dataId).values,z=k.values;for(let e=0;e<d.batchSize;++e){const t=e*w,n=e*C;for(let e=0;e<d.outHeight;++e){const a=n+e*T,s=e*d.strideHeight-v;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=d.inHeight)continue;const r=e*x[0],i=t+n*I;for(let e=0;e<d.outWidth;++e){const t=a+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const s=i+a*N;let o=r+e*x[1];for(let e=0;e<d.inChannels;++e){const n=$[s+e*S];for(let e=0;e<d.outChannels;++e)z[t+e*A]+=n*R[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,z)}const Yk={kernelName:Ve,backendName:"cpu",kernelFunc:Xk},Jk={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=a;u_([s,r],"conv2dBackpropFilter");const h=yi(l),d=di(s.shape,u,i,1,o,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,v=new ts(d.filterShape,"float32"),_=d.padInfo.left,k=d.padInfo.top,y=n.data.get(s.dataId).values,x=n.data.get(r.dataId).values,w=new ts(s.shape,s.dtype,y),I=new ts(r.shape,r.dtype,x);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((k-e)/p)),n=Math.min(d.outHeight,(d.inHeight+k-e)/p);for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((_-a)/f)),r=Math.min(d.outWidth,(d.inWidth+_-a)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let c=0;c<d.batchSize;++c)for(let u=t;u<n;++u){const t=e+u*p-k;for(let e=s;e<r;++e){const n=a+e*f-_;l+=b?w.get(c,t,n,i)*I.get(c,u,e,o):w.get(c,i,t,n)*I.get(c,o,u,e)}}v.set(l,e,a,i,o)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Qk={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{inputShape:i,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=a;u_([s,r],"conv2dBackpropInput");const h=J(r.shape),d=J(s.shape);let p=yi(c);const f=di(i,r.shape,o,1,l,u,!1,p),m=new ts(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,v=n.data.get(r.dataId).values,[_,k,y]=h,{batchSize:x,filterHeight:w,filterWidth:I,inChannels:N,inHeight:S,inWidth:C,outChannels:T,outHeight:E,outWidth:A,strideHeight:$,strideWidth:R}=f;p=f.dataFormat;const z=w-1-f.padInfo.top,F=I-1-f.padInfo.left,D="channelsLast"===p,O=m.strides[0],M=D?m.strides[1]:m.strides[2],L=D?m.strides[2]:1,B=D?1:m.strides[1],P=d[0],W=D?d[1]:d[2],U=D?d[2]:1,V=D?1:d[1];for(let e=0;e<x;++e)for(let t=0;t<N;++t)for(let n=0;n<S;++n){const a=n-z,s=Math.max(0,Math.ceil(a/$)),r=Math.min(E,(w+a)/$);for(let i=0;i<C;++i){const o=i-F,l=Math.max(0,Math.ceil(o/R)),c=Math.min(A,(I+o)/R);let u=0;for(let n=s;n<r;++n){const s=n*$-a;for(let a=l;a<c;++a){const r=P*e+W*n+U*a,i=_*(w-1-s)+k*(I-1-(a*R-o))+y*t;for(let e=0;e<T;++e)u+=b[r+V*e]*v[i+e]}}g[O*e+M*n+L*i+B*t]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},ey={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l}=a;u_([s,r],"conv3d");const c=pi(s.shape,r.shape,i,l,o),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,b=g.front,v=g.left,_=g.top,k=new ts(c.outShape,s.dtype),y=n.data.get(s.dataId).values,x=n.data.get(r.dataId).values,w=k.values,I=J(s.shape),N=J(r.shape);for(let e=0;e<c.batchSize;++e){const t=e*I[0],n=e*k.strides[0];for(let e=0;e<c.outDepth;++e){const a=n+e*k.strides[1],s=e*c.strideDepth-b;for(let e=0;e<u;++e){const n=s+e*p;if(n<0||n>=c.inDepth)continue;const r=e*N[0],i=t+n*I[1];for(let e=0;e<c.outHeight;++e){const t=a+e*k.strides[2],n=e*c.strideHeight-_;for(let e=0;e<h;++e){const a=n+e*f;if(a<0||a>=c.inHeight)continue;const s=r+e*N[1],o=i+a*I[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,a=e*c.strideWidth-v;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=c.inWidth)continue;const r=s+e*N[2],i=o+t*c.inChannels;let l=r;for(let e=0;e<c.inChannels;++e){const t=y[i+e];for(let e=0;e<c.outChannels;++e)w[n+e]+=t*x[l+e];l+=c.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},ty={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,pad:o,filterShape:l}=a;u_([s,r],"conv3dBackpropFilterV2");const c=J(s.shape),u=J(r.shape),h=pi(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,v=new ts(h.filterShape,"float32"),_=v.values,[k,y,x,w]=v.strides,I=n.data.get(r.dataId).values,[N,S,C,T]=u,E=n.data.get(s.dataId).values,[A,$,R,z]=c,F=h.padInfo.front,D=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((F-e)/d)),n=Math.min(h.outDepth,(h.inDepth+F-e)/d),a=e*k;for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((O-s)/p)),i=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*y+a;for(let a=0;a<b;++a){const l=Math.max(0,Math.ceil((D-a)/f)),c=Math.min(h.outWidth,(h.inWidth+D-a)/f),u=a*x+o;for(let o=0;o<h.inChannels;++o){const m=o*w+u;for(let u=0;u<h.outChannels;++u){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,b=m*N;for(let m=t;m<n;++m){const t=(e+m*d-F)*$+h,n=m*S+b;for(let e=r;e<i;++e){const r=(s+e*p-O)*R+t,i=e*C+n;for(let e=l;e<c;++e){const t=e*T+i;g+=E[(a+e*f-D)*z+r+o]*I[t+u]}}}}_[m+u]=g}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},ny={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{pad:i,strides:o,inputShape:l}=a;u_([s],"conv3dBackpropInputV2");const c=J(s.shape),u=J(r.shape),h=pi(l,r.shape,o,1,i),d=new ts(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,v=n.data.get(s.dataId).values,[_,k,y,x]=c,w=n.data.get(r.dataId).values,[I,N,S,C]=u,{batchSize:T,filterDepth:E,filterHeight:A,filterWidth:$,inChannels:R,inDepth:z,inHeight:F,inWidth:D,outChannels:O,outDepth:M,outHeight:L,outWidth:B,strideDepth:P,strideHeight:W,strideWidth:U}=h,V=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=$-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<R;++t)for(let n=0;n<z;++n){const a=n-V,s=Math.max(0,Math.ceil(a/P)),r=Math.min(M,(E+a)/P);for(let i=0;i<F;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),c=Math.min(L,(A+o)/W);for(let u=0;u<D;++u){const h=u-H,d=Math.max(0,Math.ceil(h/U)),T=Math.min(B,($+h)/U);let R=0;for(let n=s;n<r;++n){const s=n*P-a;for(let a=l;a<c;++a){const r=a*W-o;for(let i=d;i<T;++i){const o=_*e+k*n+y*a+x*i,l=I*(E-1-s)+N*(A-1-r)+S*($-1-(i*U-h))+C*t;for(let e=0;e<O;++e)R+=v[o+e]*w[l+e]}}}p[f*e+m*n+g*i+b*u+t]=R}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},ay=p_(Ke,(e=>Math.cos(e))),sy={kernelName:Ke,backendName:"cpu",kernelFunc:ay},ry=p_(Xe,(e=>Math.cosh(e))),iy={kernelName:Xe,backendName:"cpu",kernelFunc:ry},oy={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:r,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:c}=a,[u,h,d,p]=s.shape,f=r.shape[0],[m,g]=o,b=gr([f,m,g,p],"float32"),v=n.data.get(r.dataId).values,_=n.data.get(i.dataId).values,k=n.data.get(s.dataId).values,y=J(s.shape),x=J(b.shape);for(let e=0;e<f;e++){const t=4*e,n=v[t],a=v[t+1],s=v[t+2],r=v[t+3],i=_[e];if(i>=u)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(r-a)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const u=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(u<0||u>h-1)for(let n=0;n<g;n++)for(let a=0;a<p;a++){const s=a+n*x[2]+t*x[1]+e*x[0];b.values[s]=c}else if("bilinear"===l){const n=Math.floor(u),s=Math.ceil(u),o=u-n;for(let l=0;l<g;l++){const u=g>1?a*(d-1)+l*f:.5*(a+r)*(d-1);if(u<0||u>d-1){for(let n=0;n<p;n++){const a=n+l*x[2]+t*x[1]+e*x[0];b.values[a]=c}continue}const h=Math.floor(u),m=Math.ceil(u),v=u-h;for(let a=0;a<p;a++){let r=a+h*y[2]+n*y[1]+i*y[0];const c=k[r];r=a+m*y[2]+n*y[1]+i*y[0];const u=k[r];r=a+h*y[2]+s*y[1]+i*y[0];const d=k[r];r=a+m*y[2]+s*y[1]+i*y[0];const p=c+(u-c)*v,f=d+(k[r]-d)*v;r=a+l*x[2]+t*x[1]+e*x[0],b.values[r]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?a*(d-1)+n*f:.5*(a+r)*(d-1);if(s<0||s>d-1){for(let a=0;a<p;a++){const s=a+n*x[2]+t*x[1]+e*x[0];b.values[s]=c}continue}const o=Math.round(s),l=Math.round(u);for(let a=0;a<p;a++){const s=a+o*y[2]+l*y[1]+i*y[0],r=a+n*x[2]+t*x[1]+e*x[0];b.values[r]=k[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},ly={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,exclusive:i,reverse:o}=a;u_(s,"cumprod");const l=Io([r],s.shape.length);let c=s;null!=l&&(c=ik({inputs:{x:s},backend:n,attrs:{perm:l}}));const u=So(1,s.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=fs(c.dtype,"int32"),d=te(z(c.shape),h),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const a=m(e,t-1);d[n]=i?p[a]*d[a]:p[n]*d[a]}}const g=n.makeTensorInfo(c.shape,h,d);if(null!=l){const e=ik({inputs:{x:g},backend:n,attrs:{perm:No(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}},cy={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,exclusive:i,reverse:o}=a;u_(s,"cumsum");const l=Io([r],s.shape.length);let c=s;null!=l&&(c=ik({inputs:{x:s},backend:n,attrs:{perm:l}}));const u=So(1,s.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=fs(c.dtype,"int32"),d=ne(z(c.shape),h),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const a=m(e,t-1);d[n]=i?p[a]+d[a]:p[n]+d[a]}}const g=n.makeTensorInfo(c.shape,h,d);if(null!=l){const e=ik({inputs:{x:g},backend:n,attrs:{perm:No(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}},uy={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:r}=t,{size:i,binaryOutput:o}=a;if(1===s.shape.length){const e=Dk(n.data.get(s.dataId).values,n.data.get(r.dataId).values,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,e)}if(2===s.shape.length){const e=Ok(n.bufferSync(s),n.bufferSync(r),i,o);return n.makeTensorInfo(e.shape,r.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},hy={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:r,dataFormat:i}=a;E("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],c=s.shape[2],u=s.shape[3],h=l*r,d=c*r,p=u/(r*r),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/r),a=t%r;for(let t=0;t<d;++t){const s=Math.floor(t/r),i=(a*r+t%r)*p;for(let t=0;t<p;++t){const a=t+i+u*(s+c*(n+l*e));m[g++]=f[a]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function dy(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=a;u_([s,r],"depthwiseConv2DNative");const u=J(s.shape),h=J(r.shape);let d=l;null==d&&(d=[1,1]),E(ki(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=di(s.shape,r.shape,i,d,o,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:v}=p,_=v.left,k=v.top,y=p.outChannels/p.inChannels,x=new ts(p.outShape,s.dtype),w=n.data.get(s.dataId).values,I=n.data.get(r.dataId).values,N=x.values;for(let e=0;e<p.batchSize;++e){const t=e*u[0],n=e*x.strides[0];for(let e=0;e<p.outHeight;++e){const a=n+e*x.strides[1],s=e*p.strideHeight-k;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const r=e*h[0],i=t+n*u[1];for(let e=0;e<p.outWidth;++e){const t=a+e*x.strides[2],n=e*p.strideWidth-_;for(let e=0;e<m;++e){const a=n+e*b;if(a<0||a>=p.inWidth)continue;const s=r+e*h[1],o=i+a*p.inChannels;let l=t,c=s;for(let e=0;e<p.inChannels;++e){const t=w[o+e];for(let e=0;e<y;++e)N[l+e]+=t*I[c+e];l+=y,c+=y}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const py={kernelName:nt,backendName:"cpu",kernelFunc:dy},fy={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=a;u_([s,r],"depthwiseConv2dNativeBackpropFilter");const h=di(s.shape,u,i,o,l,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new ts(h.filterShape,"float32"),b=h.padInfo.left,v=h.padInfo.top,_=h.outChannels/h.inChannels,k=n.data.get(s.dataId).values,y=new ts(s.shape,s.dtype,k),x=n.data.get(r.dataId).values,w=new ts(r.shape,r.dtype,x);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((v-e)/d)),n=Math.min(h.outHeight,(h.inHeight+v-e)/d);for(let a=0;a<m;++a){const s=Math.max(0,Math.ceil((b-a)/p)),r=Math.min(h.outWidth,(h.inWidth+b-a)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/_),l=i%_;let c=0;for(let l=0;l<h.batchSize;++l)for(let u=t;u<n;++u){const t=e+u*d-v;for(let e=s;e<r;++e){const n=a+e*p-b;c+=y.get(l,t,n,o)*w.get(l,u,e,i)}}g.set(c,e,a,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},my={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=a;u_([s,r],"depthwiseConv2DNativeBackpropInput");const h=J(s.shape),d=J(r.shape),p=di(u,r.shape,i,o,l,c,!0),f=new ts(p.inShape,"float32"),m=f.values,[g,b,v]=f.strides,_=n.data.get(s.dataId).values,[k,y,x]=h,w=n.data.get(r.dataId).values,[I,N,S]=d,{batchSize:C,filterHeight:T,filterWidth:E,inChannels:A,inHeight:$,inWidth:R,outChannels:z,outHeight:F,outWidth:D,strideHeight:O,strideWidth:M}=p,L=T-1-p.padInfo.top,B=E-1-p.padInfo.left,P=z/A;for(let e=0;e<C;++e)for(let t=0;t<A;++t)for(let n=0;n<$;++n){const a=n-L,s=Math.max(0,Math.ceil(a/O)),r=Math.min(F,(T+a)/O);for(let i=0;i<R;++i){const o=i-B,l=Math.max(0,Math.ceil(o/M)),c=Math.min(D,(E+o)/M);let u=0;for(let n=s;n<r;++n){const s=n*O-a;for(let a=l;a<c;++a){const r=k*e+y*n+x*a,i=I*(T-1-s)+N*(E-1-(a*M-o))+S*t;for(let e=0;e<P;++e)u+=_[r+(t*P+e)]*w[i+e]}}m[g*e+b*n+v*i+t]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},gy={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=z(a.shape),r=n.data.get(a.dataId).values,i=gr([s,s],a.dtype),o=i.values;for(let e=0;e<r.length;e++)o[e*s+e]=r[e];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},by={kernelName:it,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:r,pad:i,dilations:o}=n,l=t,c=l.data.get(a.dataId).values,u=a.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:v,padInfo:_,strideHeight:k,strideWidth:y,filterHeight:x,filterWidth:w,dilationHeight:I,dilationWidth:N,outShape:S}=ci(a.shape,s.shape,r,i,"NHWC",o),C=z(S),T=S.length,E=V(a.dtype,C);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*k-_.top;for(let r=0;r<v;++r){const i=r*y-_.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<x;++t){const r=n+t*I;if(r>=0&&r<f)for(let n=0;n<w;++n){const p=i+n*N;if(p>=0&&p<m){const i=re([e,r,p,o],u,J(a.shape)),f=re([t,n,o],d,J(s.shape)),m=c[i]+h[f];m>l&&(l=m)}}}E[re([e,t,r,o],T,J(S))]=l}}}return{dataId:l.write(Va(E,a.dtype),S,a.dtype),shape:S,dtype:a.dtype}}},vy={kernelName:lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:r}=e,{strides:i,pad:o,dilations:l}=n,c=t,u=ee(a.shape,c.data.get(a.dataId).values),h=ee(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:v,strideHeight:_,strideWidth:k,filterHeight:y,filterWidth:x,dilationHeight:w,dilationWidth:I,outShape:N}=ci(a.shape,s.shape,i,o,"NHWC",l);E(r.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${r.rank}`));const S=ee(N,c.data.get(r.dataId).values),C=ae(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*_-v.top;for(let a=0;a<b;++a){const s=a*k-v.left;for(let r=0;r<m;++r){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<y;++t){const a=n+t*w;if(a>=0&&a<p)for(let n=0;n<x;++n){const c=s+n*I;if(c>=0&&c<f){const s=u[e][a][c][r]+h[t][n][r];s>i&&(i=s,o=t,l=n)}}}C[o][l][r]+=S[e][t][a][r]}}}return{dataId:c.write(Va(C,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},_y={kernelName:ot,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:r}=e,{strides:i,pad:o,dilations:l}=n,c=t,u=ee(a.shape,c.data.get(a.dataId).values),h=ee(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:v,strideHeight:_,strideWidth:k,filterHeight:y,filterWidth:x,dilationHeight:w,dilationWidth:I,outShape:N}=ci(a.shape,s.shape,i,o,"NHWC",l);E(r.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${r.rank}`));const S=ee(N,c.data.get(r.dataId).values),C=ae(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*_-v.top;for(let a=0;a<b;++a){const s=a*k-v.left;for(let r=0;r<m;++r){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<y;++t){const a=n+t*w;if(a>=0&&a<p)for(let n=0;n<x;++n){const c=s+n*I;if(c>=0&&c<f){const s=u[e][a][c][r]+h[t][n][r];s>i&&(i=s,o=a,l=c)}}}C[e][o][l][r]+=S[e][t][a][r]}}}return{dataId:c.write(Va(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},ky=y_(((e,t)=>e*t)),yy=U_(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),xy=W_(sn,ky,yy),wy={kernelName:sn,backendName:"cpu",kernelFunc:xy};function Iy(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;let o;u_(s,"sum"),o="bool"===s.dtype?B_({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):b_({inputs:{x:s},backend:n});const l=o.shape.length,c=P(r,o.shape),u=Io(c,l);let h=c,d=o;null!=u&&(d=ik({inputs:{x:o},backend:n,attrs:{perm:u}}),h=So(h.length,l)),wo("sum",h,d.shape.length);const[p,f]=yo(d.shape,h);let m=O_(n,p,fs(d.dtype,"int32"));const g=z(f),b=n.data.get(m.dataId).values,v=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=v[t+e];b[e]=n}if(i){const e=m;m=q_({inputs:{x:m},backend:n,attrs:{shape:xo(m.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=u&&n.disposeIntermediateTensorInfo(d),m}const Ny={kernelName:Wn,backendName:"cpu",kernelFunc:Iy},Sy={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,r=t,{allDims:i,summedDims:o,idDims:l}=ou(s,r.length);cu(i.length,l,r);const{path:c,steps:u}=uu(o,l),h=u.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of u[e]){const{permutationIndices:e,expandDims:a}=lu(p,l[t]);let s;hu(e)?s=r[t]:(s=ik({inputs:{x:r[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);F(s.shape,i)||(s=q_({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=xy({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(c[e]>=0&&(d=Iy({inputs:{x:d},backend:n,attrs:{axis:c[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Cy={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:s}=t;u_([a,s],"eluGrad");const r=new Float32Array(z(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];r[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",r)}},Ty=y_(((e,t)=>e===t?1:0)),Ey=W_(ft,Ty,null,"bool"),Ay={kernelName:ft,backendName:"cpu",kernelFunc:Ey},$y=jc,Ry=qc,zy=Zc,Fy=Kc,Dy=Xc,Oy=Yc,My=p_(pt,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+$y*n);return t*(1-((((Oy*a+Dy)*a+Fy)*a+zy)*a+Ry)*a*Math.exp(-n*n))})),Ly={kernelName:pt,backendName:"cpu",kernelFunc:My},By=E_((e=>Math.exp(e))),Py=f_(mt,By,"float32"),Wy={kernelName:mt,backendName:"cpu",kernelFunc:Py};function Uy(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:r}=a,i=s.shape.length,o=s.shape.slice();let l=r;return r<0&&(E(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),q_({inputs:{x:s},backend:n,attrs:{shape:o}})}const Vy={kernelName:gt,backendName:"cpu",kernelFunc:Uy},Gy=E_((e=>Math.expm1(e))),Hy=f_(bt,Gy),jy={kernelName:bt,backendName:"cpu",kernelFunc:Hy},qy=y_(((e,t)=>e/t)),Zy=W_(ct,qy),Ky={kernelName:ct,backendName:"cpu",kernelFunc:Zy},Xy=y_(((e,t)=>e-t)),Yy=U_(((e,t,n,a)=>({real:e-n,imag:t-a}))),Jy=W_(na,Xy,Yy),Qy={kernelName:na,backendName:"cpu",kernelFunc:Jy};function ex(e,t,n){const a=e.shape,s=a[0],r=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[s,r],u=z(c),h=U("float32",u),d=U("float32",u);for(let e=0;e<s;e++){const a=Rk({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,r]}}),s=Rk({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,r]}}),i=F_({inputs:{real:a,imag:s},backend:n}),{real:c,imag:u}=tx(i,t,n),p=Jc(c,u);for(let t=0;t<r;t++){const n=nu(p,t);h[e*r+t]=n.real,d[e*r+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(c,"float32",h),f=n.makeTensorInfo(c,"float32",d),m=F_({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function tx(e,t,n){const a=z(e.shape),s=n.data.get(e.dataId),r=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=a)&o-1)){const s=nx(r,i,a,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),r=n.makeTensorInfo([],"float32",Ua(a,"float32")),i=b_({inputs:{x:r},backend:n}),l=Ky.kernelFunc({inputs:{a:e,b:r},backend:n}),c=Ky.kernelFunc({inputs:{a:t,b:i},backend:n}),u=n.data.get(l.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:u,imag:h}}return s}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let r=0,i=0;for(let a=0;a<t;a++){const o=ru(s*a,t,n),l=nu(e,a);r+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(r/=t,i/=t),au(a,r,i,s)}return a}(Jc(r,i),a,t);return Qc(e)}var o}function nx(e,t,n,a,s){if(1===n)return{real:e,imag:t};const r=Jc(e,t),i=n/2,o=eu(r),l=o.real,c=o.imag,u=[l.length],h=s.makeTensorInfo(u,"float32",l),d=s.makeTensorInfo(u,"float32",c),p=F_({inputs:{real:h,imag:d},backend:s}),f=tu(r),m=f.real,g=f.imag,b=[m.length],v=s.makeTensorInfo(b,"float32",m),_=s.makeTensorInfo(b,"float32",g),k=F_({inputs:{real:v,imag:_},backend:s}),y=nx(l,c,i,a,s),x=y.real,w=y.imag,I=[x.length],N=s.makeTensorInfo(I,"float32",x),S=s.makeTensorInfo(I,"float32",w),C=F_({inputs:{real:N,imag:S},backend:s}),T=nx(m,g,i,a,s),E=T.real,A=T.imag,$=[E.length],R=s.makeTensorInfo($,"float32",E),z=s.makeTensorInfo($,"float32",A),F=F_({inputs:{real:R,imag:z},backend:s}),D=su(n,a),O=[D.real.length],M=s.makeTensorInfo(O,"float32",D.real),L=s.makeTensorInfo(O,"float32",D.imag),B=F_({inputs:{real:M,imag:L},backend:s}),P=xy({inputs:{a:B,b:F},backend:s}),W=H_({inputs:{a:C,b:P},backend:s}),U=Jy({inputs:{a:C,b:P},backend:s}),V=M_({inputs:{input:W},backend:s}),G=M_({inputs:{input:U},backend:s}),H=jk({inputs:{input:W},backend:s}),j=jk({inputs:{input:U},backend:s}),q=Zk({inputs:[V,G],backend:s,attrs:{axis:0}}),Z=Zk({inputs:[H,j],backend:s,attrs:{axis:0}}),K=s.data.get(q.dataId).values,X=s.data.get(Z.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(Z),{real:K,imag:X}}const ax={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=z(a.shape),r=a.shape[a.shape.length-1],i=q_({inputs:{x:a},backend:n,attrs:{shape:[s/r,r]}}),o=ex(i,!1,n),l=q_({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function sx(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:r}=n,i=r||K(s),o=V(i,z(a));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(a,i,o)}const rx={kernelName:_t,backendName:"cpu",kernelFunc:sx},ix={kernelName:kt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,s=n,r=U(a.dtype,z(a.shape)),[i,o,l,c]=a.shape,u=s.data.get(a.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*c;for(let e=0;e<o;e++){const n=e*(l*c);for(let e=0;e<l;e++){const a=e*c;for(let s=0;s<c;s++){const i=Math.round(l-e-1),o=t+n+a+s;let h=u[o];i>=0&&i<l&&(h=u[t+n+i*c+s]),r[o]=h}}}}return{dataId:s.write(r,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},ox=E_((e=>Math.floor(e))),lx=f_(yt,ox),cx={kernelName:yt,backendName:"cpu",kernelFunc:lx},ux=y_(((e,t)=>Math.floor(e/t))),hx=W_(xt,ux,null,"int32"),dx={kernelName:xt,backendName:"cpu",kernelFunc:hx},px={kernelName:ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=Xk({inputs:{x:s,filter:r},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=H_({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=z_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},fx={kernelName:ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=dy({inputs:{x:s,filter:r},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=H_({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=z_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function mx(e,t,n,a,s,r,i,o,l){const c=gr([a,r],n);for(let n=0;n<a;n++){const a=[];let u=0;for(let t=0;t<s;t++){const r=e[n*s+t];u+=r*i[t],a.push(r)}if(u<0||u>=l/r)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<r;e++)c.values[n*r+e]=t.get(...t.indexToLoc(u*r+e))}return c}const gx={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,r=z(a.shape),i=s.shape,o=i[i.length-1],[l,c,u,h]=Pc(a,s);if(0===c)return n.makeTensorInfo(l,a.dtype,[]);const d=mx(n.data.get(s.dataId).values,n.bufferSync(a),a.dtype,c,o,u,h,a.shape,r);return n.makeTensorInfo(l,a.dtype,d.values)}};function bx(e,t,n){const a=gr(n,e.dtype);for(let n=0;n<a.size;++n){const s=a.indexToLoc(n).slice(),r=s[0],i=s[2],o=t.locToIndex([r,i]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(a.values[n]=e.values[l])}return a}const vx={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:r}=t,{axis:i,batchDims:o}=a;u_([s,r],"gatherV2");const l=P(i,s.shape)[0],c=n.data.get(r.dataId).values,u=s.shape[l];for(let e=0;e<c.length;++e){const t=c[e];E(t<=u-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${u-1}]`))}let h=o;null==o&&(h=0);const d=z(r.shape),p=Tu(s,r,l,h),f=q_({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=q_({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(m),v=bx(n.bufferSync(f),b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}},_x=y_(((e,t)=>e>t?1:0)),kx=W_(St,_x,null,"bool"),yx={kernelName:St,backendName:"cpu",kernelFunc:kx},xx=y_(((e,t)=>e>=t?1:0)),wx=W_(Ct,xx,null,"bool"),Ix={kernelName:Ct,backendName:"cpu",kernelFunc:wx},Nx={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=z(a.shape),r=a.shape[a.shape.length-1],i=q_({inputs:{x:a},backend:n,attrs:{shape:[s/r,r]}}),o=ex(i,!0,n),l=q_({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},Sx=p_($t,(e=>Number.isFinite(e)?1:0),"bool"),Cx={kernelName:$t,backendName:"cpu",kernelFunc:Sx},Tx=p_(Rt,(e=>Math.abs(e)===1/0?1:0),"bool"),Ex={kernelName:Rt,backendName:"cpu",kernelFunc:Tx},Ax=p_(zt,(e=>Number.isNaN(e)?1:0),"bool"),$x={kernelName:zt,backendName:"cpu",kernelFunc:Ax},Rx=y_(((e,t)=>e<t?1:0)),zx=W_(Dt,Rx,null,"bool"),Fx={kernelName:Dt,backendName:"cpu",kernelFunc:zx},Dx=y_(((e,t)=>e<=t?1:0)),Ox=W_(Ot,Dx,null,"bool"),Mx={kernelName:Ot,backendName:"cpu",kernelFunc:Ox};function Lx(e,t,n){const a=(t-e)/(n-1),s=ne(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}const Bx={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,num:r}=n,i=Lx(a,s,r);return t.makeTensorInfo([i.length],"float32",i)}},Px=E_((e=>Math.log(e))),Wx=f_(Lt,Px),Ux={kernelName:Lt,backendName:"cpu",kernelFunc:Wx},Vx=p_(Bt,(e=>Math.log1p(e))),Gx={kernelName:Bt,backendName:"cpu",kernelFunc:Vx},Hx=y_(((e,t)=>e&&t)),jx=W_(Pt,Hx,null,"bool"),qx={kernelName:Pt,backendName:"cpu",kernelFunc:jx},Zx=p_(Wt,(e=>e?0:1),"bool"),Kx={kernelName:Wt,backendName:"cpu",kernelFunc:Zx},Xx=y_(((e,t)=>e||t)),Yx=W_(Ut,Xx,null,"bool"),Jx={kernelName:Ut,backendName:"cpu",kernelFunc:Yx},Qx={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:r,bias:i,alpha:o,beta:l}=a;u_(s,"LRN");const c=s.shape[3],u=c-1,h=n.data.get(s.dataId).values,d=z(s.shape),p=new Float32Array(d);function f(e){const t=e%c;let n=e-t+Math.max(0,t-r);const a=e-t+Math.min(t+r,u);let s=0;for(;n<=a;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},ew={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,y:r,dy:i}=t,{depthRadius:o,bias:l,alpha:c,beta:u}=a;u_(i,"LRNGrad");const h=z(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(r.dataId).values,g=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),a=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<a;e++)s+=Math.pow(f[e],2);s=c*s+l;for(let t=n;t<a;t++){let n=-2*c*u*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-u)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function tw(e,t,n,a){const s=U(a,z(n));for(let n=0;n<s.length;++n){const a=n*t;let r=e[a];for(let n=0;n<t;++n){const t=e[a+n];(Number.isNaN(t)||t>r)&&(r=t)}s[n]=r}return s}function nw(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:r,keepDims:i}=a,o=n;let l=s.shape;const c=l.length,u=P(r,l);let h=u;const d=Io(h,c);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=rk(p,l,s.dtype,d,e),h=So(h.length,c),l=e}u_(s,"max"),wo("max",h,c);const[f,m]=yo(l,h),g=tw(p,z(m),f,s.dtype),b=o.write(g,f,s.dtype);let v=f;return i&&(v=xo(f,u)),{dataId:b,shape:v,dtype:s.dtype}}const aw={kernelName:Ht,backendName:"cpu",kernelFunc:nw},sw=y_(((e,t)=>Math.max(e,t))),rw=W_(jt,sw),iw={kernelName:jt,backendName:"cpu",kernelFunc:rw},ow={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;u_(s,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=a;E(ki(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=ui(s.shape,r,i,1,o,l);let u;if(1===c.filterWidth&&1===c.filterHeight&&F(c.inShape,c.outShape))u=b_({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=J(s.shape),a=wk(e,s.shape,s.dtype,t,c,"max");u=n.makeTensorInfo(c.outShape,s.dtype,a.values)}return u}},lw={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=a;u_(s,"maxPool3d");const u=hi(s.shape,r,i,1,o,l,c),h=Nk(n.data.get(s.dataId).values,s.shape,s.dtype,J(s.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},cw={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=a;u_([s,r],"maxPool3DGrad");const u=hi(r.shape,i,o,1,l,c),h=function(e,t){const n=gr(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const v=b*a-d;let _=v;for(;_<0;)_+=i;const k=Math.min(t.inDepth,c+v);for(let a=0;a<t.outHeight;++a){const c=a*s-p;let d=c;for(;d<0;)d+=o;const y=Math.min(t.inHeight,u+c);for(let s=0;s<t.outWidth;++s){const p=s*r-f;let x=p;for(;x<0;)x+=l;const w=Math.min(t.inWidth,h+p);let I=Number.NEGATIVE_INFINITY,N=-1;for(let t=_;t<k;t+=i){const n=t-v;for(let a=d;a<y;a+=o){const s=a-c;for(let r=x;r<w;r+=l){const i=r-p,o=e.get(m,t,a,r,g);o>=I&&(I=o,N=n*u*h+s*u+i)}}}n.set(N,m,b,a,s,g)}}}return n}(n.bufferSync(r),u),d=u.strideDepth,p=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,b=u.dilationWidth,v=u.effectiveFilterDepth,_=u.effectiveFilterHeight,k=u.effectiveFilterWidth,y=v-1-u.padInfo.front,x=k-1-u.padInfo.left,w=_-1-u.padInfo.top,I=gr(r.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let n=0;n<u.inDepth;++n)for(let a=0;a<u.inHeight;++a)for(let s=0;s<u.inWidth;++s){const r=n-y,i=a-w,o=s-x;let l=0;for(let n=0;n<v;n+=m){const a=(r+n)/d;if(!(a<0||a>=u.outDepth||Math.floor(a)!==a))for(let s=0;s<_;s+=g){const r=(i+s)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let i=0;i<k;i+=b){const c=(o+i)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const d=v*_*k-1-h.get(e,a,r,c,t)===n*_*k+s*k+i?1:0;0!==d&&(l+=N.get(e,a,r,c,t)*d)}}}I.set(l,e,n,a,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},uw={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r,output:i}=t,o=r;u_([r,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=a,d=ui(o.shape,l,c,1,u,h),p=n.data.get(o.dataId).values,f=gr(d.outShape,o.dtype,Ik(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,v=d.dilationWidth,_=d.effectiveFilterHeight,k=d.effectiveFilterWidth,y=k-1-d.padInfo.left,x=_-1-d.padInfo.top,w=gr(o.shape,"float32"),I=n.data.get(s.dataId).values,N=gr(s.shape,"float32",I);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const s=n-x,r=a-y;let i=0;for(let n=0;n<_;n+=b){const a=(s+n)/m;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let s=0;s<k;s+=v){const o=(r+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=_*k-1-f.get(e,a,o,t)===n*k+s?1:0;0!==l&&(i+=N.get(e,a,o,t)*l)}}w.set(i,e,n,a,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},hw={kernelName:Yt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:r,pad:i,includeBatchInIndex:o}=t,l=n;u_(a,"MaxPoolWithArgmax");const c=l.data.get(a.dataId).values,u=ui(a.shape,s,r,[1,1],i),[h,d]=function(e,t,n,a,s){const r=wk(e,0,n,J(t),s,"max"),i=Ik(e,t,n,s,!0,a);return[r.values,i.values]}(c,a.shape,a.dtype,o,u),p=l.write(h,u.outShape,a.dtype),f=l.write(d,u.outShape,a.dtype);return[{dataId:p,shape:u.outShape,dtype:a.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}},dw={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=P(r,s.shape),l=z(yo(s.shape,o)[1]),c=[],u=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(u);const h=B_({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});c.push(h);const d=Zy({inputs:{a:h,b:u},backend:n});c.push(d);const p=Iy({inputs:{x:d},backend:n,attrs:{axis:r,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},pw={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;u_(s,"min");const o=P(r,s.shape);let l=o;const c=Io(l,s.shape.length);let u=s;null!=c&&(u=ik({inputs:{x:s},backend:n,attrs:{perm:c}}),l=So(l.length,s.shape.length)),wo("min",l,u.shape.length);const[h,d]=yo(u.shape,l),p=z(d),f=ne(z(h),u.dtype),m=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];(Number.isNaN(a)||a<n)&&(n=a)}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(i){const e=q_({inputs:{x:g},backend:n,attrs:{shape:xo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},fw=y_(((e,t)=>Math.min(e,t))),mw=W_(en,fw),gw={kernelName:en,backendName:"cpu",kernelFunc:mw},bw={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:r,mode:i}=a;u_(s,"mirrorPad");const o=r.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=r.map((e=>e[0])),c=r.map(((e,t)=>e[0]+s.shape[t])),u="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=J(s.shape),f=z(o),m=o.length,g=J(o),b=U(s.dtype,f);for(let e=0;e<f;e++){let t=ie(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-u:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+u);t=t.map(((e,t)=>e-l[t]));const n=re(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},vw=y_(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),_w=W_(nn,vw),kw={kernelName:nn,backendName:"cpu",kernelFunc:_w};function yw(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:r}=a,i=s.shape.length;let o=r;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=P([o],s.shape),c=nw({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=xo(c.shape,l),h=q_({inputs:{x:c},backend:n,attrs:{shape:u}}),d=Jy({inputs:{a:s,b:h},backend:n}),p=Py({inputs:{x:d},backend:n}),f=Iy({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=q_({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Zy({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const xw={kernelName:Gn,backendName:"cpu",kernelFunc:yw},ww={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{numSamples:r,seed:i,normalized:o}=a;u_(s,"multinomial");const l=o?s:yw({inputs:{logits:s},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=n.data.get(l.dataId).values,d=[c,r],p=ne(z(d),"int32");for(let e=0;e<c;++e){const t=e*u,n=new Float32Array(u-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const a=Mo.alea(i.toString()),s=e*r;for(let e=0;e<r;++e){const t=a();p[s+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){p[s+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function Iw(e,t,n){const a=Ua(-1,n);return ky([],t,a,e,n)}const Nw={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;u_(a,"neg");const s=n.data.get(a.dataId).values,[r,i]=Iw(s,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,r)}},Sw=Ul,Cw={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;u_(s,"NonMaxSuppression");const c=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,{selectedIndices:h}=Sw(c,u,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Tw=Vl,Ew={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=a;u_(s,"NonMaxSuppressionPadded");const u=n.data.get(s.dataId).values,h=n.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=Tw(u,h,i,o,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Aw=Gl,$w={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=a;u_(s,"NonMaxSuppressionWithScore");const u=n.data.get(s.dataId).values,h=n.data.get(r.dataId).values,d=i,p=o,f=l,m=c,{selectedIndices:g,selectedScores:b}=Aw(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},Rw=y_(((e,t)=>e!==t?1:0)),zw=W_(on,Rw,null,"bool"),Fw={kernelName:on,backendName:"cpu",kernelFunc:zw},Dw={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{depth:r,onValue:i,offValue:o}=a;u_(s,"oneHot");const l=z(s.shape),c=new Float32Array(l*r);c.fill(o);const u=n.data.get(s.dataId).values;for(let e=0;e<l;++e)u[e]>=0&&u[e]<r&&(c[e*r+u[e]]=i);return n.makeTensorInfo([...s.shape,r],"int32",c)}};function Ow(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=M_({inputs:{input:a},backend:n}),t=Ow({inputs:{x:e},backend:n}),s=jk({inputs:{input:a},backend:n}),r=Ow({inputs:{x:s},backend:n}),i=F_({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}return sx({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const Mw={kernelName:da,backendName:"cpu",kernelFunc:Ow},Lw={kernelName:hn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=M_({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a}),r=jk({inputs:{input:s},backend:a}),i=Ow({inputs:{x:r},backend:a}),o=F_({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),o}return sx({backend:a,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Bw(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return Uy({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const r=t[0].shape,i=t[0].dtype;t.forEach((e=>{A(r,e.shape,"All tensors passed to stack must have matching shapes"),E(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Zk({inputs:t.map((e=>{const t=Uy({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const Pw={kernelName:pn,backendName:"cpu",kernelFunc:Bw},Ww={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:r,constantValue:i}=a;u_(s,"pad");const o=r.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=r.map((e=>e[0])),c=n.data.get(s.dataId).values,u=z(s.shape),h=s.shape.length,d=J(s.shape),p=z(o),f=o.length,m=J(o),g=U(s.dtype,p);0!==i&&g.fill(i);for(let e=0;e<u;e++)g[re(ie(e,h,d).map(((e,t)=>e+l[t])),f,m)]=c[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},Uw=y_(((e,t)=>Math.pow(e,t))),Vw=W_(mn,Uw),Gw={kernelName:mn,backendName:"cpu",kernelFunc:Vw};function Hw(e,t,n,a){const[s,r]=yo(e,a),i=fs(t,"int32"),o=ne(z(s),i),l=z(r);for(let e=0;e<o.length;++e){const t=e*l;let a=1;for(let e=0;e<l;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:s,outDtype:i}}const jw={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;u_(s,"prod");const o=s.shape.length,l=P(r,s.shape),c=Io(l,o);let u=l,h=s;const d=[];null!=c&&(h=ik({inputs:{x:s},backend:n,attrs:{perm:c}}),d.push(h),u=So(u.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Hw(h.shape,h.dtype,p,u);let b=m;return i&&(b=xo(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}};function qw(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return ne(0,a);const s=ne(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const Zw={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,dtype:r,step:i}=n,o=qw(a,s,i,r);return t.makeTensorInfo([o.length],r,o)}},Kw=p_(kn,(e=>1/e)),Xw={kernelName:kn,backendName:"cpu",kernelFunc:Kw},Yw={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:r,halfPixelCenters:i,size:o}=a;u_(s,"resizeBilinear");const l=J(s.shape),[c,u]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(z([h,c,u,f])),b=[r&&c>1?d-1:d,r&&u>1?p-1:p],v=[r&&c>1?c-1:c,r&&u>1?u-1:u];let _=0;const k=b[0]/v[0],y=b[1]/v[1];for(let e=0;e<h;e++)for(let t=0;t<c;t++){let n;n=i?k*(t+.5)-.5:k*t;const a=Math.max(0,Math.floor(n)),s=n-a,r=Math.min(d-1,Math.ceil(n)),o=e*l[0]+a*l[1],c=e*l[0]+r*l[1];for(let e=0;e<u;e++){let t;t=i?y*(e+.5)-.5:y*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(p-1,Math.ceil(t)),u=o+n*l[2],h=c+n*l[2],d=o+r*l[2],b=c+r*l[2];for(let e=0;e<f;e++){const t=m[u+e],n=m[h+e],r=t+(m[d+e]-t)*a,i=r+(n+(m[b+e]-n)*a-r)*s;g[_++]=i}}}return n.makeTensorInfo([h,c,u,f],"float32",g)}},Jw={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:r}=t,{alignCorners:i}=a;u_([r,s],"resizeBilinearGrad");const o=J(s.shape),[l,c,u,h]=s.shape,[,d,p]=r.shape,f=new Float32Array(l*c*u*h),m=[i&&d>1?c-1:c,i&&p>1?u-1:u],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],v=m[1]/g[1],_=n.data.get(r.dataId).values;let k=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,a=Math.floor(n),s=Math.min(Math.ceil(n),c-1),r=t+a*o[1],i=t+s*o[1],l=n-a,d=1-l;for(let e=0;e<p;e++){const t=e*v,n=Math.floor(t),a=Math.min(Math.ceil(t),u-1),s=t-n,c=1-s,p=r+n*o[2],m=r+a*o[2],g=i+n*o[2],b=i+a*o[2],y=d*c,x=d*s,w=l*c,I=l*s;for(let e=0;e<h;e++){const t=_[k++];f[p+e]+=t*y,f[m+e]+=t*x,f[g+e]+=t*w,f[b+e]+=t*I}}}}return n.makeTensorInfo([l,u,c,h],"float32",f)}},Qw={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:r,halfPixelCenters:i,size:o}=a;u_(s,"resizeNearestNeighbor");const l=J(s.shape),[c,u]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*c*u*f),b=[r&&c>1?d-1:d,r&&u>1?p-1:p],v=[r&&c>1?c-1:c,r&&u>1?u-1:u],_=b[0]/v[0],k=b[1]/v[1];let y=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<c;e++){const n=i?_*(e+.5):_*e;let a=Math.min(d-1,r?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const s=t+a*l[1];for(let e=0;e<u;e++){const t=i?k*(e+.5):k*e;let n=Math.min(p-1,r?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const a=s+n*l[2];for(let e=0;e<f;e++){const t=m[a+e];g[y++]=t}}}}return n.makeTensorInfo([h,c,u,f],s.dtype,g)}},eI={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:r}=t,{alignCorners:i}=a;u_([r,s],"resizeNearestNeighborGrad");const o=J(s.shape),l=J(r.shape),[c,u,h,d]=s.shape,[,p,f]=r.shape,m=new Float32Array(c*u*h*d),g=n.data.get(r.dataId).values,b=[i&&p>1?u-1:u,i&&f>1?h-1:h],v=[i&&p>1?p-1:p,i&&f>1?f-1:f],_=b[0]/v[0],k=b[1]/v[1],y=1/_,x=1/k,w=2*Math.ceil(y)+2,I=2*Math.ceil(x)+2;for(let e=0;e<c;e++){const t=e*o[0];for(let e=0;e<u;e++){const n=t+e*o[1],a=Math.floor(e*y),s=Math.floor(a-w/2);for(let a=0;a<h;a++){const r=n+a*o[2],c=Math.floor(a*x),b=Math.floor(c-I/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<w;r++){const c=r+s;if(c<0||c>=p)continue;const d=t+c*l[1],m=c*_;if(e===Math.min(u-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],r=t*k;a===Math.min(h-1,i?Math.round(r):Math.floor(r))&&(o+=g[s+n])}}m[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},tI={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:r}=a;u_(s,"reverse");const i=s.shape.length,o=P(r,s.shape);if(0===i)return b_({inputs:{x:s},backend:n});const l=new ts(s.shape,s.dtype),c=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(c.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},nI={kernelName:fa,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:r,center:i}=t,o=n,l=U(a.dtype,z(a.shape)),[c,u,h,d]=a.shape,[p,f]=Fc(i,u,h),m=Math.sin(s),g=Math.cos(s),b=o.data.get(a.dataId).values;for(let e=0;e<c;e++){const t=e*h*u*d;for(let e=0;e<u;e++){const n=e*(h*d);for(let a=0;a<h;a++){const s=a*d;for(let i=0;i<d;i++){const o=[c,e,a,i],v=o[2],_=o[1];let k=(v-p)*g-(_-f)*m,y=(v-p)*m+(_-f)*g;k=Math.round(k+p),y=Math.round(y+f);let x=r;"number"!=typeof r&&(x=3===i?255:r[i]),k>=0&&k<h&&y>=0&&y<u&&(x=b[t+y*(h*d)+k*d+i]),l[t+n+s+i]=x}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},aI=p_(En,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),sI={kernelName:En,backendName:"cpu",kernelFunc:aI},rI=E_((e=>1/Math.sqrt(e))),iI=f_(An,rI),oI={kernelName:An,backendName:"cpu",kernelFunc:iI};function lI(e,t,n,a,s,r,i,o,l,c){const u=[a/s,s],h=e.values,d=t.values;if(0===a)return gr(n,t.dtype);const p=gr(u,t.dtype);p.values.fill(l);for(let e=0;e<r;e++){const r=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];r.push(n),l+=n*o[t]}if(l<0||l>=a/s)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<s;n++)c?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const cI={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:r}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Vc(0,s,i),d=lI(n.bufferSync(s),n.bufferSync(r),i,h,c,l,o,u,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},uI={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:r}=t;u_([a,s,r],"select");const i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,u=fs(s.dtype,r.dtype),h=ne(z(s.shape),u);let d=0;const p=0===i||i>1||1===s.shape.length?1:z(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=c[e];return n.makeTensorInfo(s.shape,u,h)}},hI=Gc,dI=Hc,pI=p_(zn,(e=>e>=0?dI*e:hI*(Math.exp(e)-1))),fI={kernelName:zn,backendName:"cpu",kernelFunc:pI},mI=p_(Mn,(e=>e<0?-1:e>0?1:0)),gI={kernelName:Mn,backendName:"cpu",kernelFunc:mI},bI=p_(Dn,(e=>Math.sin(e))),vI={kernelName:Dn,backendName:"cpu",kernelFunc:bI},_I=p_(On,(e=>Math.sinh(e))),kI={kernelName:On,backendName:"cpu",kernelFunc:_I},yI=Math.log(1.1920928955078125e-7)+2,xI=p_(Bn,(e=>{const t=e>-yI,n=e<yI,a=Math.exp(e);let s;return s=n?a:t?e:Math.log(1+a),s})),wI={kernelName:Bn,backendName:"cpu",kernelFunc:xI},II={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:r,paddings:i}=a;u_([s],"spaceToBatchND");const o=z(r),l=[[0,0]];l.push(...i);for(let e=1+r.length;e<s.shape.length;++e)l.push([0,0]);const c=Ww.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),u=Dc(c.shape,r,o,!1),h=Oc(u.length,r.length,!1),d=Mc(c.shape,r,o,!1),p=q_({inputs:{x:c},backend:n,attrs:{shape:u}}),f=ik({inputs:{x:p},backend:n,attrs:{perm:h}}),m=q_({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function NI(e,t,n,a,s,r,i){const o=t[0],l=r[0],c=new Array(l),u=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(fu(o));return[V(n,0),[0,h],V(s,0),c,u]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(mu(t,n));if(n>=l)throw new Error(gu(t,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];c[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=a;for(let e=0;e<o;++e)u[e]=e;return[t,[o,h],n,c,u]}{const t=f[l-1],r=V(n,t*h),d=V(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)r[i*h+n]=e[t*h+n];d[i]=a[t],u[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];r[t*h+0]=e;for(let e=1;e<h;++e)r[t*h+e]=0;d[t]=i}return[r,[t,h],d,c,u]}}const SI={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:s,denseShape:r,defaultValue:i}=t;if(1!==r.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${r.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values[0],[h,d,p,f,m]=NI(o,a.shape,a.dtype,l,s.dtype,c,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function CI(e,t,n,a,s){const r=z(a),i=t[0],o=s.length,l=[];let c=1,u=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==u)throw new Error(bu(u,e));u=e,l.push(1)}else{if(t<0)throw new Error(vu(e,t));c*=t,l.push(t)}}if(-1!==u){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(r/c);if(c*e!==r)throw new Error(ku(a,l));l[u]=e}if(z(l)!==r)throw new Error(yu(a,l));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=V(n,i*o);for(let t=0;t<i;++t){let n=0;for(let a=0;a<h;++a)n+=e[t*h+a]*d[a];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],l]}const TI={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:s,newShape:r}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(r.dataId).values),[c,u,h]=CI(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(u,a.dtype,c),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}};function EI(e,t,n,a,s,r=!1,i=0){const o=a.length,l=[t[0],e.length/t[0]],c=l[1],u=o>0?s[o-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=u;const d=V(n,h.reduce(((e,t)=>e*t),1));if(0===o)return u>0&&d.fill(i),[d,h];if(u<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=u)throw new Error(Iu(g,u));g>m&&d.fill(i,m*c,g*c);for(let t=p;t<f;++t){const n=a[t];if(n<0||n>=l[0])throw new Error(Nu(t,a[t],l[0]));for(let t=0;t<c;t++)d[g*c+t]+=e[n*c+t]}if(r)for(let e=0;e<c;e++)d[g*c+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<u&&d.fill(i,m*c,u*c),[d,h]}const AI={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${r.shape}`);if(s.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,[c,u]=EI(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(u,a.dtype,c)}},$I={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${r.shape}`);if(s.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,[c,u]=EI(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(u,a.dtype,c)}},RI={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:r,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Vc(0,s,o),p=lI(n.bufferSync(s),n.bufferSync(r),o,d,u,c,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},zI={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:r,axis:i}=a,o=P(i,s.shape)[0],l=pu(s,r,o),c=new Array(s.shape.length).fill(0),u=s.shape.slice();return l.map((e=>{const t=[...u];t[o]=e;const a=Rk({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,a}))}},FI=E_((e=>Math.sqrt(e))),DI=p_(Pn,(e=>Math.sqrt(e))),OI={kernelName:Pn,backendName:"cpu",kernelFunc:DI},MI={kernelName:Yn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,a=t;u_(n,"square");const s=a.data.get(n.dataId).values,r=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];r[e]=t*t}return{dataId:a.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},LI=y_(((e,t)=>{const n=e-t;return n*n})),BI=W_(Xn,LI),PI={kernelName:Xn,backendName:"cpu",kernelFunc:BI},WI=p_(pa,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),UI={kernelName:pa,backendName:"cpu",kernelFunc:WI};function VI(e,t,n,a){const s=gr(e,t.dtype);for(let e=0;e<s.size;e++){const r=s.indexToLoc(e),i=new Array(r.length);for(let e=0;e<i.length;e++)i[e]=r[e]*n[e]+a[e];s.set(t.get(...i),...r)}return s}const GI={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:r,end:i,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a;u_(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:v,end:_,strides:k}=Gr(s.shape,r,i,o,l,c,u,h,d);let y;if(m)y=q_({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||b){E(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=$r(v,_,k),t=Rk({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});y=q_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=VI(p,n.bufferSync(s),k,v);y=n.makeTensorInfo(f,e.dtype,e.values)}return y}};class HI{constructor(e,t,n,a,s,r){this.separator=Ha(e),this.nGramWidths=t,this.leftPad=Ha(n),this.rightPad=Ha(a),this.padWidth=s,this.preserveShort=r}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,s,r){for(let i=0;i<s;++i){const o=this.getPadWidth(r),l=Math.max(0,o-i),c=Math.max(0,o-(s-(i+1))),u=r-(l+c),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<u;++t)d+=e[h+t].length;d+=c*this.rightPad.length,d+=(l+c+u-1)*this.separator.length,n[a+i]=new Uint8Array(d);const p=n[a+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[h+t]),m(this.separator);if(u>0){m(e[h+u-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<a;++s){let a=t[s]>=e;if(a=a&&t[s]<=n,!a)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,r=V("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=s;++e)r[e]=0;return[e,r]}r[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let a=0;this.nGramWidths.forEach((e=>{a+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===a&&(a=1),r[e]=r[e-1]+a}const i=new Array(r[s]);for(let n=0;n<s;++n){const a=t[n];let s=r[n];if(this.nGramWidths.forEach((r=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,r);this.createNGrams(e,a,i,s,l,r),s+=l})),this.preserveShort&&s===r[n]){const r=t[n+1]-t[n];if(0===r)continue;const o=r+2*this.padWidth,l=1;this.createNGrams(e,a,i,s,l,o)}}return[i,r]}}function jI(e,t,n,a,s,r,i,o){return new HI(n,a,s,r,i,o).compute(e,t)}const qI={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:s,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:c}=a,{data:u,dataSplits:h}=t,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[f,m]=jI(d,p,s,r,i,o,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function ZI(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let r=e.indexOf(s);for(;-1!==r;){const t=e.subarray(0,r);n&&0===t.length||a.push(t),r=(e=e.subarray(r+1)).indexOf(s)}return void(n&&0===e.length||a.push(e))}let s=0;for(let r=0;r<e.length+1;r++)if(r===e.length||-1!==t.indexOf(e[r])){const t=e.subarray(s,r);n&&0===t.length||a.push(t),s=r+1}}function KI(e,t,n){const a=e.length,s=[];let r=0,i=0;const o=new Array(a);for(let l=0;l<a;++l){const a=s.length;ZI(e[l],t,n,s);const c=s.length-a;o[l]=c,r+=c,i=Math.max(i,c)}const l=V("int32",2*r),c=new Array(r),u=[a,i];let h=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,c[h]=s[h],++h;return[l,c,u]}const XI={kernelName:ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:s}=a,{input:r,delimiter:i}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values[0],[c,u,h]=KI(o,l,s),d=u.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function YI(e,t){const n=V("int32",e.length);for(let a=0;a<e.length;++a)n[a]=Wa(e[a]).modulo(t).getLowBitsUnsigned();return n}const JI={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:s}=a,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=YI(n.data.get(r.dataId).values,s);return n.makeTensorInfo(r.shape,"int32",i)}},QI=p_(aa,(e=>Math.tan(e))),eN={kernelName:aa,backendName:"cpu",kernelFunc:QI},tN=p_(sa,(e=>Math.tanh(e)));function nN(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const a=gr(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const r=e.locToIndex(s);a.values[t]=e.values[r]}return a}const aN=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function sN(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){const s=a-n+1,r=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(r-s/2);sN(e,t,Math.max(n,Math.floor(t-r*o/s+l)),Math.min(a,Math.floor(t+(s-r)*o/s+l)))}const s=e[t];let r=n,i=a;for(T(e,n,t),aN(e[a],s)>0&&T(e,n,a);r<i;){for(T(e,r,i),r++,i--;aN(e[r],s)<0;)r+=1;for(;aN(e[i],s)>0;)i-=1}0===aN(e[n],s)?T(e,n,i):(i+=1,T(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function rN(e,t,n,a,s){const r=t[t.length-1],[i,o]=[e.length/r,r],l=U(n,i*a),c=U("int32",i*a);for(let t=0;t<i;t++){const n=t*o,r=e.subarray(n,n+o);let i=new Array(r.length);r.forEach(((e,t)=>i[t]={value:e,index:t})),a<i.length&&(sN(i,a),i=i.slice(0,a)),s&&i.sort(aN);const u=t*a,h=l.subarray(u,u+a),d=c.subarray(u,u+a);for(let e=0;e<a;e++)h[e]=i[e].value,d[e]=i[e].index}const u=t.slice();return u[u.length-1]=a,[gr(u,n,l),gr(u,"int32",c)]}const iN={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:r}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:c}=n,[u,h,d,p]=s.shape,[f,m]=null!=c?c:[h,d],g=[u,f,m,p],b=J(s.shape),v=b[0],_=b[1],k=b[2],y=U(s.dtype,z(g));y.fill(l);const x=a.data.get(s.dataId).values,w=a.data.get(r.dataId).values;for(let e=0;e<u;++e){const t=1===r.shape[0]?w:w.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let a=0;a<m;++a)for(let s=0;s<p;++s){let r;const c=t[6]*a+t[7]*n+1;if(0===c)continue;const u=(t[0]*a+t[1]*n+t[2])/c,p=(t[3]*a+t[4]*n+t[5])/c,f=oN(u,d,o),m=oN(p,h,o);switch(i){case"nearest":r=cN(x,h,d,v,_,k,e,m,f,s,l);break;case"bilinear":r=uN(x,h,d,v,_,k,e,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}y[e*v+n*_+a*k+s]=r}return a.makeTensorInfo(g,s.dtype,y)}return{dataId:a.write(y,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function oN(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return S(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return S(0,n,t-1)}(e,t);case"nearest":return function(e,t){return S(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function lN(e,t,n,a,s,r,i,o,l,c,u){return 0<=o&&o<t&&0<=l&&l<n?e[i*a+o*s+l*r+c]:u}function cN(e,t,n,a,s,r,i,o,l,c,u){return lN(e,t,n,a,s,r,i,Math.round(o),Math.round(l),c,u)}function uN(e,t,n,a,s,r,i,o,l,c,u){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*lN(e,t,n,a,s,r,i,h,d,c,u)+(l-d)*lN(e,t,n,a,s,r,i,h,f,c,u))+(o-h)*((f-l)*lN(e,t,n,a,s,r,i,p,d,c,u)+(l-d)*lN(e,t,n,a,s,r,i,p,f,c,u))}function hN(e,t,n,a){const s=P(t,n)[0],r=[1,n[0],1];for(let e=0;e<s;e++)r[0]*=n[e];r[1]=n[s];for(let e=s+1;e<n.length;e++)r[2]*=n[e];const i={},o=new Int32Array(n[s]),l=new ts(r,a,e),c=[],u=1===r[0]&&1===r[2];for(let t=0;t<n[s];t++){let n;if(u)n=e[t].toString();else{const e=[];for(let n=0;n<r[0];n++)for(let a=0;a<r[2];a++)e.push(l.get(n,t,a));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,c.push(t)}}const h=r.slice();h[1]=Object.keys(i).length;const d=new ts(h,a);c.forEach(((e,t)=>{for(let n=0;n<r[0];n++)for(let a=0;a<r[2];a++)d.set(l.get(n,e,a),n,t,a)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const dN={kernelName:ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:r}=t,{numSegments:i}=a;u_(s,"unsortedSegmentSum");const o=[],l=[],c=s.shape.length-r.shape.length;let u=r;for(let e=0;e<c;++e){const t=Uy({inputs:{input:u},backend:n,attrs:{dim:e+1}});u=t,l.push(t)}for(let e=0;e<i;++e){const t=Ua(e,"int32"),a=n.makeTensorInfo([],"int32",t),r=Ey({inputs:{a,b:u},backend:n}),i=B_({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),c=xy({inputs:{a:i,b:s},backend:n}),h=Iy({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(a),l.push(r),l.push(i),l.push(c),l.push(h)}const h=Bw({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},pN=[Y_,Q_,tk,ak,j_,sk,lk,ck,uk,hk,pk,mk,bk,kk,xk,Sk,Ck,Tk,Ek,X_,Ak,Fk,Mk,Lk,P_,Wk,Vk,D_,Gk,Kk,Yk,Jk,Qk,ey,ty,ny,sy,iy,oy,ly,cy,uy,hy,py,fy,my,gy,by,vy,_y,Sy,g_,Cy,Ay,Ly,Wy,Vy,jy,ax,rx,ix,cx,dx,px,fx,gx,vx,yx,Ix,v_,Nx,qk,Cx,Ex,$x,k_,Fx,Mx,Bx,Ux,Gx,qx,Kx,Jx,Qx,ew,aw,iw,ow,lw,cw,uw,hw,dw,pw,gw,bw,kw,ww,wy,Nw,Cw,Ew,$w,Fw,Dw,Lw,Pw,Ww,Gw,I_,jw,Zw,L_,Ky,Xw,S_,T_,Z_,Yw,Jw,Qw,eI,tI,nI,sI,oI,cI,uI,fI,R_,gI,vI,kI,zk,xw,wI,II,SI,TI,AI,$I,RI,zI,OI,MI,PI,UI,GI,qI,XI,JI,Qy,Ny,eN,{kernelName:sa,backendName:"cpu",kernelFunc:tN},{kernelName:ra,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:r}=a;u_(s,"tile");const i=nN(n.bufferSync(s),r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:r,sorted:i}=a;u_(s,"topk");const o=n.data.get(s.dataId).values,[l,c]=rN(o,s.shape,s.dtype,r,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}},iN,ok,{kernelName:ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:s}=n,{x:r}=t;u_(r,"unique");const i=a.data.get(r.dataId).values,{outputValues:o,outputShape:l,indices:c}=hN(i,s,r.shape,r.dtype);return[a.makeTensorInfo(l,r.dtype,o),a.makeTensorInfo([c.length],"int32",c)]}},{kernelName:ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:s}=t;let{axis:r}=a;r<0&&(r+=s.shape.length);const i=s.shape.length,o=s.shape[r],l=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==r&&(l[c++]=s.shape[e]);const u=new Array(i).fill(0),h=s.shape.slice();h[r]=1;const d=new Array(o);for(let e=0;e<d.length;e++){u[r]=e;const t=Rk({inputs:{x:s},backend:n,attrs:{begin:u,size:h}});d[e]=q_({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},dN,Mw];for(const e of pN)Na(e);const fN={},mN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function gN(e,t){if(!(e in fN)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete fN[e]}),!1),1===e?n.getContext("webgl",mN)||n.getContext("experimental-webgl",mN):n.getContext("webgl2",mN)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;fN[e]=n}const n=fN[e];return null==n||n.isContextLost()?(delete fN[e],gN(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),fN[e])}var bN,vN,_N;function kN(e,t){return[t,e]}function yN(e){const t=z(e);return O(Math.ceil(t/4))}function xN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function wN(e,t){const n=e;let a,s,r,i,o,l,c,u,h,d;return 2===ue().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,r=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(a=e.RGBA,s=e.RGBA,r=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function IN(e,t){const n=t();return ue().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function NN(e){return!!(ue().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function SN(e,t){return DN(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(bN||(bN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(vN||(vN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(_N||(_N={}));const CN=/ERROR: [0-9]+:([0-9]+):/g;function TN(e,t){const n=CN.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],s=e.split("\n"),r=s.length.toString().length+2,i=s.map(((e,t)=>M((t+1).toString(),r)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,a-1),c=i.slice(a-1,a),u=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${M(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function EN(e,t){if(IN(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function AN(e,t,n,a,s,r,i){const o=e.getAttribLocation(t,n);return-1!==o&&(IN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),IN(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,r,i))),IN(e,(()=>e.enableVertexAttribArray(o))),!0)}function $N(e,t,n,a){IN(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),IN(e,(()=>e.activeTexture(e.TEXTURE0+n))),IN(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),IN(e,(()=>e.uniform1i(n,a)))}function RN(e,t,n){IN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),IN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function zN(e,t){IN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),IN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function FN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function DN(e,t,n){const a=IN(e,(()=>t()));if(null==a)throw new Error(n);return a}function ON(e,t=2){return z(e.slice(0,e.length-t))}function MN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function LN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ON(e),...MN(e)]),t}function BN(e){return e%2==0}function PN(e,t){if(F(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],a=t.slice(-1)[0];if(n===a)return!0;if(BN(n)&&BN(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&BN(e[0])&&BN(t[0])}let WN,UN;function VN(e,t){return null!=e.getExtension(t)}function GN(e){try{if(null!=gN(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function HN(e){const t=wN(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),s}function jN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&E("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const qN=ue();function ZN(){let e,t,n,a,s,r,i,o,l,c;return 2===ue().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",s="texture",r="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",s="texture2D",r="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:s,output:r,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:c}}function KN(e,t,n="index"){const a=J(t);return a.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function XN(e,t,n="index"){const a=J(t);return a.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function YN(e){const t=J(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}qN.registerFlag("HAS_WEBGL",(()=>qN.getNumber("WEBGL_VERSION")>0)),qN.registerFlag("WEBGL_VERSION",(()=>GN(2)?2:GN(1)?1:0)),qN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),qN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===qN.get("WEBGL_VERSION"))),qN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),qN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),qN.registerFlag("WEBGL_PACK",(()=>qN.getBool("HAS_WEBGL"))),qN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_PACK_CLIP",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_PACK_REDUCE",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_CONV_IM2COL",(()=>qN.getBool("WEBGL_PACK"))),qN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==WN){const t=gN(e);WN=t.getParameter(t.MAX_TEXTURE_SIZE)}return WN}(qN.getNumber("WEBGL_VERSION")))),qN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==UN){const t=gN(e);UN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,UN)}(qN.getNumber("WEBGL_VERSION")))),qN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=qN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=gN(e);return t=VN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:VN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),qN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>qN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ss())),qN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=gN(e);if(1===e){if(!VN(t,"OES_texture_float"))return!1}else if(!VN(t,"EXT_color_buffer_float"))return!1;return HN(t)}(qN.getNumber("WEBGL_VERSION")))),qN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!qN.getBool("WEBGL_FORCE_F16_TEXTURES")&&qN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),qN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=gN(e);if(1!==e){if(VN(t,"EXT_color_buffer_float"))return HN(t);const e="EXT_color_buffer_half_float";if(VN(t,e)){const n=t.getExtension(e);return function(e,t){const n=wN(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),r}(t,n)}return!1}return!!VN(t,"OES_texture_float")&&!!VN(t,"WEBGL_color_buffer_float")&&HN(t)}(qN.getNumber("WEBGL_VERSION")))),qN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=qN.getNumber("WEBGL_VERSION"))&&null!=gN(e).fenceSync;var e})),qN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>qN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),qN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),qN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ss()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),qN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),qN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),qN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),qN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const JN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:QN}=s;function eS(e,t,n){const a=[];if(e.forEach((e=>{const t=z(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=uS(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=a.join("\n"),r=e.map((e=>function(e,t,n=!1,a){let s="";s+=n?nS(e,a):tS(e,a);const r=e.shapeInfo.logicalShape,i=t.logicalShape;return r.length<=i.length&&(s+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",r=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=QN(e.shapeInfo.logicalShape,t.logicalShape),l=cS(i),c=i-r;let u;const h=["x","y","z","w","u","v"];u=0===r?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+c]} = 0;`)).join("\n");let d="";d=i<2&&r>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+c]}`)).join(", ");let p="return outputValue;";const f=1===z(e.shapeInfo.logicalShape),m=1===z(t.logicalShape);if(1!==r||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=r-2,t=r-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${u}\n      vec4 outputValue = get${a}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",r=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&F(i,r))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=cS(l),u=QN(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${a}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=ZN(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let c,u,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${aS}\n    ${sS}\n    ${rS}\n  `}(o);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(F(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),r=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),r=s*Math.ceil(e[e.length-2]/2);let i=r,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),u=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return F(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${XN(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const a=KN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${XN(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const a=KN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=KN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=KN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),u=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=iS),[h,l,u,s,c,r,n.userCode].join("\n")}function tS(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[s,r]=e.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=oS(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${lS(e)}\n      }\n    `;const s=e.shapeInfo.texShape,r=s[0],i=s[1];if(1===i&&1===r)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=oS(n);return 1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${r}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===r?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape;if(null!=r&&F(n,r)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=W(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${tS(hS(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${dS(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${lS(e)}\n      }\n    `;const c=r[0],u=r[1],h=oS(a);return 1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${c}, ${u}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=W(n),c=o;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${tS(hS(e,c),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${dS(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${i}, 1)));\n        ${lS(e)}\n      }\n    `;const u=e.shapeInfo.texShape,h=u[0],d=u[1],p=e.shapeInfo.flatOffset;if(d===r&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const f=oS(a);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * ${r} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=n[3],i=n[2]*r,o=n[1]*i,{newShape:l,keptDims:c}=W(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${tS(hS(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${dS(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${r}, 1)));\n        ${lS(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(p===o&&null==u)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(p===r&&null==u)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const b=oS(a);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${b});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],r=t[3]*s,i=t[2]*r,o=t[1]*i,{newShape:l,keptDims:c}=W(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${tS(hS(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${dS(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${r}, ${s})) +\n          depth3;\n        ${lS(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==u)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${r}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==u)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${r} +\n          depth2 * ${s} + depth3 + ${oS(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:r}=W(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${tS(hS(e,s))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${dS(t,r)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${c}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${lS(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${c} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${oS(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function nS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${ZN().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,r=ZN();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${r.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,i=r[0],o=r[1],l=ZN();if(null!=r&&F(n,r))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===n[0]){const a=[1,2],r=["b","row","col"];return`\n        ${nS(hS(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${dS(r,a)});\n        }\n      `}const o=ZN();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;const l=i[0],c=i[1],u=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${c}, ${u*Math.ceil(n[1]/2)}, ${u}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=ZN();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const r=e.shapeInfo.logicalShape,i=r.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[i-1]/2);let d=h*Math.ceil(r[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=r[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${a}(${p}) {\n      int index = ${f};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const aS="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sS="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rS="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iS="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function oS(e){return`offset${e}`}function lS(e){const t=e.name,n=z(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function cS(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function uS(e,t,n){const{newShape:a,keptDims:s}=W(t),r=t.length,i=e&&3===r&&1===t[0],o=i?t.slice(1):a,l=!e&&r>1&&!F(t,n)&&a.length<r||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function hS(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function dS(e,t){return t.map((t=>e[t])).join(", ")}function pS(e,t,n){const a={},s={},r={},i=[];let o,l,c,u=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===ue().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];a[o]=e.getUniformLocation(n,o,d),a[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,d),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,d),r[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),c=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,a)=>{i[a]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:a,customUniformLocations:i,infLoc:u,nanLoc:h,inShapesLocations:s,inTexShapesLocations:r,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:l}}function fS(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,s=t[n],r=s.shape;if(!F(a,r))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${r} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!F(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function mS(e){return ue().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class gS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=bN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ZN();this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?XN(["r","c","d"],e):KN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class bS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=bN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ZN();this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?XN(["r","c","d"],e):KN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class vS{constructor(e){this.variableNames=["A"],this.outTexUsage=vN.DOWNLOAD;const t=ZN();this.outputShape=e,this.userCode=`\n      ${JN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class _S{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=vN.DOWNLOAD;const t=ZN();this.outputShape=e,this.userCode=`\n      ${JN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class kS{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ZN();this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class yS{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ZN();this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length);let a="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const r=2*t+s;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YN(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${s};\n        }\n    `}}function xS(e,t,n,a,s,r){!function(e,t){const n=ue().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return DN(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return IN(e,(()=>e.bindTexture(o,i))),IN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),IN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),IN(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),IN(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ue().getNumber("WEBGL_VERSION")?IN(e,(()=>e.texImage2D(o,0,a,t,n,0,s,r,null))):IN(e,(()=>e.texStorage2D(o,1,a,t,n))),IN(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function wS(e){return e.internalFormatFloat}function IS(e){return e.internalFormatHalfFloat}function NS(e){return e.downloadTextureFormat}function SS(e){return e.internalFormatPackedFloat}function CS(e){return e.internalFormatPackedHalfFloat}class TS{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=ue().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){fN[e]=t}(t,e)):this.gl=gN(t);let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ue().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=SN(this.gl,e),VN(this.gl,t))this.textureHalfFloatExtension=SN(this.gl,t);else if(ue().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),VN(this.gl,a))this.colorBufferHalfFloatExtension=SN(this.gl,a);else if(ue().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",VN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!VN(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=function(e){return function(e,t){const n=DN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return IN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),IN(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=DN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return IN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),IN(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return DN(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=wN(this.gl,this.textureHalfFloatExtension)}get debug(){return ue().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;IN(e,(()=>e.finish())),IN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),IN(e,(()=>e.deleteFramebuffer(this.framebuffer))),IN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),IN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),IN(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=kN(t,n);return xS(e,s,r,wS(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=kN(t,n);return xS(e,s,r,IS(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=kN(t,n);return xS(e,s,r,NS(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){IN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ue().getNumber("WEBGL_VERSION")?IN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):IN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ue().getNumber("WEBGL_VERSION")?IN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):IN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),IN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,s,r){let i,o,l;IN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=r.internalFormatPackedFloat),i.set(s),2===ue().getNumber("WEBGL_VERSION")?IN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,i))):IN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i))),IN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=xN(t,n);return xS(e,s,r,CS(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=xN(t,n);return xS(e,s,r,SS(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(zN(this.gl,this.framebuffer),this.outputTexture=null),IN(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[s,r]=kN(t,n),i=new Uint8Array(t*n*4);return IN(e,(()=>e.readPixels(0,0,s,r,a.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,s,r){return function(e,t,n,a,s,r,i,o){const l=e,c=new Float32Array(function(e,t){const[n,a]=xN(e,t);return n*a*4}(r,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}(this.gl,e,0,0,0,s,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,s=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,s),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const s=e.createBuffer();IN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const r=16*t*n;return IN(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),IN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),IN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ue().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,s=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(s,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=s}else ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return IN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=ZN();return function(e,t){const n=DN(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(IN(e,(()=>e.shaderSource(n,t))),IN(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return DN(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return IN(t,(()=>t.attachShader(n,this.vertexShader))),IN(t,(()=>t.attachShader(n,e))),function(e,t){if(IN(e,(()=>e.linkProgram(t))),!ue().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&EN(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return IN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),AN(e,t,"clipSpacePos",n,3,20,0)&&AN(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&IN(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&EN(this.gl,this.program),IN(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return DN(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),IN(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),$N(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,s]=xN(t,n);this.setOutputMatrixTextureDriver(e,a,s)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&EN(this.gl,this.program),FN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),IN(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),IN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=SN(this.gl,2===ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await L((()=>this.disposed||this.isQueryAvailable(e,ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||L((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),RN(this.gl,e,this.framebuffer),this.debug&&FN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(RN(this.gl,this.outputTexture,this.framebuffer),this.debug&&FN(this.gl)):zN(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;RN(a,e,this.framebuffer),this.debug&&FN(a),this.outputTexture=e,IN(a,(()=>a.viewport(0,0,t,n))),IN(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),IN(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:ES,bincountImpl:AS,bincountReduceImpl:$S,ceilImpl:RS,concatImpl:zS,equalImpl:FS,expImpl:DS,expm1Impl:OS,floorImpl:MS,gatherNdImpl:LS,gatherV2Impl:BS,greaterImpl:PS,greaterEqualImpl:WS,lessImpl:US,lessEqualImpl:VS,linSpaceImpl:GS,logImpl:HS,maxImpl:jS,maximumImpl:qS,minimumImpl:ZS,multiplyImpl:KS,negImpl:XS,notEqualImpl:YS,prodImpl:JS,rangeImpl:QS,rsqrtImpl:eC,sigmoidImpl:tC,simpleAbsImpl:nC,sliceImpl:aC,sparseFillEmptyRowsImpl:sC,sparseReshapeImpl:rC,sparseSegmentReductionImpl:iC,sqrtImpl:oC,stridedSliceImpl:lC,stringNGramsImpl:cC,stringSplitImpl:uC,stringToHashBucketFastImpl:hC,subImpl:dC,tileImpl:pC,topKImpl:fC,transposeImpl:mC,uniqueImpl:gC}=r;function bC(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function vC(e,t){return 1===t?[e]:bC(e,t)}class _C{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=mS(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=vC("rc",this.rank),t=cS(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let s=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class kC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var a,s;this.userCode=`\n      ${a=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const a=function(e,t){const n=e.length,a=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=a[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${a[e+1]})`;return s}(e.map(((e,t)=>t)),t);return a.map(((t,s)=>`int ${e[s]} = ${n} / ${a[s]}; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a[s]}`:`index -= ${e[s]} * ${a[s]}`};`)).join("")}(["r","c","d"],"inputShape"):KN(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class yC{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const a=wC(t,n),s=IC(e,a,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const r=xC(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return a===_N.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===_N.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===_N.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===_N.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===_N.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const s=wC(n,a),r=IC(t,s,a);r in this.freeTextures||(this.freeTextures[r]=[]);const i=xC(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=ue().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[r].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[r],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function xC(e,t,n,a,s){const r=function(e,t){switch(e){case _N.PACKED_2X2_FLOAT32:return SS(t);case _N.PACKED_2X2_FLOAT16:return CS(t);case _N.UNPACKED_FLOAT32:return wS(t);case _N.UNPACKED_FLOAT16:return IS(t);case _N.PACKED_4X1_UNSIGNED_BYTE:return NS(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);let i;if(s){const[t,n]=xN(e[0],e[1]);i=t*n}else{const[t,n]=kN(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,r);return i*o}function wC(e,t){if(e===vN.UPLOAD)return _N.PACKED_2X2_FLOAT32;if(e===vN.RENDER||null==e)return function(e){return ue().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?_N.PACKED_2X2_FLOAT32:_N.UNPACKED_FLOAT32:e?_N.PACKED_2X2_FLOAT16:_N.UNPACKED_FLOAT16}(t);if(e===vN.DOWNLOAD||e===vN.PIXELS)return _N.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function IC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class NC{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const SC="return abs(x);",CC="return x;";class TC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class EC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length);const t=e.length,n=vC("rc",t),a=cS(t),s=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),r=n.slice(-2),i=t<=1?"rc":`vec2(${r.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const AC=$u,$C={},RC=ue().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class zC extends w{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ue().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof TS)t=e;else{const n=gN(ue().getNumber("WEBGL_VERSION"),e);t=new TS(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=gN(ue().getNumber("WEBGL_VERSION"));t=new TS(e),this.binaryCache=((n=ue().getNumber("WEBGL_VERSION"))in $C||($C[n]={}),$C[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new yC(this.gpgpu),this.numMBBeforeWarning=null==ue().global.screen?1024:ue().global.screen.height*ue().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new x(this,Kr())}nextDataId(){return zC.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((ue().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ue().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:vN.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,s){if(ue().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:vN.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:s,slice:r,shape:i,isPacked:o}=t;if(null!=r){let t;t=o?new TC(i,CC):new NC(i,CC);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let c,u;return l&&(c=Ga()),u="complex64"===a?Jc(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Ga()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:s,dtype:r,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new TC(a,CC):new NC(a,CC);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(ue().getBool("DEBUG")&&!ue().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ue().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,u=null;if("complex64"!==r&&ue().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(t.texture.texture,...yN(a))}if(this.pendingRead.set(e,[]),"complex64"!==r&&await this.gpgpu.createAndWaitForFence(),"complex64"===r){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);c=Jc(e[0],e[1])}else if(null==u)c=this.getValuesFromTexture(e);else{const e=z(a);c=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=u){const e=this.gpgpu.gl;IN(e,(()=>e.deleteBuffer(u)))}const h=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Kr().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:a,shape:s,slice:r,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=r){let n;n=o?new TC(s,CC):new NC(s,CC);const a=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),r=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),r}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),u=Kr().makeTensorFromDataId(c.dataId,c.shape,c.dtype),h=this.texData.get(c.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ja(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return gr(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!NN(n)){if(ue().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),s=z(t);if(ue().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...yN(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),r}const r=ue().getBool("WEBGL_PACK")&&!0===a,i=r?LN(t):t,o=r?new _S(i):new vS(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=R(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),r=R(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:r[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ga(),endMs:null}}endTimer(e){return ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ga(),e)}async getQueryTime(e){if(ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:s,isPacked:r,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,s,r)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=RC){return ue().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&z(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){va("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return AC(e.shape,t)}packedUnaryOp(e,t,n){const a=new TC(e.shape,t),s=this.compileAndRun(a,[e],n);return Kr().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=nC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ue().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,SC,e.dtype);const t=new NC(e.shape,SC),n=this.compileAndRun(t,[e]);return Kr().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&q(n[0])){const s=n.map((e=>Ha(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:a}=this.makeTensorInfo(e,t,n);return Kr().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){const t=new EC(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new _C(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[ON(e.shape),...MN(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},s=[ON(t),...MN(t)],r=new kC(s,n),i=[n],o=this.runWebGLProgram(r,[a],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:s,dtype:r}=n;null!=t&&E(z(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=LN(s);let o;o=a?new bS(i):new gS(i);const l=[null!=t?t:yN(i)];return{dtype:r,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:r,dataId:e}],r,l,!0,t).dataId}}runWebGLProgram(e,t,n,a,s=!1,r){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===bN.DENSE){const t=null!=r?r:yN(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===z(i.shape))return o.values=U(i.dtype,0),i;const l=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&z(t.shape)<=ue().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!PN(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const r=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=uS(e.packedInputs,t.shape,r);let c="",u="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=J(o);h=`${e[0]===r[1]}_${e[e.length-1]===r[1]}`}}else u=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&F(t.shape,r),f=1===z(t.shape),m=Sr(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&F(r,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${r[0]>1}_${r[1]>1}`;a+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${p}_${c}_${u}_${h}_${b}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let r=e.constructor.name;return r+="_"+a+"_"+s+`${ue().getNumber("WEBGL_VERSION")}`,r}(e,c,u),d=this.getAndSaveBinary(h,(()=>function(e,t,n,a){const s=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),r=s.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=eS(s,i,t),l=function(e,t){const n=DN(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(IN(e,(()=>e.shaderSource(n,t))),IN(e,(()=>e.compileShader(n))),ue().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw TN(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),c=e.createProgram(l);return ue().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:c,inShapeInfos:r,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:c,inShapeInfos:r,outShapeInfo:i},pS(e,t,c))}(this.gpgpu,e,c,u))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ue().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,s){t.program.enableShapeUniforms||(fS(t.inShapeInfos,n),fS([t.outShapeInfo],[a]));const r=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):e.setOutputMatrixTexture(r.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===ue().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,a)=>{const s=t.program.variableNames[a],r=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`],o=t.inShapesLocations[`${s}Shape`],l=t.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:a}=uS(t.program.packedInputs,n.shape,n.texData.texShape);switch(a.length){case 1:e.gl.uniform1iv(o,new Int32Array(a));break;case 2:e.gl.uniform2iv(o,new Int32Array(a));break;case 3:e.gl.uniform3iv(o,new Int32Array(a));break;case 4:e.gl.uniform4iv(o,new Int32Array(a))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=r)if(n.isUniform)if(z(n.shape)<2)e.gl.uniform1f(r,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,r,a)}));const o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=J(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,a)=>{const r=t.customUniformLocations[a],i=s[a];if("float"===n.type)e.gl.uniform1fv(r,i);else if("vec2"===n.type)e.gl.uniform2fv(r,i);else if("vec3"===n.type)e.gl.uniform3fv(r,i);else if("vec4"===n.type)e.gl.uniform4fv(r,i);else if("int"===n.type)e.gl.uniform1iv(r,i);else if("ivec2"===n.type)e.gl.uniform2iv(r,i);else if("ivec3"===n.type)e.gl.uniform3iv(r,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,i)}})),e.executeProgram()}(this.gpgpu,d,c,u,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=ue().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ga();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ue().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ue().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Yr((()=>{if(!ue().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ue().getBool("DEBUG");ue().set("DEBUG",!1);const t=this.abs(ni(1e-8)).dataSync()[0];if(ue().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:s,texture:r,usage:i,isPacked:o}=t;if(null!=r)return;const l=null!=this.activeTimers;let c;l&&(c=Ga());let u=t.texShape;if(null==u&&(u=function(e,t=!1){let n=ue().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?C(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=W(e);e=t.newShape}let a=z(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=ON(e);let n=2,s=2;return e.length&&([n,s]=MN(e)),a=t*(n/2)*(s/2),O(a).map((e=>2*e))}return O(a)}(n,o),t.texShape=u),null!=s){const e=LN(n);let r,i=u[1],h=u[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,h]=xN(u[0],u[1])),r=o?new yS(e,d):new kS(e,d);const p=d?[h,i]:u,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?vN.PIXELS:vN.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],b=!0,v=this.runWebGLProgram(r,[f],a,g,b),_=this.texData.get(v.dataId);t.texShape=_.texShape,t.isPacked=_.isPacked,t.usage=_.usage,ue().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=_.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Ga()-c)}else{const e=this.acquireTexture(u,i,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*j(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ec(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw TN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:a,nanLoc:s,inShapesLocations:r,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:c}=pS(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=s,e.inShapesLocations=r,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=c}}}zC.nextDataId=0,Cs()&&ei("webgl",(()=>new zC),2);class FC{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Tr(t,n),this.enableShapeUniforms=mS(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class DC{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Tr(t,n);const s=this.outputShape.length;this.enableShapeUniforms=mS(s);let r="";if(a)if(0===s||1===z(this.outputShape))r="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(r=`\n          ${cS(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?r+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":r+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=vC("coords",s);this.enableShapeUniforms?r+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:r+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${r}\n\n        setOutput(result);\n      }\n    `}}function OC(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const MC={kernelName:Tt,backendName:"webgl",kernelFunc:OC};function LC(e){const{inputs:t,backend:n}=e,{real:a,imag:s}=t,r=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(r.dataId),o=OC({inputs:{x:a},backend:n}),l=OC({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},r}const BC={kernelName:Pe,backendName:"webgl",kernelFunc:LC},PC="return (a < 0.) ? b * a : a;",WC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",UC={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:r}=a,i=n.makeTensorInfo([],"float32",Ua(r,"float32")),o=ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DC(WC,s.shape,i.shape):new FC(PC,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},VC="return (a < 0.) ? b * a : a;",GC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",HC={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t,r=ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DC(GC,a.shape,s.shape):new FC(VC,a.shape,s.shape);return n.runWebGLProgram(r,[a,s],"float32")}};function jC({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:s,backend:r})=>{const{x:i}=s,o=r,l=a||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let c;return c=ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new TC(i.shape,t):new NC(i.shape,e),o.runWebGLProgram(c,[i],l)}}function qC({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:r}){return({inputs:i,backend:o})=>{const{a:l,b:c}=i,u=o;if(a&&"complex64"===l.dtype){const t=u.texData.get(l.dataId),n=u.texData.get(c.dataId),[a,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},r={dataId:a.dataId,dtype:a.dtype,shape:c.shape},i=new FC(e,l.shape,c.shape);return u.runWebGLProgram(i,[s,r],fs(n.dtype,a.dtype))})),r=LC({inputs:{real:a,imag:s},backend:u});return u.disposeIntermediateTensorInfo(a),u.disposeIntermediateTensorInfo(s),r}const h=r||fs(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||u.shouldExecuteOnCPU([l,c]))&&null!=s){const e=u.texData.get(l.dataId).values,t=u.texData.get(c.dataId).values,n="string"===l.dtype?Eu(e):e,a="string"===l.dtype?Eu(t):t,[r,i]=s(l.shape,c.shape,n,a,h),o=u.makeTensorInfo(i,h);return u.texData.get(o.dataId).values=r,o}let d;return d=ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new DC(t,l.shape,c.shape,n):new FC(e,l.shape,c.shape),u.runWebGLProgram(d,[l,c],h)}}function ZC(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?GC:VC;if("leakyrelu"===e)return t?WC:PC;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class KC{constructor(e,t,n,a=!1,s=!1,r=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=mS(this.outputShape.length);const c=a?e[1]:e[2],u=Math.ceil(c/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let v="rc.x",_="rc.x";e[0]<t[0]?v=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(_=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          int batchA = ${v};\n          int batchB = ${_};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class XC{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Tr(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const YC="return a * b;";function JC(e){const{inputs:t,backend:n}=e,{a,b:s}=t,r=fs(a.dtype,s.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),r=new XC("return areal * breal - aimag * bimag;",a.shape,s.shape),i=new XC("return areal * bimag + aimag * breal;",a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(r,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),u=LC({inputs:{real:l,imag:c},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),u}if(n.shouldExecuteOnCPU([a,s])){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[i,o]=KS(a.shape,s.shape,e.values,t.values,r),l=n.makeTensorInfo(o,r);return n.texData.get(l.dataId).values=i,l}let i;return i=ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DC(YC,a.shape,s.shape):new FC(YC,a.shape,s.shape),n.runWebGLProgram(i,[a,s],r)}const QC={kernelName:sn,backendName:"webgl",kernelFunc:JC};function eT(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:r}=a,i=n,o=z(s.shape),l=B(r,o),c=z(l);E(o===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const u=i.texData.get(s.dataId);return!u.isPacked||PN(s.shape,l)||null!==u.texture&&PN(u.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const a=[ON(e.shape),...MN(e.shape)],s={dtype:e.dtype,shape:a,dataId:e.dataId},r=[ON(t),...MN(t)],i=new kC(r,a),o=[a],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const tT={kernelName:xn,backendName:"webgl",kernelFunc:eT};class nT{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:r}=e;this.outputShape=[a,r];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${D(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class aT{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:r}=e;this.outputShape=[a,r];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const c=4*Math.floor(n/4),u=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===u}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===u}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===u}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function sT(e,t,n,a){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=zc(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let r=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:c}=s[i];let u,h;u="mean"===n?0===i?new nT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c},o):new nT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c}):new aT({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:c},n),h=r,r=a.runWebGLProgram(u,[r],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return r}class rT{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const a=cS(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class iT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=cS(this.rank),s=bC("rc",this.rank),r=new Array(this.rank);for(let e=0;e<t.length;e++)r[t[e]]=s[e];const i=`vec2(${r.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${r.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function oT(e,t,n){const a=ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iT(e.shape,t):new rT(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function lT(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;return function(e,t,n,a){const s=t,r=e.shape.length,i=P(s,e.shape);let o=i;const l=Io(o,r),c=null!=l;let u=e;c&&(u=oT(e,l,a),o=So(o.length,r)),wo("sum",o,r);const[h,d]=yo(u.shape,o);let p=h;n&&(p=xo(h,i));const f=z(d),m=eT({inputs:{x:u},attrs:{shape:[z(e.shape)/f,f]},backend:a}),g=sT(m,ms(e.dtype),"sum",a),b=eT({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),c&&a.disposeIntermediateTensorInfo(u),b}(s,r,i,n)}const cT={kernelName:Wn,backendName:"webgl",kernelFunc:lT};function uT(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{perm:r}=a,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[r[e]];let c;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=mC(e,s.shape,s.dtype,r,l);c=i.makeTensorInfo(l,s.dtype),i.texData.get(c.dataId).values=t}else c=oT(s,r,i);return c}const hT={kernelName:la,backendName:"webgl",kernelFunc:uT};function dT({a:e,b:t,transposeA:n,transposeB:a,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const c=e.shape.length,u=t.shape.length,h=n?e.shape[c-2]:e.shape[c-1],d=a?t.shape[u-1]:t.shape[u-2],p=n?e.shape[c-1]:e.shape[c-2],f=a?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=z(m),v=z(g),_=Tr(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);E(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const k=n?[b,h,p]:[b,p,h],y=a?[v,f,d]:[v,d,f],x=eT({inputs:{x:e},backend:s,attrs:{shape:k}}),w=eT({inputs:{x:t},backend:s,attrs:{shape:y}}),I=[x,w],N=Math.max(b,v),S=n?x.shape[1]:x.shape[2],C=null!=r,T=null!=i,A="leakyrelu"===l,$=null!=l?ZC(l,!0):null;let R;if((1===p||1===f)&&S>1e3&&!1===(C||T||A||null!=$)){let e=x,t=w;n&&(e=uT({inputs:{x},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),a&&(t=uT({inputs:{x:w},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const r=1===f;let i=e;1!==f&&(i=eT({inputs:{x:e},backend:s,attrs:{shape:[N,S,1]}}),I.push(i));const o=1===f?2:1;let l=t;r&&(l=eT({inputs:{x:t},backend:s,attrs:{shape:[N,1,S]}}),I.push(l));const c=JC({inputs:{a:i,b:l},backend:s});R=lT({inputs:{x:c},backend:s,attrs:{axis:o,keepDims:!0}}),I.push(c)}else{const l=fs(e.dtype,t.dtype),c=new KC(k,y,[N,p,f],n,a,C,$,T,A),u=[x,w];if(null!=r&&u.push(r),T&&u.push(i),A){const e=s.makeTensorInfo([],"float32",Ua(o,"float32"));u.push(e),I.push(e)}R=s.runWebGLProgram(c,u,l)}const F=eT({inputs:{x:R},backend:s,attrs:{shape:_}});I.push(R);for(const e of I)s.disposeIntermediateTensorInfo(e);return F}const pT={kernelName:ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:r,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=a;return dT({a:s,b:r,transposeA:l,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:u})}},fT="return abs(x);",mT={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=nC(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let s;return s=ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new TC(a.shape,fT):new NC(a.shape,fT),n.runWebGLProgram(s,[a],a.dtype)}},gT=jC({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),bT={kernelName:ge,backendName:"webgl",kernelFunc:gT},vT=jC({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),_T={kernelName:be,backendName:"webgl",kernelFunc:vT},kT="return a + b;",yT=qC({opSnippet:kT,packedOpSnippet:kT,supportsComplex:!0,cpuKernelImpl:ES}),xT={kernelName:ve,backendName:"webgl",kernelFunc:yT};class wT{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}class IT{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}const NT={kernelName:_e,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,s=n;if(1===s.length)return OC({inputs:{x:s[0]},backend:a});if(s.length>ue().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:a}),r=e({inputs:s.slice(t),backend:a});return e({inputs:[n,r],backend:a})}const r=s.map((e=>e.dtype)).reduce(((e,t)=>fs(e,t))),i=s.map((e=>e.shape)),o=ue().getBool("WEBGL_PACK")?new IT(s[0].shape,i):new wT(s[0].shape,i);return a.runWebGLProgram(o,s,r)}},ST={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=s.shape.length,l=P(r,s.shape);let c=l;const u=Io(c,o);let h=s;null!=u&&(h=uT({inputs:{x:s},backend:n,attrs:{perm:u}}),c=So(c.length,o)),wo("all",c,o);const[d,p]=yo(h.shape,c),f=eT({inputs:{x:h},backend:n,attrs:{shape:[-1,z(p)]}}),m=sT(f,f.dtype,"all",n);let g;return g=eT(i?{inputs:{x:m},backend:n,attrs:{shape:xo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}},CT={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=s.shape.length,l=P(r,s.shape);let c=l;const u=Io(c,o);let h=s;null!=u&&(h=uT({inputs:{x:s},backend:n,attrs:{perm:u}}),c=So(c.length,o)),wo("any",c,o);const[d,p]=yo(h.shape,c),f=eT({inputs:{x:h},backend:n,attrs:{shape:[-1,z(p)]}}),m=sT(f,f.dtype,"any",n);let g;return g=eT(i?{inputs:{x:m},backend:n,attrs:{shape:xo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};class TT{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:s,outSize:r}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,r];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class ET{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,E(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],r=Math.ceil(s/t);this.outputShape=e.slice(0,-1),r>1&&this.outputShape.push(r),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=cS(o),c=vC("coords",o);let u,h;if(1===r){h=o+1;const e=cS(h);u=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[o-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[o-2]};`}else h=o,u=`\n        ${l} sourceLocR = coords;\n        ++${c[o-1]};\n        ${l} sourceLocG = coords;\n        ++${c[o-2]};\n        ${l} sourceLocA = coords;\n        --${c[o-1]};\n        ${l} sourceLocB = coords;\n        --${c[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=vC("sourceLocR",h-1).concat("inIdx.r"),g=vC("sourceLocG",h-1).concat("inIdx.g"),b=vC("sourceLocB",h-1).concat("inIdx.b"),v=vC("sourceLocA",h-1).concat("inIdx.a"),_="max"===n?"greaterThan":"lessThan",k=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${v.join()})));`,y=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,x=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${x}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${u}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${y};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${y};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${_}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function AT(e,t,n,a=null){let s=t.shape[0],r=t.shape[1];null!=a&&(s=a.shape[0],r=a.shape[1]);const i=zc(r),o={windowSize:i,inSize:r,batchSize:s,outSize:Math.ceil(r/i)},l=new TT(o,n,null==a),c=[t];null!=a&&c.push(a);const u=e.runWebGLProgram(l,c,"int32");if(1===u.shape[1])return u;const h=AT(e,t,n,u);return e.disposeIntermediateTensorInfo(u),h}function $T(e,t,n,a=null){const s=null!=a?a.shape:t.shape,r=zc(s[s.length-1]),i=new ET(s,r,n,null==a),o=null==a?[t]:[t,a],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const a=$T(e,t,n,l);return e.disposeIntermediateTensorInfo(l),a}return l}function RT(e,t,n,a){const s=[n];if(wo("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,t.shape.length),!ue().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],r=e.texData.get(t.dataId);let i=t;null!==r&&r.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=yo(i.shape,s),c=z(l),u=eT({inputs:{x:i},backend:e,attrs:{shape:[-1,c]}});n.push(u);const h=AT(e,u,a);n.push(h);const d=eT({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return $T(e,t,a)}const zT={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r}=a;let i=P(r,s.shape);const o=Io(i,s.shape.length);let l=s;const c=[];null!=o&&(l=uT({inputs:{x:s},backend:n,attrs:{perm:o}}),c.push(l),i=So(i.length,l.shape.length)),wo("argMax",[i[0]],l.shape.length);const u=RT(n,l,i[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},FT={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r}=a;let i=P(r,s.shape);const o=Io(i,s.shape.length);let l=s;const c=[];null!=o&&(l=uT({inputs:{x:s},backend:n,attrs:{perm:o}}),c.push(l),i=So(i.length,l.shape.length)),wo("argMin",[i[0]],l.shape.length);const u=RT(n,l,i[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},DT=jC({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),OT={kernelName:Ie,backendName:"webgl",kernelFunc:DT},MT=jC({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),LT={kernelName:Ne,backendName:"webgl",kernelFunc:MT},BT=jC({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),PT={kernelName:Se,backendName:"webgl",kernelFunc:BT},WT=qC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),UT={kernelName:Te,backendName:"webgl",kernelFunc:WT},VT=jC({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),GT={kernelName:Ce,backendName:"webgl",kernelFunc:VT};class HT{constructor(e,t,n,a=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${u};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const _=4*Math.floor(r/4),k=r%4,y=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${u};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${_}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${y}\n          }\n\n          int xC = xCCorner + ${_};\n          if (${1===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${y}\n          } else if (${2===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${y}\n          } else if (${3===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${y}\n          }\n        }\n        setOutput(${v});\n      }\n    `}}class jT{constructor(e,t,n,a=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const v="avg"===t;let _="0.0";if(v||(_="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${u}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(k="avgValue / count");const y=4*Math.floor(r/4),x=r%4,w=`\n      if (${v}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${_};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${_});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${y}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${w}\n            }\n\n            int xC = xCCorner + ${y};\n            if (${1===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${w}\n            } else if (${2===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${w}\n            } else if (${3===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${w}\n            }\n          }\n          setOutput(${k});\n        }\n      }\n    `}}const qT={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;jN(s,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=a;E(ki(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=ui(s.shape,r,i,1,o,l);if(1===c.filterWidth&&1===c.filterHeight&&F(c.inShape,c.outShape))return OC({inputs:{x:s},backend:n});const u=new HT(c,"avg",!1);return n.runWebGLProgram(u,[s],"float32")}},ZT={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=a,u=hi(s.shape,r,i,[1,1,1],o,l,c),h=new jT(u,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class KT{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.top,u=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${u});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XT{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${u};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${r}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const YT={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,i=r,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=a,h=hi(i.shape,o,l,[1,1,1],c,u),d=new XT(h);return n.runWebGLProgram(d,[s],i.dtype)}},JT={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,i=r;jN([s,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:c}=a,u=ui(i.shape,o,l,1,c),h=new KT(u);return n.runWebGLProgram(h,[s],i.dtype)}},QT={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:r}=t,{transposeA:i,transposeB:o}=a;return dT({a:s,b:r,transposeA:i,transposeB:o,backend:n})}};class eE{constructor(e,t,n,a,s,r){this.outputShape=[],this.variableNames=["x","mean","variance"],Tr(e,t),Tr(e,n);let i="0.0";null!=a&&(Tr(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Tr(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${r}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class tE{constructor(e,t,n,a,s,r){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Tr(e,t),Tr(e,n);let i="vec4(0.0)";null!=a&&(Tr(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Tr(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${r}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const nE={kernelName:wt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:s,variance:r,offset:i,scale:o}=e;E(s.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),E(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),E(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[a,s,r];let u=null;null!=i&&(u=i.shape,c.push(i));let h=null;null!=o&&(h=o.shape,c.push(o));const d=ue().getBool("WEBGL_PACK_NORMALIZATION")?new tE(a.shape,s.shape,r.shape,u,h,l):new eE(a.shape,s.shape,r.shape,u,h,l);return t.runWebGLProgram(d,c,c[0].dtype)}};class aE{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=cS(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return sE.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${sE[t]} = start[${t}] + coords.${sE[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${a}\n        setOutput(getSource(${n}));\n      }\n    `}}const sE=["x","y","z","w","u","v"];class rE{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=cS(this.rank),n=vC("coords",this.rank),a=vC("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,r=`getChannel(getSource(${a.join()}), ${s})`,i=`\n      result.x = ${r};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${r};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${r};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${r};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function iE(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:r,size:i}=a,[o,l]=Vr(s,r,i);if(Er(s,o,l),0===z(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=aC(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),u=Wr(s.shape,o,l);if(c||!u){const e=ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rE(l):new aE(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,a){const s=a.texData.get(e.dataId),r=a.makeTensorInfo(n,e.dtype),i=a.texData.get(r.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Ur(t,J(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),r}(s,o,l,n)}const oE={kernelName:Fn,backendName:"webgl",kernelFunc:iE},lE={kernelName:Fe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:r,crops:i}=a;E(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=r.reduce(((e,t)=>e*t)),l=Dc(s.shape,r,o),c=Oc(l.length,r.length),u=Mc(s.shape,r,o),h=Lc(i,r.length),d=Bc(u,i,r.length),p=[],f=eT({inputs:{x:s},backend:n,attrs:{shape:l}}),m=uT({inputs:{x:f},backend:n,attrs:{perm:c}}),g=eT({inputs:{x:m},backend:n,attrs:{shape:u}}),b=iE({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},cE={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:r}=t,{size:i}=a,o=n.readSync(s.dataId),l=n.readSync(r.dataId),c=AS(o,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,c)}},uE={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,r=n.readSync(a.dataId),i=n.readSync(s.dataId),o=Tr(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},hE=qC({opSnippet:"return float(a != b);",cpuKernelImpl:YS,dtype:"bool"}),dE={kernelName:on,backendName:"webgl",kernelFunc:hE};function pE(e){const{inputs:t,backend:n}=e,{input:a}=t;return OC({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const fE={kernelName:_n,backendName:"webgl",kernelFunc:pE},mE={kernelName:Me,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:r}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return OC({inputs:{x:r},backend:a});const t=Ro(r.shape),n=e({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),s=LC({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===r.dtype){const t=pE({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!G(r.dtype,i)){const e=OC({inputs:{x:r},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new NC(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(r,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",U("bool",1)),t=hE({inputs:{a:r,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}},gE="return ceil(x);",bE=jC({opSnippet:gE,packedOpSnippet:gE,cpuKernelImpl:RS}),vE={kernelName:Le,backendName:"webgl",kernelFunc:bE};class _E{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class kE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const yE={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{clipValueMin:r,clipValueMax:i}=a;let o;o=ue().getBool("WEBGL_PACK_CLIP")?new kE(s.shape):new _E(s.shape);const l=[[r],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class xE{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function wE(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const IE={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=n.texData.get(a.dataId),r=new xE(a.shape),i=[wE(a,s.complexTensorInfos.real),wE(a,s.complexTensorInfos.imag)];return n.runWebGLProgram(r,i,i[0].dtype)}};class NE{constructor(e){this.outputShape=[],this.outputShape=$c(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}const a=t.length,s=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class SE{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=$c(e,t);const n=this.outputShape,a=n.length,s=cS(a),r=vC("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],c=i.slice(-2),u=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${u}), vec2(${c.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${CE(i,l,t)}),\n            vec2(${CE(c,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${CE(i,l,p)}),\n          vec2(${CE(c,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${r}), 0., 0., 0.);\n\n        ${r[a-1]} = ${r[a-1]} + 1;\n        if (${r[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${r});\n        }\n\n        ${r[a-2]} = ${r[a-2]} + 1;\n        if (${r[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${r});\n        }\n\n        ${r[a-1]} = ${r[a-1]} - 1;\n        if (${r[a-2]} < ${n[a-2]} &&\n            ${r[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${r});\n        }\n        setOutput(result);\n      }\n    `}}function CE(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function TE(e){const{inputs:t,backend:n}=e,{input:a}=t;return OC({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const EE={kernelName:At,backendName:"webgl",kernelFunc:TE};function AE(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>pE({inputs:{input:e},backend:n}))),s=e.map((e=>TE({inputs:{input:e},backend:n}))),r=AE(a,t,n),i=AE(s,t,n),o=LC({inputs:{real:r,imag:i},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map((e=>{const a=z(e.shape.slice(t));return eT({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),r=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=$c(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=zS(r,i,a,o),c=$c(e.map((e=>e.shape)),t),u=n.makeTensorInfo(c,a,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}if(e.length>ue().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),s=AE(e.slice(0,a),t,n),r=AE(e.slice(a),t,n),i=AE([s,r],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}if(ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new SE(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,a)}const{tensors2D:r,outShape:i}=function(e,t,n){const a=$c(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>eT({inputs:{x:e},attrs:{shape:[-1,z(e.shape.slice(t))]},backend:n}))),outShape:a}}(e,t,n),o=new NE(r.map((e=>e.shape))),l=n.runWebGLProgram(o,r,a);r.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=eT({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),c}function $E(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,r=P(s,t[0].shape)[0],i=$c(t.map((e=>e.shape)),r);if(0===z(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>z(e.shape)>0));return 1===o.length?OC({inputs:{x:o[0]},backend:n}):(Ac(o.map((e=>e.shape)),r),AE(o,r,n))}const RE={kernelName:Ue,backendName:"webgl",kernelFunc:$E};class zE{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const r=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,v=m?3:1;let _="",k="";n&&(_=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,k="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${_}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${v}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${k}\n        setOutput(result);\n      }\n    `}}class FE{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${r}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${u}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=mS(this.outputShape.length);const{dataFormat:n}=t,a=ZN(),s="channelsLast"===n,r=s?0:1,i=s?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${r}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}}function OE({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,c=a.texData.get(e.dataId),u=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if((1!==h&&1!==d||!(u>1e3))&&c.isPacked&&p&&null!=c.texture&&l[2]%2!=0&&F(c.shape.slice(-3),l.slice(-3))){const u=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,u,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,E(PN(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const p=eT({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=dT({a:h,b:p,backend:a,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),b=a.texData.get(g.dataId);E(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,b.shape=n.outShape,f=OC({inputs:{x:g},backend:a}),f.shape=n.outShape,m.push(g)}else{const c=eT({inputs:{x:e},backend:a,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),u=eT({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=dT({a:c,b:u,transposeA:!1,transposeB:!1,backend:a,bias:s,activation:o,preluActivationWeights:r,leakyreluAlpha:i});f=eT({inputs:{x:h},backend:a,attrs:{shape:n.outShape}}),m.push(c),m.push(u),m.push(h)}for(const e of m)a.disposeIntermediateTensorInfo(e);return f}function ME({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*c*u,g=d*h,b=[m,g],v=[],_=eT({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),k=eT({inputs:{x:t},backend:a,attrs:{shape:[1,m,z(t.shape)/m]}});v.push(_),v.push(k);const y=new DE(b,n),x=[_.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],w=a.runWebGLProgram(y,[_],"float32",x),I=eT({inputs:{x:w},backend:a,attrs:{shape:[1,b[0],b[1]]}});v.push(w),v.push(I);const N=null!=s,S=null!=r,C="leakyrelu"===o,T=o?ZC(o,!0):null,E=new KC(I.shape,k.shape,[1,g,n.outChannels],!0,!1,N,T,S,C),A=[I,k];if(s&&A.push(s),S&&A.push(r),C){const e=a.makeTensorInfo([],"float32",Ua(i,"float32"));A.push(e),v.push(e)}const $=a.runWebGLProgram(E,A,"float32"),R=eT({inputs:{x:$},backend:a,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});v.push($);for(const e of v)a.disposeIntermediateTensorInfo(e);return R}const LE={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=a,h=yi(l),d=di(s.shape,r.shape,i,c,o,u,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(ue().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=ME({x:s,filter:r,convInfo:d,backend:n});else{const e=new zE(d);p=n.runWebGLProgram(e,[s,r],"float32")}else p=OE({x:s,filter:r,convInfo:d,backend:n});const f=eT({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class BE{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,s=e.padInfo.left,r="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${r}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PE{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,r="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=r?1:2,c=r?2:3,u=r?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${u}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WE{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,s=e.padInfo.front,r=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${r};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UE{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${r}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VE={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=a,h=yi(l),d=di(s.shape,u,i,1,o,c,!1,h),p=new BE(d);return n.runWebGLProgram(p,[s,r],"float32")}},GE={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{inputShape:i,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=a,h=yi(c),d=di(i,r.shape,o,1,l,u,!1,h),p=new PE(d);return n.runWebGLProgram(p,[s,r],"float32")}},HE={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l}=a,c=pi(s.shape,r.shape,i,l,o),u=new FE(c);return n.runWebGLProgram(u,[s,r],"float32")}},jE={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,pad:o,filterShape:l}=a,c=pi(s.shape,l,i,1,o),u=new WE(c);return n.runWebGLProgram(u,[s,r],"float32")}},qE={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{pad:i,strides:o,inputShape:l}=a,c=pi(l,r.shape,o,1,i),u=new UE(c);return n.runWebGLProgram(u,[s,r],"float32")}},ZE=jC({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),KE={kernelName:Ke,backendName:"webgl",kernelFunc:ZE},XE=jC({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),YE={kernelName:Xe,backendName:"webgl",kernelFunc:XE};class JE{constructor(e,t,n,a,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,i,o,l]=e,[c]=t,[u,h]=n;this.outputShape=[c,u,h,l];const d="bilinear"===a?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=u>1?[""+(i-1)/(u-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[v,_,k]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${v});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${r}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${_};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${k};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const QE={kernelName:Qe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:r,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:c}=a,u=new JE(s.shape,r.shape,o,l,c);return n.runWebGLProgram(u,[s,r,i],"float32")}};class eA{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const a=e.length,s=t?"1.0":`getX(${tA(a,"coords")})`,r=e[e.length-1];let i="",o="";t?(i=n?"end != "+(r-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${r}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${cS(a)} coords = getOutputCoords();\n        int end = ${nA(a,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${nA(a,"coords")} = idx;\n          val *= getX(${tA(a,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function tA(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function nA(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}const aA={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,exclusive:i,reverse:o}=a,l=s.shape.length,c=Io([r],l);let u=s;null!=c&&(u=uT({inputs:{x:s},backend:n,attrs:{perm:c}}));const h=So(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${s.shape.length-1} but got axis=${r}`);const d=u.shape[h];let p=OC({inputs:{x:u},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new eA(u.shape,!1,o),a=[[e]],s=p;p=n.runWebGLProgram(t,[p],p.dtype,a),n.disposeIntermediateTensorInfo(s)}if(i){const e=new eA(u.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=uT({inputs:{x:p},backend:n,attrs:{perm:No(c)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),e}return p}};class sA{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const a=e.length,s=t?"0.0":`getX(${rA(a,"coords")})`,r=e[e.length-1];let i="",o="";t?(i=n?"end != "+(r-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${r}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${cS(a)} coords = getOutputCoords();\n        int end = ${iA(a,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${iA(a,"coords")} = idx;\n          val += getX(${rA(a,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function rA(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function iA(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const oA={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,exclusive:i,reverse:o}=a,l=s.shape.length,c=Io([r],l);let u=s;null!=c&&(u=uT({inputs:{x:s},backend:n,attrs:{perm:c}}));const h=So(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${r}`);const d=u.shape[h];let p=OC({inputs:{x:u},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new sA(u.shape,!1,o),a=[[e]],s=p;p=n.runWebGLProgram(t,[p],p.dtype,a),n.disposeIntermediateTensorInfo(s)}if(i){const e=new sA(u.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=uT({inputs:{x:p},backend:n,attrs:{perm:No(c)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),e}return p}},lA={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:r}=t,{size:i,binaryOutput:o}=a;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(r.dataId),a=AS(e,t,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,a)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(r),a=$S(e,t,i,o);return n.makeTensorInfo(a.shape,r.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class cA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const uA={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:r,dataFormat:i}=a,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*r,c=("NHWC"===i?s.shape[2]:s.shape[3])*r,u=("NHWC"===i?s.shape[3]:s.shape[1])/(r*r),h=new cA("NHWC"===i?[o,l,c,u]:[o,u,l,c],r,i);return n.runWebGLProgram(h,[s],s.dtype)}};class hA{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mS(this.outputShape.length);const r=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",c="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${r}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${u}\n        ${c}\n        setOutput(result);\n      }\n    `}}class dA{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mS(this.outputShape.length);const r=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,h=u;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let e=0;e<u;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<u&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<u)){const e=i%2==0?C(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<u&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<u&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<u&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<u&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<u&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${r};\n        int q = d2 - d1 * ${r};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const pA={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=a;let u=l;null==u&&(u=[1,1]),E(ki(i,u),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const h=di(s.shape,r.shape,i,u,o,c,!0);let d;d=ue().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new dA(h):new hA(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,r],"float32",p)}};class fA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,s=e.padInfo.left,r=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${r} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,r=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gA={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=a,h=di(s.shape,u,i,o,l,c,!0),d=new fA(h);return n.runWebGLProgram(d,[s,r],"float32")}},bA={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=a,h=di(u,r.shape,i,o,l,c,!0),d=new mA(h);return n.runWebGLProgram(d,[s,r],"float32")}};class vA{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const _A={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=[...a.shape,...a.shape],r=z(a.shape),i=eT({inputs:{x:a},backend:n,attrs:{shape:[r]}}),o=new vA(r),l=n.runWebGLProgram(o,[i],i.dtype),c=eT({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}};class kA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:s,strideWidth:r,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:c}=e,{top:u,left:h}=a;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${r});\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const yA={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l}=a,c=ci(s.shape,r.shape,i,o,"NHWC",l);let u;const h=new kA(c);u=n.runWebGLProgram(h,[s,r],"float32");const d=eT({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),d}},xA={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,r=t,{allDims:i,summedDims:o,idDims:l}=ou(s,r.length);cu(i.length,l,r);const{path:c,steps:u}=uu(o,l),h=u.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of u[e]){const{permutationIndices:e,expandDims:a}=lu(p,l[t]);let s;hu(e)?s=r[t]:(s=uT({inputs:{x:r[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);F(s.shape,i)||(s=eT({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=JC({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(c[e]>=0&&(d=lT({inputs:{x:d},backend:n,attrs:{axis:c[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},wA=jC({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),IA={kernelName:ht,backendName:"webgl",kernelFunc:wA},NA={kernelName:dt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:s}=t,r=ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new FC("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(r,[a,s],a.dtype)}},SA=qC({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:FS}),CA={kernelName:ft,backendName:"webgl",kernelFunc:SA},TA=jC({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${jc};\n  float a1 = ${qc};\n  float a2 = ${Zc};\n  float a3 = ${Kc};\n  float a4 = ${Xc};\n  float a5 = ${Yc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),EA={kernelName:pt,backendName:"webgl",kernelFunc:TA},AA=jC({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:DS,dtype:"float32"}),$A={kernelName:mt,backendName:"webgl",kernelFunc:AA};function RA(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:r}=t,i=r.shape.length,o=r.shape.slice();let l=s;return s<0&&(E(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),eT({inputs:{x:r},backend:a,attrs:{shape:o}})}const zA={kernelName:gt,backendName:"webgl",kernelFunc:RA},FA="return exp(x) - 1.0;",DA=jC({opSnippet:FA,packedOpSnippet:FA,cpuKernelImpl:OS}),OA={kernelName:bt,backendName:"webgl",kernelFunc:DA};class MA{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,r=n?`${a}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${r};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function LA(e,t,n){const a=n.texData.get(e.dataId),s=z(e.shape),r=e.shape[e.shape.length-1],i=eT({inputs:{x:e},backend:n,attrs:{shape:[s/r,r]}}),o=i.shape,l=new MA("real",o,t),c=new MA("imag",o,t),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,u,"float32"),d=n.runWebGLProgram(c,u,"float32"),p=LC({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=eT({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const BA={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return LA(a,!1,n)}};class PA{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function WA(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:r}=n;if(r=r||K(s),"string"===r){const e=V(r,z(a));return e.fill(s),t.makeTensorInfo(a,r,e)}{const e=new PA(a,s),n=[[s]];return t.runWebGLProgram(e,[],r,n)}}const UA={kernelName:_t,backendName:"webgl",kernelFunc:WA};class VA{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const GA={kernelName:kt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,s=new VA(n.shape);return a.runWebGLProgram(s,[n],n.dtype)}},HA="return floor(x);",jA=jC({opSnippet:HA,packedOpSnippet:HA,cpuKernelImpl:MS}),qA={kernelName:yt,backendName:"webgl",kernelFunc:jA},ZA=qC({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),KA={kernelName:xt,backendName:"webgl",kernelFunc:ZA};class XA{constructor(e){this.variableNames=["A"];const t=ZN(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class YA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=ZN(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const JA={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:s}=t;const{numChannels:r}=a,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],u=[c,l],h=[c,l,r];(o||i)&&(null==QA&&(QA=document.createElement("canvas").getContext("2d")),QA.canvas.width=l,QA.canvas.height=c,QA.drawImage(s,0,0,l,c),s=QA.canvas);const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=vN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=ue().getBool("WEBGL_PACK")?new YA(h):new XA(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let QA;const e$={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=yi(u),g=di(s.shape,r.shape,l,h,c,d,!1,m);let b;const v=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(ue().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=ME({x:s,filter:r,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,a="leakyrelu"===p,l=p?ZC(p,!1):null,c=new zE(g,e,l,t,a),u=[s,r];if(i&&u.push(i),o&&u.push(o),a){const e=n.makeTensorInfo([],"float32",Ua(f,"float32"));u.push(e),v.push(e)}b=n.runWebGLProgram(c,u,"float32")}else b=OE({x:s,filter:r,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const _=eT({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return v.push(b),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),_}},t$={kernelName:ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=u;null==m&&(m=[1,1]),E(ki(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=di(s.shape,r.shape,l,m,c,h,!0),b=ue().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,v=d?ZC(d,b):null,_=[s,r],k=null!=i,y=null!=o,x="leakyrelu"===d;if(k&&_.push(i),y&&_.push(o),x){const e=n.makeTensorInfo([],"float32",Ua(p,"float32"));_.push(e),f.push(e)}let w;w=b?new dA(g,k,v,y,x):new hA(g,k,v,y,x);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(w,_,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class n${constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const a=cS(t.length),s=cS(n.length),r=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${r};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const a$={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,r=s.shape,i=r[r.length-1],o=z(a.shape),[l,c,u,h]=Pc(a,s),d=eT({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),p=eT({inputs:{x:a},backend:n,attrs:{shape:[z(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),r=LS(e,t,a.dtype,c,i,u,h,a.shape,o);return n.makeTensorInfo(l,a.dtype,r.values)}const f=new n$(i,h,[c,u]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=eT({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class s${constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=cS(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let t=0;t<e.length;t++)2===t?a.push("index"):a.push(`${n[t]}`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}}function r$(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:r}=t,{axis:i,batchDims:o}=a,l=P(i,s.shape)[0];if(ue().get("DEBUG")){const e=n.readSync(r.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const a=e[n];E(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}const c=Tu(s,r,l,o),u=z(r.shape),h=[],d=eT({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=eT({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),a=BS(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,a.dtype,a.values)}const m=new s$(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const b=eT({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const i$={kernelName:It,backendName:"webgl",kernelFunc:r$},o$=qC({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:PS,dtype:"bool"}),l$={kernelName:St,backendName:"webgl",kernelFunc:o$},c$=qC({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:WS}),u$={kernelName:Ct,backendName:"webgl",kernelFunc:c$},h$={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return LA(a,!0,n)}},d$=jC({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),p$={kernelName:$t,backendName:"webgl",kernelFunc:d$},f$=jC({opSnippet:"return float(isinf(x));",dtype:"bool"}),m$={kernelName:Rt,backendName:"webgl",kernelFunc:f$},g$=jC({opSnippet:"return float(isnan(x));",dtype:"bool"}),b$={kernelName:zt,backendName:"webgl",kernelFunc:g$},v$=qC({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:US,dtype:"bool"}),_$={kernelName:Dt,backendName:"webgl",kernelFunc:v$},k$=qC({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:VS,dtype:"bool"}),y$={kernelName:Ot,backendName:"webgl",kernelFunc:k$},x$={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,num:r}=n,i=GS(a,s,r);return t.makeTensorInfo([i.length],"float32",i)}},w$=jC({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:HS}),I$={kernelName:Lt,backendName:"webgl",kernelFunc:w$},N$=jC({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),S$={kernelName:Bt,backendName:"webgl",kernelFunc:N$},C$=qC({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),T$={kernelName:Pt,backendName:"webgl",kernelFunc:C$},E$=jC({opSnippet:"return float(!(x >= 1.0));"}),A$={kernelName:Wt,backendName:"webgl",kernelFunc:E$},$$=qC({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),R$={kernelName:Ut,backendName:"webgl",kernelFunc:$$};class z${constructor(e,t,n,a,s){this.variableNames=["x"],this.outputShape=[];const r=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${r}; j <= ${r}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class F${constructor(e,t,n,a,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${r};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${r}; j <= ${r}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const D$={kernelName:Vt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:r,bias:i,alpha:o,beta:l}=a,c=ue().getBool("WEBGL_PACK_NORMALIZATION")?new F$(s.shape,r,i,o,l):new z$(s.shape,r,i,o,l);return n.runWebGLProgram(c,[s],s.dtype)}};class O${constructor(e,t,n,a,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const M$={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s,y:r,dy:i}=t,{depthRadius:o,bias:l,alpha:c,beta:u}=a,h=new O$(s.shape,o,l,c,u);return n.runWebGLProgram(h,[s,r,i],s.dtype)}};function L$(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:r,keepDims:i}=a,o=s.shape.length,l=P(r,s.shape);let c=l;const u=Io(c,o),h=null!=u,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[u[e]];const a=mC(e,s.shape,s.dtype,u,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=a}else p=oT(s,u,n);c=So(c.length,o)}wo("max",c,o);const[f,m]=yo(p.shape,c);let g,b=f;if(i&&(b=xo(f,l)),d){const e=n.texData.get(p.dataId).values,t=jS(e,z(m),b,s.dtype);g=n.makeTensorInfo(b,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const s=z(t),r=eT({inputs:{x:e},attrs:{shape:[z(e.shape)/s,s]},backend:a}),i=sT(r,e.dtype,"max",a),o=eT({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),o}(p,m,b,n);return h&&n.disposeIntermediateTensorInfo(p),g}const B$={kernelName:Ht,backendName:"webgl",kernelFunc:L$},P$=qC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qS}),W$={kernelName:jt,backendName:"webgl",kernelFunc:P$},U$={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;jN(s,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=a;E(ki(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=ui(s.shape,r,i,1,o,l);if(1===c.filterWidth&&1===c.filterHeight&&F(c.inShape,c.outShape))return OC({inputs:{x:s},backend:n});const u=new HT(c,"max",!1);return n.runWebGLProgram(u,[s],s.dtype)}},V$={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:c}=a,u=hi(s.shape,r,i,[1,1,1],o,c,l),h=new jT(u,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class G${constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,s=e.effectiveFilterHeight,r=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=r-1-e.padInfo.left,l=s*r-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${r} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class H${constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,s=e.dilationDepth,r=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=c-1-e.padInfo.left,p=o*l*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${u}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${r}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const j$={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,i=r,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=a,h=hi(i.shape,o,l,[1,1,1],c,u),d=new jT(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new H$(h),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},q$={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r,output:i}=t,o=r;jN([r,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=a,d=ui(o.shape,l,c,1,u,h),p=new HT(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new G$(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Z$={kernelName:Yt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:r,pad:i,includeBatchInIndex:o}=t,l=n;E(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const c=[1,1];E(ki(r,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`));const u=ui(a.shape,s,r,c,i),[h,d]=function(e,t,n,a){let s=new HT(n,"max",!1);const r=a.runWebGLProgram(s,[e],"float32");return s=new HT(n,"max",!0,!0,t),[r,a.runWebGLProgram(s,[e],"float32")]}(a,o,u,l);return[h,d]}},K$={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:s,axis:r}=t,i=n,o=a.shape.length,l=P(r,a.shape);let c=l;const u=Io(c,o),h=null!=u,d=i.shouldExecuteOnCPU([a]),p=[];let f=a;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[u[e]];const n=mC(e,a.shape,a.dtype,u,t);f=i.makeTensorInfo(t,a.dtype),i.texData.get(f.dataId).values=n}else f=oT(a,u,i);p.push(f),c=So(c.length,o)}wo("sum",c,o);const[m,g]=yo(f.shape,c);let b=m;s&&(b=xo(m,l));const v=function(e,t,n,a){const s=z(t),r=eT({inputs:{x:e},attrs:{shape:[z(e.shape)/s,s]},backend:a}),i=sT(r,"float32","mean",a),o=eT({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),o}(f,g,b,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return v}},X$={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=s.shape.length,l=P(r,s.shape);let c=l;const u=Io(c,o);let h=s;null!=u&&(h=uT({inputs:{x:s},backend:n,attrs:{perm:u}}),c=So(c.length,s.shape.length)),wo("min",c,o);const[d,p]=yo(h.shape,c),f=eT({inputs:{x:h},backend:n,attrs:{shape:[-1,z(p)]}}),m=sT(f,f.dtype,"min",n);let g;return g=eT(i?{inputs:{x:m},backend:n,attrs:{shape:xo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}},Y$=qC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ZS}),J$={kernelName:en,backendName:"webgl",kernelFunc:Y$};class Q${constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,s=cS(a),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${s} start = ${s}(${r});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${r};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class eR{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,s=cS(a),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=vC("rc",a),l=vC("source",a),c=`${o[a-1]} < ${this.outputShape[a-1]}`,u=1===a?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===a){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${u});\n        ${o[a-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${u});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${u});\n        ${o[a-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${u});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${u});\n          ${o[a-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${u});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${r});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const tR={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:s,mode:r}=n,i=ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eR(a.shape,s,r):new Q$(a.shape,s,r);return t.runWebGLProgram(i,[a],a.dtype)}},nR=qC({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),aR={kernelName:nn,backendName:"webgl",kernelFunc:nR};class sR{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const rR=qC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),iR={kernelName:ct,backendName:"webgl",kernelFunc:rR},oR="return a - b;",lR=qC({opSnippet:oR,packedOpSnippet:oR,supportsComplex:!0,cpuKernelImpl:dC}),cR={kernelName:na,backendName:"webgl",kernelFunc:lR};function uR(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:r}=a,i=P([r],s.shape),o=L$({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=xo(o.shape,i),c=eT({inputs:{x:o},backend:n,attrs:{shape:l}}),u=lR({inputs:{a:s,b:c},backend:n}),h=AA({inputs:{x:u},backend:n}),d=lT({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=eT({inputs:{x:d},backend:n,attrs:{shape:l}}),f=rR({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const hR={kernelName:Gn,backendName:"webgl",kernelFunc:uR},dR={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{numSamples:r,seed:i,normalized:o}=a,l=o?s:uR({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new sR(c,u,r),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},pR={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,s]=XS(e.values,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,t)}let s;return s=ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new TC(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new NC(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[a],a.dtype)}},fR=Ul,mR={kernelName:ln,backendName:"webgl",kernelFunc:function(e){va("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,c=n.readSync(s.dataId),u=n.readSync(r.dataId),{selectedIndices:h}=fR(c,u,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},gR=Vl,bR={kernelName:cn,backendName:"webgl",kernelFunc:function(e){va("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=a,u=n.readSync(s.dataId),h=n.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=gR(u,h,i,o,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},vR=Gl,_R={kernelName:un,backendName:"webgl",kernelFunc:function(e){va("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=a,u=n.readSync(s.dataId),h=n.readSync(r.dataId),d=i,p=o,f=l,m=c,{selectedIndices:g,selectedScores:b}=vR(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class kR{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const yR={kernelName:dn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{depth:r,onValue:i,offValue:o}=a,l=z(s.shape),c=new kR(l,r,i,o),u=eT({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(c,[u],s.dtype);n.disposeIntermediateTensorInfo(u);const d=eT({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,r]}});return n.disposeIntermediateTensorInfo(h),d}};function xR(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=pE({inputs:{input:a},backend:n}),t=xR({inputs:{x:e},backend:n}),s=TE({inputs:{input:a},backend:n}),r=xR({inputs:{x:s},backend:n}),i=LC({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}return WA({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const wR={kernelName:da,backendName:"webgl",kernelFunc:xR},IR={kernelName:hn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=pE({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a}),r=TE({inputs:{input:s},backend:a}),i=xR({inputs:{x:r},backend:a}),o=LC({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),o}return WA({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:a})}},NR={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return RA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const r=t[0].shape,i=t[0].dtype;t.forEach((e=>{A(r,e.shape,"All tensors passed to stack must have matching shapes"),E(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=$E({inputs:t.map((e=>{const t=RA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class SR{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,s=cS(a),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${s} start = ${s}(${r});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${r};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class CR{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,s=cS(a),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=vC("rc",a),l=vC("source",a),c=`${o[a-1]} < ${this.outputShape[a-1]}`,u=1===a?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${c}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${c}) {`],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===a?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${u});\n        }\n      `;p+=1===a?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${r});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const TR=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:r,constantValue:i}=a;if(0===z(s.shape)){const e=r.map(((e,t)=>e[0]+s.shape[t]+e[1]));return WA({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CR(s.shape,r,i):new SR(s.shape,r,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},ER={kernelName:fn,backendName:"webgl",kernelFunc:TR},AR=qC({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),$R={kernelName:mn,backendName:"webgl",kernelFunc:AR},RR={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=s.shape.length,l=[],c=P(r,s.shape);let u=c;const h=Io(u,o);let d,p=s;if(null!=h&&(p=uT({inputs:{x:s},backend:n,attrs:{perm:h}}),u=So(u.length,o),l.push(p)),wo("prod",u,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:s}=JS(p.shape,p.dtype,e,u);d=n.makeTensorInfo(a,s,t)}else{const[e,t]=yo(p.shape,u),a=z(t),r=eT({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),i=sT(r,ms(s.dtype),"prod",n);d=eT({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(r),l.push(i)}if(i){l.push(d);const e=xo(d.shape,c);d=eT({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},zR=e=>{const{backend:t,attrs:n}=e,{start:a,stop:s,step:r,dtype:i}=n,o=QS(a,s,r,i);return t.makeTensorInfo([o.length],i,o)},FR={kernelName:vn,backendName:"webgl",kernelFunc:zR},DR=jC({opSnippet:"return 1.0 / x;"}),OR={kernelName:kn,backendName:"webgl",kernelFunc:DR},MR=jC({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),LR={kernelName:yn,backendName:"webgl",kernelFunc:MR},BR=jC({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),PR={kernelName:Cn,backendName:"webgl",kernelFunc:BR};class WR{constructor(e,t,n,a,s){this.variableNames=["A"],this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/u[0]},\n          ${c[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class UR{constructor(e,t,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/u[0]},\n          ${c[1]/u[1]},\n          ${c[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const VR={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:r,halfPixelCenters:i,size:o}=a,[l,c]=o,u=ue().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UR(s.shape,l,c,r,i):new WR(s.shape,l,c,r,i);return n.runWebGLProgram(u,[s],"float32")}};class GR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,s]=t,[,r,i]=e,o=[n&&r>1?a-1:a,n&&i>1?s-1:s],l=[n&&r>1?r-1:r,n&&i>1?i-1:i],c=o[0]/l[0],u=o[1]/l[1],h=1/c,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${u});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${r}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const HR={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:r}=t,{alignCorners:i}=a,o=new GR(r.shape,s.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}};class jR{constructor(e,t,n,a,s){this.variableNames=["A"],this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/u[0]},\n          ${c[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class qR{constructor(e,t,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const c=[a&&t>1?i-1:i,a&&n>1?o-1:o],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/u[0]},\n          ${c[1]/u[1]},\n          ${c[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const ZR={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:r,halfPixelCenters:i,size:o}=a,[l,c]=o,u=ue().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qR(s.shape,l,c,r,i):new jR(s.shape,l,c,r,i);return n.runWebGLProgram(u,[s],s.dtype)}};class KR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,s]=t,[,r,i]=e,o=[n&&r>1?a-1:a,n&&i>1?s-1:s],l=[n&&r>1?r-1:r,n&&i>1?i-1:i],c=o[0]/l[0],u=o[1]/l[1],h=1/c,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${u});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${r}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const XR={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:r}=t,{alignCorners:i}=a,o=new KR(r.shape,s.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}};class YR{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),s=cS(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class JR{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const a=vC("rc",n),s=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,r=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=cS(n);function o(n){const a=e.map(((a,s)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(s,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(a.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(a.slice())};\n          }\n          if(${r}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const QR={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:r}=a,i=s.shape.length,o=P(r,s.shape);if(0===i)return OC({inputs:{x:s},backend:n});const l=ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JR(s.shape,o):new YR(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class ez{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const tz={kernelName:fa,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:r,center:i}=t,o=n,l=new ez(a.shape,r),[c,u]=Fc(i,a.shape[1],a.shape[2]),h=[[c,u,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[a],a.dtype,h)}},nz=jC({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),az={kernelName:En,backendName:"webgl",kernelFunc:nz},sz=jC({opSnippet:"return inversesqrt(x);",cpuKernelImpl:eC}),rz={kernelName:An,backendName:"webgl",kernelFunc:sz};class iz{constructor(e,t,n,a,s,r,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const o=cS(s.length),l=cS(r.length);let c="";1===n?c="i":2===n&&(c="i, j");const u=`getIndices(${c})`;let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${u});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const oz={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:r}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Vc(0,s,i),d=[h/c,c];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=eT({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=eT({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new iz(l,o,p.shape.length,f.shape.length,u,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),v=eT({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),v}};class lz{constructor(e,t,n){let a,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],i=[];for(let a=0;a<t.length;a++)i.push(`${n[a]}`),a<e&&r.push(`${n[a]}`);a=r.join(),s=i.join()}const r=cS(n);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const cz={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:r}=t,i=new lz(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[a,s,r],fs(s.dtype,r.dtype))}},uz=jC({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Gc};\n  float scale = ${Hc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),hz={kernelName:zn,backendName:"webgl",kernelFunc:uz},dz=jC({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:tC}),pz={kernelName:Ln,backendName:"webgl",kernelFunc:dz},fz=jC({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),mz={kernelName:Mn,backendName:"webgl",kernelFunc:fz},gz=jC({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),bz={kernelName:Dn,backendName:"webgl",kernelFunc:gz},vz=jC({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),_z={kernelName:On,backendName:"webgl",kernelFunc:vz},kz=jC({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),yz={kernelName:Bn,backendName:"webgl",kernelFunc:kz},xz={kernelName:Un,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:r,paddings:i}=a;E(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=r.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+r.length;e<s.shape.length;++e)l.push([0,0]);const c=[],u=TR({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Dc(u.shape,r,o,!1),d=Oc(h.length,r.length,!1),p=Mc(u.shape,r,o,!1),f=eT({inputs:{x:u},backend:n,attrs:{shape:h}}),m=uT({inputs:{x:f},backend:n,attrs:{perm:d}}),g=eT({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},wz={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:s,denseShape:r,defaultValue:i}=t;if(1!==r.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${r.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(r.dataId),u=n.readSync(i.dataId)[0],[h,d,p,f,m]=sC(o,a.shape,a.dtype,l,s.dtype,c,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},Iz={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:s,newShape:r}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(r.dataId)),[c,u,h]=rC(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(u,a.dtype,c),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}},Nz={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${r.shape}`);const i=n.readSync(a.dataId),o=n.readSync(s.dataId),l=n.readSync(r.dataId),[c,u]=iC(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(u,a.dtype,c)}},Sz={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${r.shape}`);const i=n.readSync(a.dataId),o=n.readSync(s.dataId),l=n.readSync(r.dataId),[c,u]=iC(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(u,a.dtype,c)}},Cz={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:r,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:c,strides:u,outputSize:h}=Vc(0,s,o),d=new iz(c,l,s.shape.length,r.shape.length,u,[h,1],!1),p=n.runWebGLProgram(d,[r,s,i],r.dtype),f=eT({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},Tz={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:r,axis:i}=a,o=P(i,s.shape)[0],l=pu(s,r,o),c=s.shape.length,u=new Array(c).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const a=iE({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a}))}},Ez="return sqrt(x);",Az=jC({opSnippet:Ez,packedOpSnippet:Ez,cpuKernelImpl:oC}),$z={kernelName:Pn,backendName:"webgl",kernelFunc:Az},Rz={kernelName:Yn,backendName:"webgl",kernelFunc:jC({opSnippet:"return x * x;"})},zz="return (a - b) * (a - b);",Fz=qC({opSnippet:zz,packedOpSnippet:zz}),Dz={kernelName:Xn,backendName:"webgl",kernelFunc:Fz},Oz={kernelName:pa,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:a}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,r=new NC(a.shape,s);return n.runWebGLProgram(r,[a],a.dtype)}};class Mz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,s=cS(n.length),r=cS(n.length);let i="";if(1===a)i="coords * strides + begin";else{let e=0;i=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Lz={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:r,end:i,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:v,end:_,strides:k}=Gr(s.shape,r,i,o,l,c,u,h,d);let y;if(m)y=eT({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||b){E(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=$r(v,_,k),t=iE({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});y=eT({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=gr(s.shape,s.dtype,e),a=lC(p,t,k,v);y=n.makeTensorInfo(f,s.dtype,a.values)}else{const e=new Mz(v,k,p);y=n.runWebGLProgram(e,[s],s.dtype)}const x=eT({inputs:{x:y},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(y),x}},Bz={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:s,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:c}=a,{data:u,dataSplits:h}=t,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,m]=cC(d,p,s,r,i,o,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},Pz={kernelName:ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:s}=a,{input:r,delimiter:i}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId)[0],[c,u,h]=uC(o,l,s),d=u.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},Wz={kernelName:ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:s}=a,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(r.dataId),o=hC(i,s);return n.makeTensorInfo(r.shape,"int32",o)}},Uz=jC({opSnippet:"return tan(x);"}),Vz={kernelName:aa,backendName:"webgl",kernelFunc:Uz},Gz=jC({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Hz={kernelName:sa,backendName:"webgl",kernelFunc:Gz};class jz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const a=cS(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function qz(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:r}=a;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>ja(e))):e,a=gr(s.shape,s.dtype,t),i=pC(a,r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new jz(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}const Zz={kernelName:ra,backendName:"webgl",kernelFunc:qz};class Kz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Xz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Yz(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Jz(e){let t=1;for(;t<e;)t*=2;return t}const Qz={kernelName:ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:r,sorted:i}=a,o=ue().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ue().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([s])||u<o||r>l){const e=n.readSync(s.dataId),[t,a]=fC(e,c,s.dtype,r,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===r)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===u)return[s,WA({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=z(c)/u,m=eT({inputs:{x:p},attrs:{shape:[f,u]},backend:n});d&&Yz(n,p);const g=Jz(r),b=Jz(u);let v=null;const _=()=>null===v?[m,m]:[m,v],k=(e,t,a)=>{const s=_(),r=new Kz(a),i=[[u],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=v;v=n.runWebGLProgram(r,s,"int32",i),Yz(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)k(t,n,[f,b])}for(let e=b;e>g;e/=2){const t=_(),a=new Xz([f,e/2]),s=[[u],[null===v?1:0],[g]],r=v;v=n.runWebGLProgram(a,t,"int32",s),Yz(n,r);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)k(o,e,v.shape)}let y=v;v=iE({inputs:{x:v},backend:n,attrs:{begin:0,size:[f,r]}}),Yz(n,y);let x=r$({inputs:{x:m,indices:v},backend:n,attrs:{axis:1,batchDims:1}});Yz(n,m);const w=c.slice(0,-1);w.push(r),y=v,v=eT({inputs:{x:v},attrs:{shape:w},backend:n}),Yz(n,y);const I=x;return x=eT({inputs:{x},attrs:{shape:w},backend:n}),Yz(n,I),[x,v]}};class eF{constructor(e,t,n,a,s,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const i="nearest"===n?1:2;let o;switch(a){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const tF={kernelName:oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,transforms:r}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:c}=a,[u,h,d,p]=s.shape,[f,m]=null!=c?c:[h,d],g=new eF(h,d,i,o,l,[u,f,m,p]);return n.runWebGLProgram(g,[s,r],"float32")}},nF={kernelName:ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:s}=n,{x:r}=t;jN(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=a.readSync(r.dataId),{outputValues:o,outputShape:l,indices:c}=gC(i,s,r.shape,r.dtype);return[a.makeTensorInfo(l,r.dtype,o),a.makeTensorInfo([c.length],"int32",c)]}},aF={kernelName:ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:s}=t;let{axis:r}=a;r<0&&(r+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[r],c=new Array(o-1);let u=0;for(let e=0;e<o;e++)e!==r&&(c[u++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[r]=e;const t=iE({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),a=eT({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=a,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class sF{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,s=e.inSize,r=e.numSegments,i=r*Math.ceil(s/n);this.outputShape=[a,i];const o=4*Math.floor(n/4),l=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${r})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${r})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const rF=[pT,mT,bT,_T,xT,NT,ST,CT,zT,FT,OT,LT,PT,UT,GT,qT,ZT,YT,JT,QT,nE,lE,cE,uE,mE,vE,yE,BC,IE,RE,LE,VE,GE,HE,jE,qE,KE,YE,QE,aA,oA,lA,uA,pA,gA,bA,_A,yA,xA,IA,NA,CA,EA,$A,zA,OA,BA,UA,GA,qA,KA,JA,e$,t$,a$,i$,l$,u$,MC,h$,EE,p$,m$,b$,UC,_$,y$,x$,I$,S$,T$,A$,R$,D$,M$,B$,W$,U$,V$,j$,q$,Z$,K$,X$,J$,tR,aR,dR,QC,pR,mR,bR,_R,dE,yR,IR,NR,ER,$R,HC,RR,FR,fE,iR,OR,LR,PR,tT,VR,HR,ZR,XR,QR,tz,az,rz,oz,cz,hz,pz,mz,bz,_z,oE,hR,yz,xz,wz,Iz,Nz,Sz,Cz,Tz,$z,Rz,Dz,Oz,Lz,Bz,Pz,Wz,cR,cT,Vz,Hz,Zz,Qz,tF,hT,nF,aF,{kernelName:ha,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:r}=t,{numSegments:i}=a,o=s.shape.length,l=[];let c=0;const u=Io([c],o);let h=s;null!=u&&(h=uT({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(h),c=So(1,o)[0]);const d=Cu(h.shape,c,i),p=z([h.shape[c]]),f=eT({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=ms(s.dtype),g=(e,t,a,s,r)=>{const i=e.shape[0],o=e.shape[1],c=Su(o,r),u=new sF({windowSize:c,inSize:o,batchSize:i,numSegments:r},t),h=n.compileAndRun(u,[e,a],s);if(l.push(h),h.shape[1]===r)return h;const d=zR({backend:n,attrs:{start:0,stop:r,step:1,dtype:"float32"}}),p=qz({inputs:{x:d},backend:n,attrs:{reps:[o/c]}});return l.push(d),l.push(p),g(h,t,p,s,r)},b=eT({inputs:{x:g(f,"unsortedSegmentSum",r,m,i)},backend:n,attrs:{shape:d}});let v=b;if(null!=u){l.push(b);const e=No(u);v=uT({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},wR];for(const e of rF)Na(e);const iF=JSON.parse('{"format":"layers-model","generatedBy":"keras v2.4.0","convertedBy":"TensorFlow.js Converter v3.15.0","modelTopology":{"keras_version":"2.4.0","backend":"tensorflow","model_config":{"class_name":"Sequential","config":{"name":"sequential","layers":[{"class_name":"InputLayer","config":{"batch_input_shape":[null,224,224,3],"dtype":"float32","sparse":false,"ragged":false,"name":"model_input"}},{"class_name":"Functional","config":{"name":"model","layers":[{"class_name":"InputLayer","config":{"batch_input_shape":[null,224,224,3],"dtype":"float32","sparse":false,"ragged":false,"name":"input_1"},"name":"input_1","inbound_nodes":[]},{"class_name":"ZeroPadding2D","config":{"name":"conv1_pad","trainable":false,"dtype":"float32","padding":[[3,3],[3,3]],"data_format":"channels_last"},"name":"conv1_pad","inbound_nodes":[[["input_1",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv1_conv","trainable":false,"dtype":"float32","filters":64,"kernel_size":[7,7],"strides":[2,2],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv1_conv","inbound_nodes":[[["conv1_pad",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv1_bn","inbound_nodes":[[["conv1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv1_relu","inbound_nodes":[[["conv1_bn",0,0,{}]]]},{"class_name":"ZeroPadding2D","config":{"name":"pool1_pad","trainable":false,"dtype":"float32","padding":[[1,1],[1,1]],"data_format":"channels_last"},"name":"pool1_pad","inbound_nodes":[[["conv1_relu",0,0,{}]]]},{"class_name":"MaxPooling2D","config":{"name":"pool1_pool","trainable":false,"dtype":"float32","pool_size":[3,3],"padding":"valid","strides":[2,2],"data_format":"channels_last"},"name":"pool1_pool","inbound_nodes":[[["pool1_pad",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block1_1_conv","trainable":false,"dtype":"float32","filters":64,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block1_1_conv","inbound_nodes":[[["pool1_pool",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block1_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block1_1_bn","inbound_nodes":[[["conv2_block1_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block1_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block1_1_relu","inbound_nodes":[[["conv2_block1_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block1_2_conv","trainable":false,"dtype":"float32","filters":64,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block1_2_conv","inbound_nodes":[[["conv2_block1_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block1_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block1_2_bn","inbound_nodes":[[["conv2_block1_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block1_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block1_2_relu","inbound_nodes":[[["conv2_block1_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block1_0_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block1_0_conv","inbound_nodes":[[["pool1_pool",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block1_3_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block1_3_conv","inbound_nodes":[[["conv2_block1_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block1_0_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block1_0_bn","inbound_nodes":[[["conv2_block1_0_conv",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block1_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block1_3_bn","inbound_nodes":[[["conv2_block1_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv2_block1_add","trainable":false,"dtype":"float32"},"name":"conv2_block1_add","inbound_nodes":[[["conv2_block1_0_bn",0,0,{}],["conv2_block1_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block1_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block1_out","inbound_nodes":[[["conv2_block1_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block2_1_conv","trainable":false,"dtype":"float32","filters":64,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block2_1_conv","inbound_nodes":[[["conv2_block1_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block2_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block2_1_bn","inbound_nodes":[[["conv2_block2_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block2_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block2_1_relu","inbound_nodes":[[["conv2_block2_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block2_2_conv","trainable":false,"dtype":"float32","filters":64,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block2_2_conv","inbound_nodes":[[["conv2_block2_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block2_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block2_2_bn","inbound_nodes":[[["conv2_block2_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block2_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block2_2_relu","inbound_nodes":[[["conv2_block2_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block2_3_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block2_3_conv","inbound_nodes":[[["conv2_block2_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block2_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block2_3_bn","inbound_nodes":[[["conv2_block2_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv2_block2_add","trainable":false,"dtype":"float32"},"name":"conv2_block2_add","inbound_nodes":[[["conv2_block1_out",0,0,{}],["conv2_block2_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block2_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block2_out","inbound_nodes":[[["conv2_block2_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block3_1_conv","trainable":false,"dtype":"float32","filters":64,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block3_1_conv","inbound_nodes":[[["conv2_block2_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block3_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block3_1_bn","inbound_nodes":[[["conv2_block3_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block3_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block3_1_relu","inbound_nodes":[[["conv2_block3_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block3_2_conv","trainable":false,"dtype":"float32","filters":64,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block3_2_conv","inbound_nodes":[[["conv2_block3_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block3_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block3_2_bn","inbound_nodes":[[["conv2_block3_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block3_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block3_2_relu","inbound_nodes":[[["conv2_block3_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv2_block3_3_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv2_block3_3_conv","inbound_nodes":[[["conv2_block3_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv2_block3_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv2_block3_3_bn","inbound_nodes":[[["conv2_block3_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv2_block3_add","trainable":false,"dtype":"float32"},"name":"conv2_block3_add","inbound_nodes":[[["conv2_block2_out",0,0,{}],["conv2_block3_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv2_block3_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv2_block3_out","inbound_nodes":[[["conv2_block3_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block1_1_conv","trainable":false,"dtype":"float32","filters":128,"kernel_size":[1,1],"strides":[2,2],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block1_1_conv","inbound_nodes":[[["conv2_block3_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block1_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block1_1_bn","inbound_nodes":[[["conv3_block1_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block1_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block1_1_relu","inbound_nodes":[[["conv3_block1_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block1_2_conv","trainable":false,"dtype":"float32","filters":128,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block1_2_conv","inbound_nodes":[[["conv3_block1_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block1_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block1_2_bn","inbound_nodes":[[["conv3_block1_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block1_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block1_2_relu","inbound_nodes":[[["conv3_block1_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block1_0_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[1,1],"strides":[2,2],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block1_0_conv","inbound_nodes":[[["conv2_block3_out",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block1_3_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block1_3_conv","inbound_nodes":[[["conv3_block1_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block1_0_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block1_0_bn","inbound_nodes":[[["conv3_block1_0_conv",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block1_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block1_3_bn","inbound_nodes":[[["conv3_block1_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv3_block1_add","trainable":false,"dtype":"float32"},"name":"conv3_block1_add","inbound_nodes":[[["conv3_block1_0_bn",0,0,{}],["conv3_block1_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block1_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block1_out","inbound_nodes":[[["conv3_block1_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block2_1_conv","trainable":false,"dtype":"float32","filters":128,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block2_1_conv","inbound_nodes":[[["conv3_block1_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block2_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block2_1_bn","inbound_nodes":[[["conv3_block2_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block2_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block2_1_relu","inbound_nodes":[[["conv3_block2_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block2_2_conv","trainable":false,"dtype":"float32","filters":128,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block2_2_conv","inbound_nodes":[[["conv3_block2_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block2_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block2_2_bn","inbound_nodes":[[["conv3_block2_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block2_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block2_2_relu","inbound_nodes":[[["conv3_block2_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block2_3_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block2_3_conv","inbound_nodes":[[["conv3_block2_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block2_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block2_3_bn","inbound_nodes":[[["conv3_block2_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv3_block2_add","trainable":false,"dtype":"float32"},"name":"conv3_block2_add","inbound_nodes":[[["conv3_block1_out",0,0,{}],["conv3_block2_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block2_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block2_out","inbound_nodes":[[["conv3_block2_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block3_1_conv","trainable":false,"dtype":"float32","filters":128,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block3_1_conv","inbound_nodes":[[["conv3_block2_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block3_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block3_1_bn","inbound_nodes":[[["conv3_block3_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block3_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block3_1_relu","inbound_nodes":[[["conv3_block3_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block3_2_conv","trainable":false,"dtype":"float32","filters":128,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block3_2_conv","inbound_nodes":[[["conv3_block3_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block3_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block3_2_bn","inbound_nodes":[[["conv3_block3_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block3_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block3_2_relu","inbound_nodes":[[["conv3_block3_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block3_3_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block3_3_conv","inbound_nodes":[[["conv3_block3_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block3_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block3_3_bn","inbound_nodes":[[["conv3_block3_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv3_block3_add","trainable":false,"dtype":"float32"},"name":"conv3_block3_add","inbound_nodes":[[["conv3_block2_out",0,0,{}],["conv3_block3_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block3_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block3_out","inbound_nodes":[[["conv3_block3_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block4_1_conv","trainable":false,"dtype":"float32","filters":128,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block4_1_conv","inbound_nodes":[[["conv3_block3_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block4_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block4_1_bn","inbound_nodes":[[["conv3_block4_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block4_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block4_1_relu","inbound_nodes":[[["conv3_block4_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block4_2_conv","trainable":false,"dtype":"float32","filters":128,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block4_2_conv","inbound_nodes":[[["conv3_block4_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block4_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block4_2_bn","inbound_nodes":[[["conv3_block4_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block4_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block4_2_relu","inbound_nodes":[[["conv3_block4_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv3_block4_3_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv3_block4_3_conv","inbound_nodes":[[["conv3_block4_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv3_block4_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv3_block4_3_bn","inbound_nodes":[[["conv3_block4_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv3_block4_add","trainable":false,"dtype":"float32"},"name":"conv3_block4_add","inbound_nodes":[[["conv3_block3_out",0,0,{}],["conv3_block4_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv3_block4_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv3_block4_out","inbound_nodes":[[["conv3_block4_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block1_1_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[2,2],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block1_1_conv","inbound_nodes":[[["conv3_block4_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block1_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block1_1_bn","inbound_nodes":[[["conv4_block1_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block1_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block1_1_relu","inbound_nodes":[[["conv4_block1_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block1_2_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block1_2_conv","inbound_nodes":[[["conv4_block1_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block1_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block1_2_bn","inbound_nodes":[[["conv4_block1_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block1_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block1_2_relu","inbound_nodes":[[["conv4_block1_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block1_0_conv","trainable":false,"dtype":"float32","filters":1024,"kernel_size":[1,1],"strides":[2,2],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block1_0_conv","inbound_nodes":[[["conv3_block4_out",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block1_3_conv","trainable":false,"dtype":"float32","filters":1024,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block1_3_conv","inbound_nodes":[[["conv4_block1_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block1_0_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block1_0_bn","inbound_nodes":[[["conv4_block1_0_conv",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block1_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block1_3_bn","inbound_nodes":[[["conv4_block1_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv4_block1_add","trainable":false,"dtype":"float32"},"name":"conv4_block1_add","inbound_nodes":[[["conv4_block1_0_bn",0,0,{}],["conv4_block1_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block1_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block1_out","inbound_nodes":[[["conv4_block1_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block2_1_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block2_1_conv","inbound_nodes":[[["conv4_block1_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block2_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block2_1_bn","inbound_nodes":[[["conv4_block2_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block2_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block2_1_relu","inbound_nodes":[[["conv4_block2_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block2_2_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block2_2_conv","inbound_nodes":[[["conv4_block2_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block2_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block2_2_bn","inbound_nodes":[[["conv4_block2_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block2_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block2_2_relu","inbound_nodes":[[["conv4_block2_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block2_3_conv","trainable":false,"dtype":"float32","filters":1024,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block2_3_conv","inbound_nodes":[[["conv4_block2_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block2_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block2_3_bn","inbound_nodes":[[["conv4_block2_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv4_block2_add","trainable":false,"dtype":"float32"},"name":"conv4_block2_add","inbound_nodes":[[["conv4_block1_out",0,0,{}],["conv4_block2_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block2_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block2_out","inbound_nodes":[[["conv4_block2_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block3_1_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block3_1_conv","inbound_nodes":[[["conv4_block2_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block3_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block3_1_bn","inbound_nodes":[[["conv4_block3_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block3_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block3_1_relu","inbound_nodes":[[["conv4_block3_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block3_2_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block3_2_conv","inbound_nodes":[[["conv4_block3_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block3_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block3_2_bn","inbound_nodes":[[["conv4_block3_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block3_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block3_2_relu","inbound_nodes":[[["conv4_block3_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block3_3_conv","trainable":false,"dtype":"float32","filters":1024,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block3_3_conv","inbound_nodes":[[["conv4_block3_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block3_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block3_3_bn","inbound_nodes":[[["conv4_block3_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv4_block3_add","trainable":false,"dtype":"float32"},"name":"conv4_block3_add","inbound_nodes":[[["conv4_block2_out",0,0,{}],["conv4_block3_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block3_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block3_out","inbound_nodes":[[["conv4_block3_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block4_1_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block4_1_conv","inbound_nodes":[[["conv4_block3_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block4_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block4_1_bn","inbound_nodes":[[["conv4_block4_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block4_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block4_1_relu","inbound_nodes":[[["conv4_block4_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block4_2_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block4_2_conv","inbound_nodes":[[["conv4_block4_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block4_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block4_2_bn","inbound_nodes":[[["conv4_block4_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block4_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block4_2_relu","inbound_nodes":[[["conv4_block4_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block4_3_conv","trainable":false,"dtype":"float32","filters":1024,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block4_3_conv","inbound_nodes":[[["conv4_block4_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block4_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block4_3_bn","inbound_nodes":[[["conv4_block4_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv4_block4_add","trainable":false,"dtype":"float32"},"name":"conv4_block4_add","inbound_nodes":[[["conv4_block3_out",0,0,{}],["conv4_block4_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block4_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block4_out","inbound_nodes":[[["conv4_block4_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block5_1_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block5_1_conv","inbound_nodes":[[["conv4_block4_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block5_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block5_1_bn","inbound_nodes":[[["conv4_block5_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block5_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block5_1_relu","inbound_nodes":[[["conv4_block5_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block5_2_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block5_2_conv","inbound_nodes":[[["conv4_block5_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block5_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block5_2_bn","inbound_nodes":[[["conv4_block5_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block5_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block5_2_relu","inbound_nodes":[[["conv4_block5_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block5_3_conv","trainable":false,"dtype":"float32","filters":1024,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block5_3_conv","inbound_nodes":[[["conv4_block5_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block5_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block5_3_bn","inbound_nodes":[[["conv4_block5_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv4_block5_add","trainable":false,"dtype":"float32"},"name":"conv4_block5_add","inbound_nodes":[[["conv4_block4_out",0,0,{}],["conv4_block5_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block5_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block5_out","inbound_nodes":[[["conv4_block5_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block6_1_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block6_1_conv","inbound_nodes":[[["conv4_block5_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block6_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block6_1_bn","inbound_nodes":[[["conv4_block6_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block6_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block6_1_relu","inbound_nodes":[[["conv4_block6_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block6_2_conv","trainable":false,"dtype":"float32","filters":256,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block6_2_conv","inbound_nodes":[[["conv4_block6_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block6_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block6_2_bn","inbound_nodes":[[["conv4_block6_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block6_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block6_2_relu","inbound_nodes":[[["conv4_block6_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv4_block6_3_conv","trainable":false,"dtype":"float32","filters":1024,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv4_block6_3_conv","inbound_nodes":[[["conv4_block6_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv4_block6_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv4_block6_3_bn","inbound_nodes":[[["conv4_block6_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv4_block6_add","trainable":false,"dtype":"float32"},"name":"conv4_block6_add","inbound_nodes":[[["conv4_block5_out",0,0,{}],["conv4_block6_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv4_block6_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv4_block6_out","inbound_nodes":[[["conv4_block6_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block1_1_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[1,1],"strides":[2,2],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block1_1_conv","inbound_nodes":[[["conv4_block6_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block1_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block1_1_bn","inbound_nodes":[[["conv5_block1_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block1_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block1_1_relu","inbound_nodes":[[["conv5_block1_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block1_2_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block1_2_conv","inbound_nodes":[[["conv5_block1_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block1_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block1_2_bn","inbound_nodes":[[["conv5_block1_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block1_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block1_2_relu","inbound_nodes":[[["conv5_block1_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block1_0_conv","trainable":false,"dtype":"float32","filters":2048,"kernel_size":[1,1],"strides":[2,2],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block1_0_conv","inbound_nodes":[[["conv4_block6_out",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block1_3_conv","trainable":false,"dtype":"float32","filters":2048,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block1_3_conv","inbound_nodes":[[["conv5_block1_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block1_0_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block1_0_bn","inbound_nodes":[[["conv5_block1_0_conv",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block1_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block1_3_bn","inbound_nodes":[[["conv5_block1_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv5_block1_add","trainable":false,"dtype":"float32"},"name":"conv5_block1_add","inbound_nodes":[[["conv5_block1_0_bn",0,0,{}],["conv5_block1_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block1_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block1_out","inbound_nodes":[[["conv5_block1_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block2_1_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block2_1_conv","inbound_nodes":[[["conv5_block1_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block2_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block2_1_bn","inbound_nodes":[[["conv5_block2_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block2_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block2_1_relu","inbound_nodes":[[["conv5_block2_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block2_2_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block2_2_conv","inbound_nodes":[[["conv5_block2_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block2_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block2_2_bn","inbound_nodes":[[["conv5_block2_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block2_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block2_2_relu","inbound_nodes":[[["conv5_block2_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block2_3_conv","trainable":false,"dtype":"float32","filters":2048,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block2_3_conv","inbound_nodes":[[["conv5_block2_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block2_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block2_3_bn","inbound_nodes":[[["conv5_block2_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv5_block2_add","trainable":false,"dtype":"float32"},"name":"conv5_block2_add","inbound_nodes":[[["conv5_block1_out",0,0,{}],["conv5_block2_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block2_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block2_out","inbound_nodes":[[["conv5_block2_add",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block3_1_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block3_1_conv","inbound_nodes":[[["conv5_block2_out",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block3_1_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block3_1_bn","inbound_nodes":[[["conv5_block3_1_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block3_1_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block3_1_relu","inbound_nodes":[[["conv5_block3_1_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block3_2_conv","trainable":false,"dtype":"float32","filters":512,"kernel_size":[3,3],"strides":[1,1],"padding":"same","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block3_2_conv","inbound_nodes":[[["conv5_block3_1_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block3_2_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block3_2_bn","inbound_nodes":[[["conv5_block3_2_conv",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block3_2_relu","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block3_2_relu","inbound_nodes":[[["conv5_block3_2_bn",0,0,{}]]]},{"class_name":"Conv2D","config":{"name":"conv5_block3_3_conv","trainable":false,"dtype":"float32","filters":2048,"kernel_size":[1,1],"strides":[1,1],"padding":"valid","data_format":"channels_last","dilation_rate":[1,1],"groups":1,"activation":"linear","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null},"name":"conv5_block3_3_conv","inbound_nodes":[[["conv5_block3_2_relu",0,0,{}]]]},{"class_name":"BatchNormalization","config":{"name":"conv5_block3_3_bn","trainable":false,"dtype":"float32","axis":[3],"momentum":0.99,"epsilon":0.00001001,"center":true,"scale":true,"beta_initializer":{"class_name":"Zeros","config":{}},"gamma_initializer":{"class_name":"Ones","config":{}},"moving_mean_initializer":{"class_name":"Zeros","config":{}},"moving_variance_initializer":{"class_name":"Ones","config":{}},"beta_regularizer":null,"gamma_regularizer":null,"beta_constraint":null,"gamma_constraint":null},"name":"conv5_block3_3_bn","inbound_nodes":[[["conv5_block3_3_conv",0,0,{}]]]},{"class_name":"Add","config":{"name":"conv5_block3_add","trainable":false,"dtype":"float32"},"name":"conv5_block3_add","inbound_nodes":[[["conv5_block2_out",0,0,{}],["conv5_block3_3_bn",0,0,{}]]]},{"class_name":"Activation","config":{"name":"conv5_block3_out","trainable":false,"dtype":"float32","activation":"relu"},"name":"conv5_block3_out","inbound_nodes":[[["conv5_block3_add",0,0,{}]]]},{"class_name":"GlobalAveragePooling2D","config":{"name":"avg_pool","trainable":false,"dtype":"float32","data_format":"channels_last"},"name":"avg_pool","inbound_nodes":[[["conv5_block3_out",0,0,{}]]]}],"input_layers":[["input_1",0,0]],"output_layers":[["avg_pool",0,0]]}},{"class_name":"Dense","config":{"name":"dense","trainable":true,"dtype":"float32","units":9,"activation":"softmax","use_bias":true,"kernel_initializer":{"class_name":"GlorotUniform","config":{"seed":null}},"bias_initializer":{"class_name":"Zeros","config":{}},"kernel_regularizer":null,"bias_regularizer":null,"activity_regularizer":null,"kernel_constraint":null,"bias_constraint":null}}]}},"training_config":{"loss":"sparse_categorical_crossentropy","metrics":[[{"class_name":"MeanMetricWrapper","config":{"name":"accuracy","dtype":"float32","fn":"sparse_categorical_accuracy"}}]],"weighted_metrics":null,"loss_weights":null,"optimizer_config":{"class_name":"Adam","config":{"name":"Adam","learning_rate":0.0010000000474974513,"decay":0,"beta_1":0.8999999761581421,"beta_2":0.9990000128746033,"epsilon":1e-7,"amsgrad":false}}}},"weightsManifest":[{"paths":["group1-shard1of23.bin","group1-shard2of23.bin","group1-shard3of23.bin","group1-shard4of23.bin","group1-shard5of23.bin","group1-shard6of23.bin","group1-shard7of23.bin","group1-shard8of23.bin","group1-shard9of23.bin","group1-shard10of23.bin","group1-shard11of23.bin","group1-shard12of23.bin","group1-shard13of23.bin","group1-shard14of23.bin","group1-shard15of23.bin","group1-shard16of23.bin","group1-shard17of23.bin","group1-shard18of23.bin","group1-shard19of23.bin","group1-shard20of23.bin","group1-shard21of23.bin","group1-shard22of23.bin","group1-shard23of23.bin"],"weights":[{"name":"dense/kernel","shape":[2048,9],"dtype":"float32"},{"name":"dense/bias","shape":[9],"dtype":"float32"},{"name":"conv1_conv/kernel","shape":[7,7,3,64],"dtype":"float32"},{"name":"conv1_conv/bias","shape":[64],"dtype":"float32"},{"name":"conv1_bn/gamma","shape":[64],"dtype":"float32"},{"name":"conv1_bn/beta","shape":[64],"dtype":"float32"},{"name":"conv1_bn/moving_mean","shape":[64],"dtype":"float32"},{"name":"conv1_bn/moving_variance","shape":[64],"dtype":"float32"},{"name":"conv2_block1_1_conv/kernel","shape":[1,1,64,64],"dtype":"float32"},{"name":"conv2_block1_1_conv/bias","shape":[64],"dtype":"float32"},{"name":"conv2_block1_1_bn/gamma","shape":[64],"dtype":"float32"},{"name":"conv2_block1_1_bn/beta","shape":[64],"dtype":"float32"},{"name":"conv2_block1_1_bn/moving_mean","shape":[64],"dtype":"float32"},{"name":"conv2_block1_1_bn/moving_variance","shape":[64],"dtype":"float32"},{"name":"conv2_block1_2_conv/kernel","shape":[3,3,64,64],"dtype":"float32"},{"name":"conv2_block1_2_conv/bias","shape":[64],"dtype":"float32"},{"name":"conv2_block1_2_bn/gamma","shape":[64],"dtype":"float32"},{"name":"conv2_block1_2_bn/beta","shape":[64],"dtype":"float32"},{"name":"conv2_block1_2_bn/moving_mean","shape":[64],"dtype":"float32"},{"name":"conv2_block1_2_bn/moving_variance","shape":[64],"dtype":"float32"},{"name":"conv2_block1_0_conv/kernel","shape":[1,1,64,256],"dtype":"float32"},{"name":"conv2_block1_0_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv2_block1_3_conv/kernel","shape":[1,1,64,256],"dtype":"float32"},{"name":"conv2_block1_3_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv2_block1_0_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv2_block1_0_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv2_block1_0_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv2_block1_0_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv2_block1_3_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv2_block1_3_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv2_block1_3_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv2_block1_3_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv2_block2_1_conv/kernel","shape":[1,1,256,64],"dtype":"float32"},{"name":"conv2_block2_1_conv/bias","shape":[64],"dtype":"float32"},{"name":"conv2_block2_1_bn/gamma","shape":[64],"dtype":"float32"},{"name":"conv2_block2_1_bn/beta","shape":[64],"dtype":"float32"},{"name":"conv2_block2_1_bn/moving_mean","shape":[64],"dtype":"float32"},{"name":"conv2_block2_1_bn/moving_variance","shape":[64],"dtype":"float32"},{"name":"conv2_block2_2_conv/kernel","shape":[3,3,64,64],"dtype":"float32"},{"name":"conv2_block2_2_conv/bias","shape":[64],"dtype":"float32"},{"name":"conv2_block2_2_bn/gamma","shape":[64],"dtype":"float32"},{"name":"conv2_block2_2_bn/beta","shape":[64],"dtype":"float32"},{"name":"conv2_block2_2_bn/moving_mean","shape":[64],"dtype":"float32"},{"name":"conv2_block2_2_bn/moving_variance","shape":[64],"dtype":"float32"},{"name":"conv2_block2_3_conv/kernel","shape":[1,1,64,256],"dtype":"float32"},{"name":"conv2_block2_3_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv2_block2_3_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv2_block2_3_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv2_block2_3_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv2_block2_3_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv2_block3_1_conv/kernel","shape":[1,1,256,64],"dtype":"float32"},{"name":"conv2_block3_1_conv/bias","shape":[64],"dtype":"float32"},{"name":"conv2_block3_1_bn/gamma","shape":[64],"dtype":"float32"},{"name":"conv2_block3_1_bn/beta","shape":[64],"dtype":"float32"},{"name":"conv2_block3_1_bn/moving_mean","shape":[64],"dtype":"float32"},{"name":"conv2_block3_1_bn/moving_variance","shape":[64],"dtype":"float32"},{"name":"conv2_block3_2_conv/kernel","shape":[3,3,64,64],"dtype":"float32"},{"name":"conv2_block3_2_conv/bias","shape":[64],"dtype":"float32"},{"name":"conv2_block3_2_bn/gamma","shape":[64],"dtype":"float32"},{"name":"conv2_block3_2_bn/beta","shape":[64],"dtype":"float32"},{"name":"conv2_block3_2_bn/moving_mean","shape":[64],"dtype":"float32"},{"name":"conv2_block3_2_bn/moving_variance","shape":[64],"dtype":"float32"},{"name":"conv2_block3_3_conv/kernel","shape":[1,1,64,256],"dtype":"float32"},{"name":"conv2_block3_3_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv2_block3_3_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv2_block3_3_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv2_block3_3_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv2_block3_3_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv3_block1_1_conv/kernel","shape":[1,1,256,128],"dtype":"float32"},{"name":"conv3_block1_1_conv/bias","shape":[128],"dtype":"float32"},{"name":"conv3_block1_1_bn/gamma","shape":[128],"dtype":"float32"},{"name":"conv3_block1_1_bn/beta","shape":[128],"dtype":"float32"},{"name":"conv3_block1_1_bn/moving_mean","shape":[128],"dtype":"float32"},{"name":"conv3_block1_1_bn/moving_variance","shape":[128],"dtype":"float32"},{"name":"conv3_block1_2_conv/kernel","shape":[3,3,128,128],"dtype":"float32"},{"name":"conv3_block1_2_conv/bias","shape":[128],"dtype":"float32"},{"name":"conv3_block1_2_bn/gamma","shape":[128],"dtype":"float32"},{"name":"conv3_block1_2_bn/beta","shape":[128],"dtype":"float32"},{"name":"conv3_block1_2_bn/moving_mean","shape":[128],"dtype":"float32"},{"name":"conv3_block1_2_bn/moving_variance","shape":[128],"dtype":"float32"},{"name":"conv3_block1_0_conv/kernel","shape":[1,1,256,512],"dtype":"float32"},{"name":"conv3_block1_0_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv3_block1_3_conv/kernel","shape":[1,1,128,512],"dtype":"float32"},{"name":"conv3_block1_3_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv3_block1_0_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv3_block1_0_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv3_block1_0_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv3_block1_0_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv3_block1_3_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv3_block1_3_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv3_block1_3_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv3_block1_3_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv3_block2_1_conv/kernel","shape":[1,1,512,128],"dtype":"float32"},{"name":"conv3_block2_1_conv/bias","shape":[128],"dtype":"float32"},{"name":"conv3_block2_1_bn/gamma","shape":[128],"dtype":"float32"},{"name":"conv3_block2_1_bn/beta","shape":[128],"dtype":"float32"},{"name":"conv3_block2_1_bn/moving_mean","shape":[128],"dtype":"float32"},{"name":"conv3_block2_1_bn/moving_variance","shape":[128],"dtype":"float32"},{"name":"conv3_block2_2_conv/kernel","shape":[3,3,128,128],"dtype":"float32"},{"name":"conv3_block2_2_conv/bias","shape":[128],"dtype":"float32"},{"name":"conv3_block2_2_bn/gamma","shape":[128],"dtype":"float32"},{"name":"conv3_block2_2_bn/beta","shape":[128],"dtype":"float32"},{"name":"conv3_block2_2_bn/moving_mean","shape":[128],"dtype":"float32"},{"name":"conv3_block2_2_bn/moving_variance","shape":[128],"dtype":"float32"},{"name":"conv3_block2_3_conv/kernel","shape":[1,1,128,512],"dtype":"float32"},{"name":"conv3_block2_3_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv3_block2_3_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv3_block2_3_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv3_block2_3_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv3_block2_3_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv3_block3_1_conv/kernel","shape":[1,1,512,128],"dtype":"float32"},{"name":"conv3_block3_1_conv/bias","shape":[128],"dtype":"float32"},{"name":"conv3_block3_1_bn/gamma","shape":[128],"dtype":"float32"},{"name":"conv3_block3_1_bn/beta","shape":[128],"dtype":"float32"},{"name":"conv3_block3_1_bn/moving_mean","shape":[128],"dtype":"float32"},{"name":"conv3_block3_1_bn/moving_variance","shape":[128],"dtype":"float32"},{"name":"conv3_block3_2_conv/kernel","shape":[3,3,128,128],"dtype":"float32"},{"name":"conv3_block3_2_conv/bias","shape":[128],"dtype":"float32"},{"name":"conv3_block3_2_bn/gamma","shape":[128],"dtype":"float32"},{"name":"conv3_block3_2_bn/beta","shape":[128],"dtype":"float32"},{"name":"conv3_block3_2_bn/moving_mean","shape":[128],"dtype":"float32"},{"name":"conv3_block3_2_bn/moving_variance","shape":[128],"dtype":"float32"},{"name":"conv3_block3_3_conv/kernel","shape":[1,1,128,512],"dtype":"float32"},{"name":"conv3_block3_3_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv3_block3_3_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv3_block3_3_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv3_block3_3_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv3_block3_3_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv3_block4_1_conv/kernel","shape":[1,1,512,128],"dtype":"float32"},{"name":"conv3_block4_1_conv/bias","shape":[128],"dtype":"float32"},{"name":"conv3_block4_1_bn/gamma","shape":[128],"dtype":"float32"},{"name":"conv3_block4_1_bn/beta","shape":[128],"dtype":"float32"},{"name":"conv3_block4_1_bn/moving_mean","shape":[128],"dtype":"float32"},{"name":"conv3_block4_1_bn/moving_variance","shape":[128],"dtype":"float32"},{"name":"conv3_block4_2_conv/kernel","shape":[3,3,128,128],"dtype":"float32"},{"name":"conv3_block4_2_conv/bias","shape":[128],"dtype":"float32"},{"name":"conv3_block4_2_bn/gamma","shape":[128],"dtype":"float32"},{"name":"conv3_block4_2_bn/beta","shape":[128],"dtype":"float32"},{"name":"conv3_block4_2_bn/moving_mean","shape":[128],"dtype":"float32"},{"name":"conv3_block4_2_bn/moving_variance","shape":[128],"dtype":"float32"},{"name":"conv3_block4_3_conv/kernel","shape":[1,1,128,512],"dtype":"float32"},{"name":"conv3_block4_3_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv3_block4_3_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv3_block4_3_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv3_block4_3_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv3_block4_3_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv4_block1_1_conv/kernel","shape":[1,1,512,256],"dtype":"float32"},{"name":"conv4_block1_1_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block1_1_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block1_1_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block1_1_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block1_1_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block1_2_conv/kernel","shape":[3,3,256,256],"dtype":"float32"},{"name":"conv4_block1_2_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block1_2_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block1_2_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block1_2_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block1_2_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block1_0_conv/kernel","shape":[1,1,512,1024],"dtype":"float32"},{"name":"conv4_block1_0_conv/bias","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_3_conv/kernel","shape":[1,1,256,1024],"dtype":"float32"},{"name":"conv4_block1_3_conv/bias","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_0_bn/gamma","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_0_bn/beta","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_0_bn/moving_mean","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_0_bn/moving_variance","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_3_bn/gamma","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_3_bn/beta","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_3_bn/moving_mean","shape":[1024],"dtype":"float32"},{"name":"conv4_block1_3_bn/moving_variance","shape":[1024],"dtype":"float32"},{"name":"conv4_block2_1_conv/kernel","shape":[1,1,1024,256],"dtype":"float32"},{"name":"conv4_block2_1_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block2_1_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block2_1_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block2_1_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block2_1_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block2_2_conv/kernel","shape":[3,3,256,256],"dtype":"float32"},{"name":"conv4_block2_2_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block2_2_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block2_2_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block2_2_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block2_2_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block2_3_conv/kernel","shape":[1,1,256,1024],"dtype":"float32"},{"name":"conv4_block2_3_conv/bias","shape":[1024],"dtype":"float32"},{"name":"conv4_block2_3_bn/gamma","shape":[1024],"dtype":"float32"},{"name":"conv4_block2_3_bn/beta","shape":[1024],"dtype":"float32"},{"name":"conv4_block2_3_bn/moving_mean","shape":[1024],"dtype":"float32"},{"name":"conv4_block2_3_bn/moving_variance","shape":[1024],"dtype":"float32"},{"name":"conv4_block3_1_conv/kernel","shape":[1,1,1024,256],"dtype":"float32"},{"name":"conv4_block3_1_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block3_1_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block3_1_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block3_1_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block3_1_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block3_2_conv/kernel","shape":[3,3,256,256],"dtype":"float32"},{"name":"conv4_block3_2_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block3_2_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block3_2_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block3_2_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block3_2_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block3_3_conv/kernel","shape":[1,1,256,1024],"dtype":"float32"},{"name":"conv4_block3_3_conv/bias","shape":[1024],"dtype":"float32"},{"name":"conv4_block3_3_bn/gamma","shape":[1024],"dtype":"float32"},{"name":"conv4_block3_3_bn/beta","shape":[1024],"dtype":"float32"},{"name":"conv4_block3_3_bn/moving_mean","shape":[1024],"dtype":"float32"},{"name":"conv4_block3_3_bn/moving_variance","shape":[1024],"dtype":"float32"},{"name":"conv4_block4_1_conv/kernel","shape":[1,1,1024,256],"dtype":"float32"},{"name":"conv4_block4_1_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block4_1_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block4_1_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block4_1_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block4_1_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block4_2_conv/kernel","shape":[3,3,256,256],"dtype":"float32"},{"name":"conv4_block4_2_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block4_2_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block4_2_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block4_2_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block4_2_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block4_3_conv/kernel","shape":[1,1,256,1024],"dtype":"float32"},{"name":"conv4_block4_3_conv/bias","shape":[1024],"dtype":"float32"},{"name":"conv4_block4_3_bn/gamma","shape":[1024],"dtype":"float32"},{"name":"conv4_block4_3_bn/beta","shape":[1024],"dtype":"float32"},{"name":"conv4_block4_3_bn/moving_mean","shape":[1024],"dtype":"float32"},{"name":"conv4_block4_3_bn/moving_variance","shape":[1024],"dtype":"float32"},{"name":"conv4_block5_1_conv/kernel","shape":[1,1,1024,256],"dtype":"float32"},{"name":"conv4_block5_1_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block5_1_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block5_1_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block5_1_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block5_1_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block5_2_conv/kernel","shape":[3,3,256,256],"dtype":"float32"},{"name":"conv4_block5_2_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block5_2_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block5_2_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block5_2_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block5_2_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block5_3_conv/kernel","shape":[1,1,256,1024],"dtype":"float32"},{"name":"conv4_block5_3_conv/bias","shape":[1024],"dtype":"float32"},{"name":"conv4_block5_3_bn/gamma","shape":[1024],"dtype":"float32"},{"name":"conv4_block5_3_bn/beta","shape":[1024],"dtype":"float32"},{"name":"conv4_block5_3_bn/moving_mean","shape":[1024],"dtype":"float32"},{"name":"conv4_block5_3_bn/moving_variance","shape":[1024],"dtype":"float32"},{"name":"conv4_block6_1_conv/kernel","shape":[1,1,1024,256],"dtype":"float32"},{"name":"conv4_block6_1_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block6_1_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block6_1_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block6_1_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block6_1_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block6_2_conv/kernel","shape":[3,3,256,256],"dtype":"float32"},{"name":"conv4_block6_2_conv/bias","shape":[256],"dtype":"float32"},{"name":"conv4_block6_2_bn/gamma","shape":[256],"dtype":"float32"},{"name":"conv4_block6_2_bn/beta","shape":[256],"dtype":"float32"},{"name":"conv4_block6_2_bn/moving_mean","shape":[256],"dtype":"float32"},{"name":"conv4_block6_2_bn/moving_variance","shape":[256],"dtype":"float32"},{"name":"conv4_block6_3_conv/kernel","shape":[1,1,256,1024],"dtype":"float32"},{"name":"conv4_block6_3_conv/bias","shape":[1024],"dtype":"float32"},{"name":"conv4_block6_3_bn/gamma","shape":[1024],"dtype":"float32"},{"name":"conv4_block6_3_bn/beta","shape":[1024],"dtype":"float32"},{"name":"conv4_block6_3_bn/moving_mean","shape":[1024],"dtype":"float32"},{"name":"conv4_block6_3_bn/moving_variance","shape":[1024],"dtype":"float32"},{"name":"conv5_block1_1_conv/kernel","shape":[1,1,1024,512],"dtype":"float32"},{"name":"conv5_block1_1_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv5_block1_1_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv5_block1_1_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv5_block1_1_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv5_block1_1_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv5_block1_2_conv/kernel","shape":[3,3,512,512],"dtype":"float32"},{"name":"conv5_block1_2_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv5_block1_2_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv5_block1_2_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv5_block1_2_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv5_block1_2_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv5_block1_0_conv/kernel","shape":[1,1,1024,2048],"dtype":"float32"},{"name":"conv5_block1_0_conv/bias","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_3_conv/kernel","shape":[1,1,512,2048],"dtype":"float32"},{"name":"conv5_block1_3_conv/bias","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_0_bn/gamma","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_0_bn/beta","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_0_bn/moving_mean","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_0_bn/moving_variance","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_3_bn/gamma","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_3_bn/beta","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_3_bn/moving_mean","shape":[2048],"dtype":"float32"},{"name":"conv5_block1_3_bn/moving_variance","shape":[2048],"dtype":"float32"},{"name":"conv5_block2_1_conv/kernel","shape":[1,1,2048,512],"dtype":"float32"},{"name":"conv5_block2_1_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv5_block2_1_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv5_block2_1_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv5_block2_1_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv5_block2_1_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv5_block2_2_conv/kernel","shape":[3,3,512,512],"dtype":"float32"},{"name":"conv5_block2_2_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv5_block2_2_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv5_block2_2_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv5_block2_2_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv5_block2_2_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv5_block2_3_conv/kernel","shape":[1,1,512,2048],"dtype":"float32"},{"name":"conv5_block2_3_conv/bias","shape":[2048],"dtype":"float32"},{"name":"conv5_block2_3_bn/gamma","shape":[2048],"dtype":"float32"},{"name":"conv5_block2_3_bn/beta","shape":[2048],"dtype":"float32"},{"name":"conv5_block2_3_bn/moving_mean","shape":[2048],"dtype":"float32"},{"name":"conv5_block2_3_bn/moving_variance","shape":[2048],"dtype":"float32"},{"name":"conv5_block3_1_conv/kernel","shape":[1,1,2048,512],"dtype":"float32"},{"name":"conv5_block3_1_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv5_block3_1_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv5_block3_1_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv5_block3_1_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv5_block3_1_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv5_block3_2_conv/kernel","shape":[3,3,512,512],"dtype":"float32"},{"name":"conv5_block3_2_conv/bias","shape":[512],"dtype":"float32"},{"name":"conv5_block3_2_bn/gamma","shape":[512],"dtype":"float32"},{"name":"conv5_block3_2_bn/beta","shape":[512],"dtype":"float32"},{"name":"conv5_block3_2_bn/moving_mean","shape":[512],"dtype":"float32"},{"name":"conv5_block3_2_bn/moving_variance","shape":[512],"dtype":"float32"},{"name":"conv5_block3_3_conv/kernel","shape":[1,1,512,2048],"dtype":"float32"},{"name":"conv5_block3_3_conv/bias","shape":[2048],"dtype":"float32"},{"name":"conv5_block3_3_bn/gamma","shape":[2048],"dtype":"float32"},{"name":"conv5_block3_3_bn/beta","shape":[2048],"dtype":"float32"},{"name":"conv5_block3_3_bn/moving_mean","shape":[2048],"dtype":"float32"},{"name":"conv5_block3_3_bn/moving_variance","shape":[2048],"dtype":"float32"}]}]}');var oF=n(650);window.onload=function(){var e=document.getElementById("root"),t=document.createElement("img");t.setAttribute("src",oF),t.setAttribute("id","img"),e.append(t),console.log(iF)}})(),webpackGhPages=a})();